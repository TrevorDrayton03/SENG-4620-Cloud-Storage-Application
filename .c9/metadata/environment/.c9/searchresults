{"changed":true,"filter":false,"title":"Search Results","tooltip":"/.c9/searchresults","value":"Searching for \u0001upload_to_s3_bucket_root\u0001 in\u0001/clouddrive\u0001 (Found 1 match in 1 file)\n\n/clouddrive/clouddrive/myapp/s3upload.py:\n\t44: def upload_to_s3_bucket_root(bucketname, filename):\n\nFound 1 match in 1 file \n\n","undoManager":{"mark":-2,"position":13,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":[" "],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":[" "],"id":2},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001fil\u0001 in\u0001/clouddrive\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/clouddrive/settings.py:",""]},{"start":{"row":3,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["\t7: of this software and associated documentation files (the \"Software\"), to deal","\t31: BASE_DIR = Path(__file__).resolve().parent.parent","\t42: #         'NAME': 'clouddrivedb',                      # Or path to database file if using sqlite3.","\t89: # Absolute filesystem path to the directory that will hold user-uploaded files.","\t102: # Absolute path to the directory static files should be collected to.","\t103: # Don't put anything in this directory yourself; store your static files","\t104: # in apps' \"static/\" subdirectories and in STATICFILES_DIRS.","\t108: # URL prefix for static files.","\t112: # Additional locations of static files","\t113: STATICFILES_DIRS = [","\t122: # List of finder classes that know how to find static files in","\t124: STATICFILES_FINDERS = (","\t125:     'django.contrib.staticfiles.finders.FileSystemFinder',","\t126:     'django.contrib.staticfiles.finders.AppDirectoriesFinder',","\t127: #    'django.contrib.staticfiles.finders.DefaultStorageFinder',","\t135:     'django.template.loaders.filesystem.Loader',","\t182:     #os.path.join(os.path.realpath(__file__), '../templates'),","\t192:     'django.contrib.staticfiles',","",""]},{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["/clouddrive/urls.py:",""]},{"start":{"row":23,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["\t7: of this software and associated documentation files (the \"Software\"), to deal","\t35: #     url(r'^profile/$', 'myapp.views.profile_view'),","\t37: #     url(r'^delete/(?P<filename>[\\w\\. ]+)$', 'myapp.views.delete_view'),","\t54: #     path(r'^profile/$', views.profile_view, name=\"profile_view\"),","\t56: #     path(r'^delete/(?P<filename>[\\w\\. ]+)$', views.delete_view, name=\"elete_view\"),","",""]},{"start":{"row":29,"column":0},"end":{"row":32,"column":0},"action":"insert","lines":["/clouddrive/wsgi.py:","\t25: # file. This includes Django's development server, if the WSGI_APPLICATION","",""]},{"start":{"row":32,"column":0},"end":{"row":33,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/lab8_updated (2).pdf:",""]},{"start":{"row":33,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["\t13: <</Filter/FlateDecode/Length 4423>>","\t72: <</Type/FontDescriptor/FontName/TimesNewRomanPSMT/Flags 32/ItalicAngle 0/Ascent 891/Descent -216/CapHeight 693/AvgWidth 401/MaxWidth 2614/FontWeight 400/XHeight 250/Leading 42/StemV 40/FontBBox[ -568 -216 2046 693] /FontFile2 102 0 R>>","\t93: <</Type/FontDescriptor/FontName/SymbolMT/Flags 32/ItalicAngle 0/Ascent 1005/Descent -216/CapHeight 693/AvgWidth 600/MaxWidth 1113/FontWeight 400/XHeight 250/StemV 60/FontBBox[ 0 -216 1113 693] /FontFile2 106 0 R>>","\t105: <</Type/FontDescriptor/FontName/BCDEEE+CourierNewPSMT/Flags 32/ItalicAngle 0/Ascent 833/Descent -188/CapHeight 613/AvgWidth 600/MaxWidth 744/FontWeight 400/XHeight 250/StemV 60/FontBBox[ -122 -188 623 613] /FontFile2 110 0 R>>","\t117: <</Type/FontDescriptor/FontName/BCDFEE+Consolas/Flags 32/ItalicAngle 0/Ascent 743/Descent -257/CapHeight 743/AvgWidth 550/MaxWidth 1109/FontWeight 400/XHeight 250/StemV 55/FontBBox[ -432 -257 677 743] /FontFile2 113 0 R>>","\t132: <</Type/FontDescriptor/FontName/BCDGEE+Consolas/Flags 32/ItalicAngle 0/Ascent 743/Descent -257/CapHeight 743/AvgWidth 550/MaxWidth 1109/FontWeight 400/XHeight 250/StemV 55/FontBBox[ -432 -257 677 743] /FontFile2 113 0 R>>","\t138: <</Filter/FlateDecode/Length 865>>","\t149: <</Type/XObject/Subtype/Image/Width 485/Height 319/ColorSpace/DeviceRGB/BitsPerComponent 8/Interpolate false/Filter/FlateDecode/Length 21502>>","\t224: <</Type/ObjStm/N 55/First 419/Filter/FlateDecode/Length 1030>>","\t248: <</Filter/FlateDecode/Length 339>>","\t256: <</Filter/FlateDecode/Length 50357/Length1 105912>>","\t457: <</Filter/FlateDecode/Length 226>>","\t464: <</Filter/FlateDecode/Length 6033/Length1 11088>>","\t505: <</Filter/FlateDecode/Length 18868/Length1 44088>>","\t596: <</Filter/FlateDecode/Length 226>>","\t603: <</Filter/FlateDecode/Length 23034/Length1 52144>>","\t757: <</Type/XRef/Size 118/W[ 1 4 2] /Root 1 0 R/Info 39 0 R/ID[<A1FFD79CC8844B42B1E3C20E16E7FECF><A1FFD79CC8844B42B1E3C20E16E7FECF>] /Filter/FlateDecode/Length 324>>","",""]},{"start":{"row":51,"column":0},"end":{"row":52,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/clouddrive/settings.py:",""]},{"start":{"row":52,"column":0},"end":{"row":71,"column":0},"action":"insert","lines":["\t7: of this software and associated documentation files (the \"Software\"), to deal","\t31: BASE_DIR = Path(__file__).resolve().parent.parent","\t42: #         'NAME': 'clouddrivedb',                      # Or path to database file if using sqlite3.","\t89: # Absolute filesystem path to the directory that will hold user-uploaded files.","\t102: # Absolute path to the directory static files should be collected to.","\t103: # Don't put anything in this directory yourself; store your static files","\t104: # in apps' \"static/\" subdirectories and in STATICFILES_DIRS.","\t108: # URL prefix for static files.","\t112: # Additional locations of static files","\t113: STATICFILES_DIRS = [","\t122: # List of finder classes that know how to find static files in","\t124: STATICFILES_FINDERS = (","\t125:     'django.contrib.staticfiles.finders.FileSystemFinder',","\t126:     'django.contrib.staticfiles.finders.AppDirectoriesFinder',","\t127: #    'django.contrib.staticfiles.finders.DefaultStorageFinder',","\t135:     'django.template.loaders.filesystem.Loader',","\t182:     #os.path.join(os.path.realpath(__file__), '../templates'),","\t192:     'django.contrib.staticfiles',","",""]},{"start":{"row":71,"column":0},"end":{"row":72,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/clouddrive/urls.py:",""]},{"start":{"row":72,"column":0},"end":{"row":78,"column":0},"action":"insert","lines":["\t7: of this software and associated documentation files (the \"Software\"), to deal","\t35: #     url(r'^profile/$', 'myapp.views.profile_view'),","\t37: #     url(r'^delete/(?P<filename>[\\w\\. ]+)$', 'myapp.views.delete_view'),","\t54: #     path(r'^profile/$', views.profile_view, name=\"profile_view\"),","\t56: #     path(r'^delete/(?P<filename>[\\w\\. ]+)$', views.delete_view, name=\"elete_view\"),","",""]},{"start":{"row":78,"column":0},"end":{"row":79,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/clouddrive/wsgi.py:",""]},{"start":{"row":79,"column":0},"end":{"row":81,"column":0},"action":"insert","lines":["\t25: # file. This includes Django's development server, if the WSGI_APPLICATION","",""]},{"start":{"row":81,"column":0},"end":{"row":82,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/forms.py:",""]},{"start":{"row":82,"column":0},"end":{"row":86,"column":0},"action":"insert","lines":["\t7: of this software and associated documentation files (the \"Software\"), to deal","\t31: class UploadFileForm(forms.Form):","\t32:     myfilefield  = forms.FileField()","",""]},{"start":{"row":86,"column":0},"end":{"row":87,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/s3upload.py:",""]},{"start":{"row":87,"column":0},"end":{"row":104,"column":0},"action":"insert","lines":["\t7: of this software and associated documentation files (the \"Software\"), to deal","\t36: def upload_to_s3_bucket_path(bucketname, path, filename):","\t38: \tfullkeyname=os.path.join(path,filename)","\t40: \t# key.set_contents_from_filename(filename, cb=percent_cb, num_cb=10)","\t41: \tconn.Object(bucketname, fullkeyname).put(Body=open(filename, 'rb'))","\t44: def upload_to_s3_bucket_root(bucketname, filename):","\t46: \tkey = mybucket.new_key(filename)","\t47: \tkey.set_contents_from_filename(filename, cb=percent_cb, num_cb=10)","\t49: def getuserfiles(bucketname,username):","\t53: \tuserfiles = {}","\t57: \t\tfilename = key.key","\t58: \t\tfilename=filename.replace(username+'/media/','') #this does not appear to change the filename","\t62: \t\tuserfiles[filename]=value","\t65: \treturn userfiles,totalsize","\t67: def delete_from_s3(bucketname, username,filename):","\t69: \tmybucket.delete_key(username+'/media/'+filename)","",""]},{"start":{"row":104,"column":0},"end":{"row":105,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/tests.py:",""]},{"start":{"row":105,"column":0},"end":{"row":107,"column":0},"action":"insert","lines":["\t2: This file demonstrates writing tests using the unittest module. These will pass","",""]},{"start":{"row":107,"column":0},"end":{"row":108,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/urls.py:",""]},{"start":{"row":108,"column":0},"end":{"row":111,"column":0},"action":"insert","lines":["\t10:     path('profile/', views.profile_view, name=\"profile_view\"),","\t12:     path('delete/(?P<filename>[\\. ]+)$', views.delete_view, name=\"delete_view\"),","",""]},{"start":{"row":111,"column":0},"end":{"row":112,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/views.py:",""]},{"start":{"row":112,"column":0},"end":{"row":136,"column":0},"action":"insert","lines":["\t7: of this software and associated documentation files (the \"Software\"), to deal","\t29: from .forms import LoginForm, UploadFileForm","\t45: def profile_view(request):","\t57: \treturn render(request, 'profile.html',{'form': form, 'username': username, 'email': email, 'fname':fname, 'lname': lname})","\t69: def handle_uploaded_file(f,username):","\t70: \tuploadfilename=f.name","\t71: \twith open(uploadfilename, 'wb+') as destination:","\t75: \tupload_to_s3_bucket_path('seng4620bucket', username, uploadfilename)","\t76: \treturn uploadfilename","\t80: def delete_view(request,filename):","\t82: \tdelete_from_s3('seng4620bucket', username,filename)","\t83: \tuserfiles,totalsize = getuserfiles('seng4620bucket', username)","\t86: \treturn render(request, 'index.html',{'username':username,'userfiles': userfiles,'totalsize':totalsize,'limit':limit,'percentused':percentused})","\t92: \t\tform = UploadFileForm(request.POST, request.FILES)","\t95: \t\t\toutputfilename = handle_uploaded_file(request.FILES['myfilefield'],username)","\t96: \t\t\tuserfiles,totalsize = getuserfiles('seng4620bucket', username)","\t99: \t\t\treturn render(request,'index.html',{'username':username,'userfiles': userfiles,'totalsize':totalsize,'limit':limit,'percentused':percentused})","\t101: \t\tform = UploadFileForm() ","\t115: \t\t\t\tuserfiles,totalsize = getuserfiles('seng4620bucket', username)","\t118: \t\t\t\treturn render(request,'index.html',{'username':username,'userfiles': userfiles,'totalsize':totalsize,'limit':limit,'percentused':percentused})","\t122: \t\t\tuserfiles,totalsize = getuserfiles('seng4620bucket', username)","\t125: \t\t\treturn render(request,'index.html',{'username':username,'userfiles': userfiles,'totalsize':totalsize,'limit':limit,'percentused':percentused})","\t131: \treturn render(request,'filemanager.html', {})","",""]},{"start":{"row":136,"column":0},"end":{"row":137,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/filemanager.html:",""]},{"start":{"row":137,"column":0},"end":{"row":144,"column":0},"action":"insert","lines":["\t72: \t<script src=\"/static/elFinder/js/commands/getfile.js\"></script>","\t74: \t<script src=\"/static/elFinder/js/commands/mkfile.js\"></script>","\t161: \t\t\t\t\tgetFileCallback : function(files, fm) {","\t162: \t\t\t\t\t\tconsole.log(files);","\t165: \t\t\t\t\t\tgetfile : {","\t199: <a href='/profile'>View/Edit Profile</a> | ","",""]},{"start":{"row":144,"column":0},"end":{"row":145,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/index.html:",""]},{"start":{"row":145,"column":0},"end":{"row":150,"column":0},"action":"insert","lines":["\t31: <td width=\"500\"><h5>File</h5></td>","\t37: {% for key,val in userfiles.items %}","\t48: <a href='/upload'>Upload File</a>|","\t49: <a href='/profile'>View/Edit Profile</a> | ","",""]},{"start":{"row":150,"column":0},"end":{"row":151,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/index1.html:",""]},{"start":{"row":151,"column":0},"end":{"row":153,"column":0},"action":"insert","lines":["\t29: <a href='/profile'>View/Edit Profile</a> | ","",""]},{"start":{"row":153,"column":0},"end":{"row":154,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/jobstatus.html:",""]},{"start":{"row":154,"column":0},"end":{"row":156,"column":0},"action":"insert","lines":["\t49: <h4>Click <a href=\"http://mi_raw_data.s3.amazonaws.com/{{outputfilename}}\">here</a> to download transcoded video.</h4>","",""]},{"start":{"row":156,"column":0},"end":{"row":157,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/list.html:",""]},{"start":{"row":157,"column":0},"end":{"row":163,"column":0},"action":"insert","lines":["\t5: \t\t<title>Minimal Django File Upload Example</title>\t","\t13: \t\t\t\t<li><a href=\"{{ document.docfile.url }}\">{{ document.docfile.name }}</a></li>","\t24: \t\t\t<p>{{ form.docfile.label_tag }} {{ form.docfile.help_text }}</p>","\t26: \t\t\t\t{{ form.docfile.errors }}","\t27: \t\t\t\t{{ form.docfile }}","",""]},{"start":{"row":163,"column":0},"end":{"row":164,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/process.html:",""]},{"start":{"row":164,"column":0},"end":{"row":167,"column":0},"action":"insert","lines":["\t33: <h4>Image filter has been successfully applied. </h4>","\t36: <img src = '/static/output/{{outputfilename}}' width='800px' >","",""]},{"start":{"row":167,"column":0},"end":{"row":168,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/profile.html:",""]},{"start":{"row":168,"column":0},"end":{"row":172,"column":0},"action":"insert","lines":["\t25: <h3>Profile</h3>","\t62: <a href='/upload'>Upload File</a>|","\t63: <a href='/profile'>View/Edit Profile</a> | ","",""]},{"start":{"row":172,"column":0},"end":{"row":173,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/upload.html:",""]},{"start":{"row":173,"column":0},"end":{"row":178,"column":0},"action":"insert","lines":["\t34:             \t{{ form.myfilefield.errors }}","\t35:                 {{ form.myfilefield }}","\t42: <a href='/upload'>Upload File</a>|","\t43: <a href='/profile'>View/Edit Profile</a> | ","",""]},{"start":{"row":178,"column":0},"end":{"row":179,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/README.rst:",""]},{"start":{"row":179,"column":0},"end":{"row":183,"column":0},"action":"insert","lines":["\t5: jQuery-based file browser.","\t8: underlying file system. django-elfinder uses Django models to store the","\t9: files and directories.","",""]},{"start":{"row":183,"column":0},"end":{"row":184,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/docs/conf.py:",""]},{"start":{"row":184,"column":0},"end":{"row":206,"column":0},"action":"insert","lines":["\t3: # django-elfinder documentation build configuration file, created by","\t6: # This file is execfile()d with the current directory set to its containing dir.","\t9: # autogenerated file.","\t33: # The suffix of source filenames.","\t36: # The encoding of source files.","\t65: # List of patterns, relative to source directory, that match files and","\t66: # directories to ignore when looking for source files.","\t111: # The name of an image file (relative to this directory) to place at the top","\t115: # The name of an image file (within the static path) to use as favicon of the","\t116: # docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32","\t120: # Add any paths that contain custom static files (such as style sheets) here,","\t121: # relative to this directory. They are copied after the builtin static files,","\t122: # so a file named \"default.css\" will overwrite the builtin \"default.css\".","\t158: # If true, an OpenSearch description file will be output, and all pages will","\t163: # This is the file name suffix for HTML files (e.g. \".xhtml\").","\t164: #html_file_suffix = None","\t166: # Output file base name for HTML help builder.","\t178: # Grouping the document tree into LaTeX files. List of tuples","\t179: # (source start file, target name, title, author, documentclass [howto/manual]).","\t185: # The name of an image file (relative to this directory) to place at the top of","\t212: # (source start file, name, description, authors, manual section).","",""]},{"start":{"row":206,"column":0},"end":{"row":207,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/docs/index.rst:",""]},{"start":{"row":207,"column":0},"end":{"row":211,"column":0},"action":"insert","lines":["\t5: jQuery-based file browser.","\t8: underlying file system. django-elfinder uses Django models to store the","\t9: files and directories.","",""]},{"start":{"row":211,"column":0},"end":{"row":212,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/docs/Makefile:",""]},{"start":{"row":212,"column":0},"end":{"row":238,"column":0},"action":"insert","lines":["\t1: # Makefile for Sphinx documentation","\t19: \t@echo \"  html       to make standalone HTML files\"","\t20: \t@echo \"  dirhtml    to make HTML files named index.html in directories\"","\t21: \t@echo \"  singlehtml to make a single large HTML file\"","\t22: \t@echo \"  pickle     to make pickle files\"","\t23: \t@echo \"  json       to make JSON files\"","\t24: \t@echo \"  htmlhelp   to make HTML files and a HTML help project\"","\t25: \t@echo \"  qthelp     to make HTML files and a qthelp project\"","\t26: \t@echo \"  devhelp    to make HTML files and a Devhelp project\"","\t28: \t@echo \"  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter\"","\t29: \t@echo \"  latexpdf   to make LaTeX files and run them through pdflatex\"","\t30: \t@echo \"  text       to make text files\"","\t57: \t@echo \"Build finished; now you can process the pickle files.\"","\t62: \t@echo \"Build finished; now you can process the JSON files.\"","\t68: \t      \".hhp project file in $(BUILDDIR)/htmlhelp.\"","\t74: \t      \".qhcp project file in $(BUILDDIR)/qthelp, like this:\"","\t76: \t@echo \"To view the help file:\"","\t77: \t@echo \"# assistant -collectionFile $(BUILDDIR)/qthelp/django-elfinder.qhc\"","\t83: \t@echo \"To view the help file:\"","\t91: \t@echo \"Build finished. The epub file is in $(BUILDDIR)/epub.\"","\t96: \t@echo \"Build finished; the LaTeX files are in $(BUILDDIR)/latex.\"","\t102: \t@echo \"Running LaTeX files through pdflatex...\"","\t104: \t@echo \"pdflatex finished; the PDF files are in $(BUILDDIR)/latex.\"","\t109: \t@echo \"Build finished. The text files are in $(BUILDDIR)/text.\"","\t119: \t@echo \"The overview file is in $(BUILDDIR)/changes.\"","",""]},{"start":{"row":238,"column":0},"end":{"row":239,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/admin.py:",""]},{"start":{"row":239,"column":0},"end":{"row":243,"column":0},"action":"insert","lines":["\t3: from .models import File, Directory, FileCollection","\t6: admin.site.register(FileCollection)","\t7: admin.site.register(File)","",""]},{"start":{"row":243,"column":0},"end":{"row":244,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/connector.py:",""]},{"start":{"row":244,"column":0},"end":{"row":265,"column":0},"action":"insert","lines":["\t2: from elfinder.models import FileCollection, Directory, File","\t13:     create files in other people's file collections, or delete files they","\t49:                 'file': ('__file', {'target': True}),","\t52:                 'mkfile': ('__mkfile', {'target': True, 'name': True}),","\t85:         \"\"\" Returns the volume which contains the file/dir represented by the","\t203:     def __file(self):","\t204:         \"\"\" Handles the 'file' command.","\t206:             Sets return_view, which will cause read_file_view to be rendered","\t207:             as the response. A custom read_file_view can be given when","\t213:         # A file was requested, so set return_view to the read_file view.","\t214:         #self.return_view = self.read_file_view(self.request, volume, target)","\t215:         self.return_view = volume.read_file_view(self.request, target)","\t220:             Sets response['files'] and response['cwd'].","\t222:             If 'tree' is requested, 'files' contains information about all","\t223:             ancestors, siblings and children of the target. Otherwise, 'files'","\t252:                 self.response['files'] = volume.get_tree('',","\t260:             self.response['files'] = volume.get_tree(target,","\t274:     def __mkfile(self):","\t277:         self.response['added'] = [volume.mkfile(self.data['name'], target)]","\t312:         self.response.update(volume.upload(self.request.FILES, parent))","",""]},{"start":{"row":265,"column":0},"end":{"row":266,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/models.py:",""]},{"start":{"row":266,"column":0},"end":{"row":855,"column":15},"action":"insert","lines":["\t7: class FileCollectionChildMixin:","\t8:     \"\"\" Provides common methods for Files/Directories.","\t20: class Directory(MPTTModel, FileCollectionChildMixin):","\t21:     \"\"\" A Directory in the file structure of a FileCollection. May contain","\t22:         child Directory and File objects.","\t29:     collection = models.ForeignKey('FileCollection')","\t66: class FileCollection(models.Model):","\t67:     \"\"\" A collection of Directory and File objects.","\t69:         # TODO delete files/dirs when deleting file collection","\t76:         \"\"\" Creates a Directory (root node) when the FileCollection is first","\t80:         super(FileCollection, self).save(*args, **kwargs)","\t93: class File(models.Model, FileCollectionChildMixin):","\t94:     \"\"\" A File in a FileCollection.","\t98:                             related_name='files')","\t100:     collection = models.ForeignKey('FileCollection')","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/tests.py:","\t3: from elfinder.models import FileCollection, Directory, File","\t5: import tempfile","\t24:         self.collection = FileCollection.objects.get(pk=1)","\t32: class elFinderFileCollectionTest(TestCase):","\t33:     \"\"\" Tests functions related to creating/editing FileCollection objects.","\t39:     def test_new_filecollection(self):","\t40:         new_coll = FileCollection(name='test')","\t60:         self.collection = FileCollection.objects.get(pk=1)","\t162: class elFinderMkfileCmd(elFinderCmdTest):","\t168:     def test_valid_mkfile(self):","\t169:         vars = ({'cmd': 'mkfile',","\t171:                  'name': 'test file.txt'})","\t174:     def test_duplicate_filename(self):","\t175:         \"\"\" Try to create two files with the same name and ensure it fails.","\t177:         vars = ({'cmd': 'mkfile',","\t179:                  'name': 'dupe_filename_test'})","\t183:                          'File with this Name and Parent already exists.')","\t284:         # Create a temporary directory to use for uploading test files.","\t286:         self.tmp_dir = tempfile.mkdtemp()","\t291:     def get_file(self, name, content):","\t292:         \"\"\" Creates and writes to a new file. Returns the open file handle.","\t299:         fh = self.get_file('new_file.txt', 'testing')","\t305:         self.assertEqual(response.json['added'][0]['name'], 'new_file.txt')","\t307:     def test_dupe_filename_upload(self):","\t308:         # The 'Dickens, Charles' directory already has a file with this name.","\t309:         fh = self.get_file('A Tale of Two Cities', 'testing')","\t316:                          'File with this Name and Parent already exists.')","\t319: class elFinderFileCmd(elFinderCmdTest):","\t321:         super(elFinderFileCmd, self).setUp()","\t322:         self.file = File.objects.get(pk=1)","\t324:     def test_valid_file(self):","\t325:         vars = {'cmd': 'file',","\t329:         self.assertTemplateUsed(response, 'read_file.html')","\t330:         self.assertEqual(response.context['file'], self.file)","\t332:     def test_invalid_file(self):","\t333:         vars = ({'cmd': 'file',","\t340:             vars = {'cmd': 'file',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/views.py:","\t7: from elfinder.models import FileCollection","\t12:     \"\"\" Displays the elFinder file browser template for the specified","\t13:         FileCollection.","\t15:     collection = FileCollection.objects.get(pk=coll_id)","\t30:     # Some commands (e.g. read file) will return a Django View - if it","\t45: def read_file(request, volume, file_hash, template=\"read_file.html\"):","\t46:     \"\"\" Default view for responding to \"open file\" requests.","\t48:         coll: FileCollection this File belongs to","\t49:         file: The requested File object","\t52:                               {'file': file_hash},","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/fixtures/testdata.json:","\t1: [{\"pk\": 1, \"model\": \"elfinder.directory\", \"fields\": {\"rght\": 12, \"name\": \"Books\", \"parent\": null, \"level\": 0, \"collection\": 1, \"lft\": 1, \"tree_id\": 1}}, {\"pk\": 2, \"model\": \"elfinder.directory\", \"fields\": {\"rght\": 7, \"name\": \"D\", \"parent\": 1, \"level\": 1, \"collection\": 1, \"lft\": 2, \"tree_id\": 1}}, {\"pk\": 4, \"model\": \"elfinder.directory\", \"fields\": {\"rght\": 4, \"name\": \"Dickens, Charles\", \"parent\": 2, \"level\": 2, \"collection\": 1, \"lft\": 3, \"tree_id\": 1}}, {\"pk\": 5, \"model\": \"elfinder.directory\", \"fields\": {\"rght\": 6, \"name\": \"Doyle, Arthur Conan\", \"parent\": 2, \"level\": 2, \"collection\": 1, \"lft\": 5, \"tree_id\": 1}}, {\"pk\": 3, \"model\": \"elfinder.directory\", \"fields\": {\"rght\": 11, \"name\": \"S\", \"parent\": 1, \"level\": 1, \"collection\": 1, \"lft\": 8, \"tree_id\": 1}}, {\"pk\": 6, \"model\": \"elfinder.directory\", \"fields\": {\"rght\": 10, \"name\": \"Stevenson, Robert Louis\", \"parent\": 3, \"level\": 2, \"collection\": 1, \"lft\": 9, \"tree_id\": 1}}, {\"pk\": 1, \"model\": \"elfinder.filecollection\", \"fields\": {\"name\": \"Books\"}}, {\"pk\": 1, \"model\": \"elfinder.file\", \"fields\": {\"content\": \"To Sherlock Holmes she is always the woman. I have seldom heard him mention her under any other name. In his eyes she eclipses and predominates the whole of her sex. It was not that he felt any emotion akin to love for Irene Adler. All emotions, and that one particularly, were abhorrent to his cold, precise but admirably balanced mind. He was, I take it, the most perfect reasoning and observing machine that the world has seen, but as a lover he would have placed himself in a false position. He never spoke of the softer passions, save with a gibe and a sneer. They were admirable things for the observer\\u2014excellent for drawing the veil from men\\u2019s motives and actions. But for the trained reasoner to admit such intrusions into his own delicate and finely adjusted temperament was to introduce a distracting factor which might throw a doubt upon all his mental results. Grit in a sensitive instrument, or a crack in one of his own high-power lenses, would not be more disturbing than a strong emotion in a nature such as his. And yet there was but one woman to him, and that woman was the late Irene Adler, of dubious and questionable memory.\", \"name\": \"The Adventures of Sherlock Holmes\", \"parent\": 5, \"collection\": 1}}, {\"pk\": 2, \"model\": \"elfinder.file\", \"fields\": {\"content\": \"Marley was dead: to begin with. There is no doubt whatever about that. The register of his burial was signed by the clergyman, the clerk, the undertaker, and the chief mourner. Scrooge signed it: and Scrooge\\u2019s name was good upon \\u2019Change, for anything he chose to put his hand to. Old Marley was as dead as a door-nail.\\r\\n\\r\\nMind! I don\\u2019t mean to say that I know, of my own knowledge, what there is particularly dead about a door-nail. I might have been inclined, myself, to regard a coffin-nail as the deadest piece of ironmongery in the trade. But the wisdom of our ancestors is in the simile; and my unhallowed hands shall not disturb it, or the Country\\u2019s done for. You will therefore permit me to repeat, emphatically, that Marley was as dead as a door-nail.\", \"name\": \"A Christmas Carol\", \"parent\": 4, \"collection\": 1}}, {\"pk\": 3, \"model\": \"elfinder.file\", \"fields\": {\"content\": \"Book the First\\u2014Recalled to Life\\r\\n\\r\\nI. The Period\\r\\n\\r\\nIt was the best of times,\\r\\nit was the worst of times,\\r\\nit was the age of wisdom,\\r\\nit was the age of foolishness,\\r\\nit was the epoch of belief,\\r\\nit was the epoch of incredulity,\\r\\nit was the season of Light,\\r\\nit was the season of Darkness,\\r\\nit was the spring of hope,\\r\\nit was the winter of despair,\\r\\nwe had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way\\u2014 in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only.\", \"name\": \"A Tale of Two Cities\", \"parent\": 4, \"collection\": 1}}, {\"pk\": 4, \"model\": \"elfinder.file\", \"fields\": {\"content\": \"SQUIRE TRELAWNEY, Dr. Livesey, and the rest of these gentlemen having asked me to write down the whole particulars about Treasure Island, from the beginning to the end, keeping nothing back but the bearings of the island, and that only because there is still treasure not yet lifted, I take up my pen in the year of grace 17__ and go back to the time when my father kept the Admiral Benbow inn and the brown old seaman with the sabre cut first took up his lodging under our roof.\\r\\n\\r\\nI remember him as if it were yesterday, as he came plodding to the inn door, his sea-chest following behind him in a hand-barrow\\u2014a tall, strong, heavy, nut-brown man, his tarry pigtail falling over the shoulder of his soiled blue coat, his hands ragged and scarred, with black, broken nails, and the sabre cut across one cheek, a dirty, livid white. I remember him looking round the cover and whistling to himself as he did so, and then breaking out in that old sea-song that he sang so often afterwards:\\r\\n\\r\\n          \\\"Fifteen men on the dead man's chest\\u2014\\r\\n             Yo-ho-ho, and a bottle of rum!\\\"\", \"name\": \"Treasure Island\", \"parent\": 6, \"collection\": 1}}]","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/css/elfinder.full.css:","\t2:  * elFinder - file manager for web","\t10: /* File: /root/tmp/elFinder/css/commands.css */","\t161: /* edit text file textarea */","\t162: .elfinder-file-edit {","\t258: /* File: /root/tmp/elFinder/css/common.css */","\t276: /* dir/file permissions and symlink markers */","\t320: /* files num in drag helper */","\t342: .elfinder-overlay { opacity: 0; filter:Alpha(Opacity=0); }","\t356: /* File: /root/tmp/elFinder/css/contexmenu.css */","\t427: /* File: /root/tmp/elFinder/css/cwd.css */","\t463: /* file container */","\t464: .elfinder-cwd-view-icons .elfinder-cwd-file {","\t474: .elfinder-ltr .elfinder-cwd-view-icons .elfinder-cwd-file { float:left;  margin:0 3px 12px 0; }","\t475: .elfinder-rtl .elfinder-cwd-view-icons .elfinder-cwd-file { float:right; margin:0 0 5px 3px; }","\t478: .elfinder-cwd-view-icons .elfinder-cwd-file .ui-state-hover { border:0 solid; }","\t481: .elfinder-cwd-view-icons .elfinder-cwd-file-wrapper {","\t489: /* file name place */","\t490: .elfinder-cwd-view-icons .elfinder-cwd-filename {","\t606: /* filename container */","\t607: .elfinder-cwd-view-list .elfinder-cwd-file-wrapper { width:97%; position:relative; }","\t608: /* filename container in ltr/rtl enviroment */","\t609: .elfinder-ltr .elfinder-cwd-view-list .elfinder-cwd-file-wrapper { padding-left:23px;  }","\t610: .elfinder-rtl .elfinder-cwd-view-list .elfinder-cwd-file-wrapper { padding-right:23px; }","\t619: /* file icon */","\t634: /* File: /root/tmp/elFinder/css/dialog.css */","\t753: .elfinder-dialog-icon-file        { background-position: 0 -225px; }","\t756: .elfinder-dialog-icon-mkfile      { background-position: 0 -96px; }","\t777: /*********************** FILE INFO DIALOG **************************/","\t839: \topacity: 0; filter:Alpha(Opacity=0);","\t875: /* File: /root/tmp/elFinder/css/navbar.css */","\t1013: \topacity: .5; filter:Alpha(Opacity=50);","\t1026: /* File: /root/tmp/elFinder/css/places.css */","\t1028: /* File: /root/tmp/elFinder/css/quicklook.css */","\t1114: /* wrapper for file info/icon */","\t1123: /* file info */","\t1128: /* file name in info */","\t1143: /* file icon */","\t1207: /* prev file icon */","\t1212: /* next file icon */","\t1232: /* text files preview wrapper */","\t1297: /* File: /root/tmp/elFinder/css/statusbar.css */","\t1326: /* File: /root/tmp/elFinder/css/toolbar.css */","\t1395: .elfinder .elfinder-button.ui-state-disabled { opacity:1; filter:Alpha(Opacity=100);}","\t1396: .elfinder .elfinder-button.ui-state-disabled .elfinder-button-icon { opacity:.4; filter:Alpha(Opacity=40);}","\t1417: .elfinder-button-icon-mkfile    { background-position: 0 -208px; }","\t1422: .elfinder-button-icon-getfile   { background-position: 0 -288px; }","\t1483: \topacity: 0; filter:Alpha(Opacity=0);","\t1528: \tfilter:Alpha(Opacity=60);","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/css/elfinder.min.css:","\t2:  * elFinder - file manager for web","\t9: .elfinder-resize-control{padding-top:1em}.elfinder-resize-control input[type=text]{border:1px solid #aaa}.elfinder-resize-preview{width:400px;height:400px;padding:10px;background:#fff;border:1px solid #aaa;float:right;position:relative;overflow:auto}.elfinder-resize-handle{position:relative}.elfinder-resize-handle-hline,.elfinder-resize-handle-vline{position:absolute;background-image:url(\"../img/crop.gif\")}.elfinder-resize-handle-hline{width:100%;height:1px!important;background-repeat:repeat-x}.elfinder-resize-handle-vline{width:1px!important;height:100%;background-repeat:repeat-y}.elfinder-resize-handle-hline-top{top:0;left:0}.elfinder-resize-handle-hline-bottom{bottom:0;left:0}.elfinder-resize-handle-vline-left{top:0;left:0}.elfinder-resize-handle-vline-right{top:0;right:0}.elfinder-resize-handle-point{position:absolute;width:8px;height:8px;border:1px solid #777;background:0 0}.elfinder-resize-handle-point-e{top:50%;right:0;margin-top:-5px;margin-right:-5px}.elfinder-resize-handle-point-se{bottom:0;right:0;margin-bottom:-5px;margin-right:-5px}.elfinder-resize-handle-point-s{bottom:0;left:50%;margin-bottom:-5px;margin-left:-5px}.elfinder-resize-spinner{position:absolute;width:200px;height:30px;top:50%;margin-top:-25px;left:50%;margin-left:-100px;text-align:center;background:url(../img/progress.gif) center bottom repeat-x}.elfinder-resize-row{margin-bottom:7px;position:relative}.elfinder-resize-label{float:left;width:80px}.elfinder-resize-reset{width:16px;height:16px;position:absolute;margin-top:-8px}.elfinder-dialog-resize .ui-resizable-e{height:100%;width:10px}.elfinder-dialog-resize .ui-resizable-s{width:100%;height:10px}.elfinder-dialog-resize .ui-resizable-se{background:0 0;bottom:0;right:0;margin-right:-7px;margin-bottom:-7px}.elfinder-dialog-resize .ui-icon-grip-solid-vertical{position:absolute;top:50%;right:0;margin-top:-8px;margin-right:-11px}.elfinder-dialog-resize .ui-icon-grip-solid-horizontal{position:absolute;left:50%;bottom:0;margin-left:-8px;margin-bottom:-11px}.elfinder-file-edit{width:99%;height:99%;margin:0;padding:2px;border:1px solid #ccc}.elfinder-help{margin-bottom:.5em}.elfinder-help .ui-tabs-panel{padding:.5em}.elfinder-dialog .ui-tabs .ui-tabs-nav li a{padding:.2em 1em}.elfinder-help-shortcuts{height:300px;padding:1em;margin:.5em 0;overflow:auto}.elfinder-help-shortcut{white-space:nowrap;clear:both}.elfinder-help-shortcut-pattern{float:left;width:160px}.elfinder-help-logo{width:100px;height:96px;float:left;margin-right:1em;background:url('../img/logo.png') center center no-repeat}.elfinder-help h3{font-size:1.5em;margin:.2em 0 .3em}.elfinder-help-separator{clear:both;padding:.5em}.elfinder-help-link{padding:2px}.elfinder-help .ui-priority-secondary{font-size:.9em}.elfinder-help .ui-priority-primary{margin-bottom:7px}.elfinder-help-team{clear:both;text-align:right;border-bottom:1px solid #ccc;margin:.5em 0;font-size:.9em}.elfinder-help-team div{float:left}.elfinder-help-license{font-size:.9em}.elfinder-help-disabled{font-weight:700;text-align:center;margin:90px 0}.elfinder-help .elfinder-dont-panic{display:block;border:1px solid transparent;width:200px;height:200px;margin:30px auto;text-decoration:none;text-align:center;position:relative;background:#d90004;-moz-box-shadow:5px 5px 9px #111;-webkit-box-shadow:5px 5px 9px #111;box-shadow:5px 5px 9px #111;background:-moz-radial-gradient(80px 80px,circle farthest-corner,#d90004 35%,#960004 100%);background:-webkit-gradient(radial,80 80,60,80 80,120,from(#d90004),to(#960004));-moz-border-radius:100px;-webkit-border-radius:100px;border-radius:100px;outline:none}.elfinder-help .elfinder-dont-panic span{font-size:3em;font-weight:700;text-align:center;color:#fff;position:absolute;left:0;top:45px}.elfinder{padding:0;position:relative;display:block}.elfinder-rtl{text-align:right;direction:rtl}.elfinder-workzone{padding:0;position:relative;overflow:hidden}.elfinder-perms,.elfinder-symlink{position:absolute;width:16px;height:16px;background-image:url(../img/toolbar.png);background-repeat:no-repeat;background-position:0 -528px}.elfinder-na .elfinder-perms{background-position:0 -96px}.elfinder-ro .elfinder-perms{background-position:0 -64px}.elfinder-wo .elfinder-perms{background-position:0 -80px}.elfinder-drag-helper{width:60px;height:50px;padding:0 0 0 25px;z-index:100000}.elfinder-drag-helper-icon-plus{position:absolute;width:16px;height:16px;left:43px;top:55px;background:url('../img/toolbar.png') 0 -544px no-repeat;display:none}.elfinder-drag-helper-plus .elfinder-drag-helper-icon-plus{display:block}.elfinder-drag-num{position:absolute;top:0;left:0;width:16px;height:14px;text-align:center;padding-top:2px;font-size:12px;font-weight:700;color:#fff;background-color:red;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}.elfinder-drag-helper .elfinder-cwd-icon{margin:0 0 0 -24px;float:left}.elfinder-overlay{opacity:0;filter:Alpha(Opacity=0)}.elfinder .elfinder-panel{position:relative;background-image:none;padding:7px 12px}.elfinder-contextmenu,.elfinder-contextmenu-sub{display:none;position:absolute;border:1px solid #aaa;background:#fff;color:#555;padding:4px 0}.elfinder-contextmenu-sub{top:5px}.elfinder-contextmenu-ltr .elfinder-contextmenu-sub{margin-left:-5px}.elfinder-contextmenu-rtl .elfinder-contextmenu-sub{margin-right:-5px}.elfinder-contextmenu-item{position:relative;display:block;padding:4px 30px;text-decoration:none;white-space:nowrap;cursor:default}.elfinder-contextmenu .elfinder-contextmenu-item span{font-size:.76em;display:block}.elfinder-contextmenu-ltr .elfinder-contextmenu-item{text-align:left}.elfinder-contextmenu-rtl .elfinder-contextmenu-item{text-align:right}.elfinder-contextmenu-ltr .elfinder-contextmenu-sub .elfinder-contextmenu-item{padding-left:12px}.elfinder-contextmenu-rtl .elfinder-contextmenu-sub .elfinder-contextmenu-item{padding-right:12px}.elfinder-contextmenu-arrow,.elfinder-contextmenu-icon{position:absolute;top:50%;margin-top:-8px}.elfinder-contextmenu-ltr .elfinder-contextmenu-icon{left:8px}.elfinder-contextmenu-rtl .elfinder-contextmenu-icon{right:8px}.elfinder-contextmenu-arrow{width:16px;height:16px;background:url('../img/arrows-normal.png') 5px 4px no-repeat}.elfinder-contextmenu-ltr .elfinder-contextmenu-arrow{right:5px}.elfinder-contextmenu-rtl .elfinder-contextmenu-arrow{left:5px;background-position:0 -10px}.elfinder-contextmenu .ui-state-hover{border:0 solid;background-image:none}.elfinder-contextmenu-separator{height:0;border-top:1px solid #ccc;margin:0 1px}.elfinder-cwd-wrapper{overflow:auto;position:relative;padding:2px;margin:0}.elfinder-cwd-wrapper-list{padding:0}.elfinder-cwd{position:relative;font-size:.7em;cursor:default;padding:0;margin:0;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;user-select:none}.elfinder .elfinder-cwd-wrapper.elfinder-droppable-active{padding:0;border:2px solid #8cafed}.elfinder-cwd-view-icons .elfinder-cwd-file{width:120px;height:80px;padding-bottom:2px;cursor:default;overflow:hidden}.elfinder-ltr .elfinder-cwd-view-icons .elfinder-cwd-file{float:left;margin:0 3px 12px 0}.elfinder-rtl .elfinder-cwd-view-icons .elfinder-cwd-file{float:right;margin:0 0 5px 3px}.elfinder-cwd-view-icons .elfinder-cwd-file .ui-state-hover{border:0 solid}.elfinder-cwd-view-icons .elfinder-cwd-file-wrapper{width:52px;height:52px;margin:1px auto;padding:2px;position:relative}.elfinder-cwd-view-icons .elfinder-cwd-filename{text-align:center;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;-o-text-overflow:ellipsis;margin:3px 1px 0;padding:1px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}.elfinder-cwd-view-icons .elfinder-perms{bottom:4px;right:2px}.elfinder-cwd-view-icons .elfinder-symlink{bottom:6px;left:0}.elfinder-cwd-icon{display:block;width:48px;height:48px;margin:0 auto;background:url('../img/icons-big.png') 0 0 no-repeat;-moz-background-clip:padding;-webkit-background-clip:padding-box;background-clip:padding-box}.elfinder-cwd .elfinder-droppable-active .elfinder-cwd-icon{background-position:0 -100px}.elfinder-cwd-icon-directory{background-position:0 -50px}.elfinder-cwd-icon-application{background-position:0 -150px}.elfinder-cwd-icon-x-empty,.elfinder-cwd-icon-text{background-position:0 -200px}.elfinder-cwd-icon-image,.elfinder-cwd-icon-vnd-adobe-photoshop,.elfinder-cwd-icon-postscript{background-position:0 -250px}.elfinder-cwd-icon-audio{background-position:0 -300px}.elfinder-cwd-icon-video,.elfinder-cwd-icon-flash-video{background-position:0 -350px}.elfinder-cwd-icon-rtf,.elfinder-cwd-icon-rtfd{background-position:0 -401px}.elfinder-cwd-icon-pdf{background-position:0 -450px}.elfinder-cwd-icon-vnd-ms-office,.elfinder-cwd-icon-msword,.elfinder-cwd-icon-vnd-ms-word,.elfinder-cwd-icon-vnd-oasis-opendocument-text,.elfinder-cwd-icon-ms-excel,.elfinder-cwd-icon-vnd-ms-excel,.elfinder-cwd-icon-vnd-oasis-opendocument-spreadsheet,.elfinder-cwd-icon-vnd-ms-powerpoint,.elfinder-cwd-icon-vnd-oasis-opendocument-presentation{background-position:0 -500px}.elfinder-cwd-icon-html{background-position:0 -550px}.elfinder-cwd-icon-css{background-position:0 -600px}.elfinder-cwd-icon-javascript,.elfinder-cwd-icon-x-javascript{background-position:0 -650px}.elfinder-cwd-icon-x-perl{background-position:0 -700px}.elfinder-cwd-icon-x-python{background-position:0 -750px}.elfinder-cwd-icon-x-ruby{background-position:0 -800px}.elfinder-cwd-icon-x-sh,.elfinder-cwd-icon-x-shellscript{background-position:0 -850px}.elfinder-cwd-icon-x-c,.elfinder-cwd-icon-x-csrc,.elfinder-cwd-icon-x-chdr,.elfinder-cwd-icon-x-c--,.elfinder-cwd-icon-x-c--src,.elfinder-cwd-icon-x-c--hdr,.elfinder-cwd-icon-x-java,.elfinder-cwd-icon-x-java-source{background-position:0 -900px}.elfinder-cwd-icon-x-php{background-position:0 -950px}.elfinder-cwd-icon-xml{background-position:0 -1000px}.elfinder-cwd-icon-zip,.elfinder-cwd-icon-x-7z-compressed{background-position:0 -1050px}.elfinder-cwd-icon-x-gzip,.elfinder-cwd-icon-x-tar{background-position:0 -1100px}.elfinder-cwd-icon-x-bzip,.elfinder-cwd-icon-x-bzip2{background-position:0 -1150px}.elfinder-cwd-icon-x-rar,.elfinder-cwd-icon-x-rar-compressed{background-position:0 -1200px}.elfinder-cwd-icon-x-shockwave-flash{background-position:0 -1250px}.elfinder-cwd-icon-group{background-position:0 -1300px}.elfinder-cwd input{width:100%;border:0 solid;margin:0;padding:0}.elfinder-cwd-view-icons input,.elfinder-cwd-view-icons{text-align:center}.elfinder-cwd table{width:100%;border-collapse:collapse;border:0 solid;margin:0 0 10px}.elfinder .elfinder-cwd table thead tr{border-left:0 solid;border-top:0 solid;border-right:0 solid}.elfinder .elfinder-cwd table thead td{font-size:.9em}.elfinder .elfinder-cwd table td{padding:3px 12px;white-space:nowrap;overflow:hidden;text-align:right;cursor:default;border:0 solid}.elfinder-ltr .elfinder-cwd table td{text-align:right}.elfinder-ltr .elfinder-cwd table td:first-child,.elfinder-rtl .elfinder-cwd table td{text-align:left}.elfinder-rtl .elfinder-cwd table td:first-child{text-align:right}.elfinder-odd-row{background:#eee}.elfinder-cwd-view-list .elfinder-cwd-file-wrapper{width:97%;position:relative}.elfinder-ltr .elfinder-cwd-view-list .elfinder-cwd-file-wrapper{padding-left:23px}.elfinder-rtl .elfinder-cwd-view-list .elfinder-cwd-file-wrapper{padding-right:23px}.elfinder-cwd-view-list .elfinder-perms,.elfinder-cwd-view-list .elfinder-symlink{top:50%;margin-top:-6px}.elfinder-ltr .elfinder-cwd-view-list .elfinder-perms{left:7px}.elfinder-ltr .elfinder-cwd-view-list .elfinder-symlink{left:-7px}.elfinder-cwd-view-list td .elfinder-cwd-icon{width:16px;height:16px;position:absolute;top:50%;margin-top:-8px;background-image:url(../img/icons-small.png)}.elfinder-ltr .elfinder-cwd-view-list .elfinder-cwd-icon{left:0}.elfinder-rtl .elfinder-cwd-view-list .elfinder-cwd-icon{right:0}.std42-dialog{padding:0}.std42-dialog .ui-dialog-titlebar{border-left:0 solid transparent;border-top:0 solid transparent;border-right:0 solid transparent;-moz-border-radius-bottomleft:0;-webkit-border-bottom-left-radius:0;border-bottom-left-radius:0;-moz-border-radius-bottomright:0;-webkit-border-bottom-right-radius:0;border-bottom-right-radius:0;font-size:.82em;font-weight:400;padding:.2em 1em}.std42-dialog .ui-dialog-titlebar-close,.std42-dialog .ui-dialog-titlebar-close:hover{padding:1px}.elfinder-rtl .elfinder-dialog .ui-dialog-titlebar{text-align:right}.elfinder-rtl .elfinder-dialog .ui-dialog-titlebar .ui-dialog-titlebar-close{right:auto;left:.3em}.std42-dialog .ui-dialog-content{padding:.3em .5em;font-size:.72em}.std42-dialog .ui-dialog-buttonpane{border:0 solid;margin:0;padding:.5em .7em;font-size:.76em}.std42-dialog .ui-dialog-buttonpane button{margin:0 0 0 .4em;padding:0;outline:0 solid}.std42-dialog .ui-dialog-buttonpane button span{padding:2px 9px}.elfinder-dialog .ui-resizable-e,.elfinder-dialog .ui-resizable-s{width:0;height:0}.std42-dialog .ui-button input{cursor:pointer}.elfinder-dialog-icon{position:absolute;width:32px;height:32px;left:12px;top:50%;margin-top:-15px;background:url(\"../img/dialogs.png\") 0 0 no-repeat}.elfinder-rtl .elfinder-dialog-icon{left:auto;right:12px}.elfinder-dialog-error .ui-dialog-content,.elfinder-dialog-confirm .ui-dialog-content{padding-left:56px;min-height:35px}.elfinder-rtl .elfinder-dialog-error .ui-dialog-content,.elfinder-rtl .elfinder-dialog-confirm .ui-dialog-content{padding-left:0;padding-right:56px}.elfinder-dialog-notify .ui-dialog-titlebar-close{display:none}.elfinder-dialog-notify .ui-dialog-content{padding:0}.elfinder-notify{border-bottom:1px solid #ccc;position:relative;padding:.5em;text-align:center;overflow:hidden}.elfinder-ltr .elfinder-notify{padding-left:30px}.elfinder-rtl .elfinder-notify{padding-right:30px}.elfinder-notify:last-child{border:0 solid}.elfinder-notify-progressbar{width:180px;height:8px;border:1px solid #aaa;background:#f5f5f5;margin:5px auto;overflow:hidden}.elfinder-notify-progress{width:100%;height:8px;background:url(../img/progress.gif) center center repeat-x}.elfinder-notify-progressbar,.elfinder-notify-progress{-moz-border-radius:2px;-webkit-border-radius:2px;border-radius:2px}.elfinder-dialog-icon-open,.elfinder-dialog-icon-file,.elfinder-dialog-icon-reload{background-position:0 -225px}.elfinder-dialog-icon-mkdir{background-position:0 -64px}.elfinder-dialog-icon-mkfile{background-position:0 -96px}.elfinder-dialog-icon-copy,.elfinder-dialog-icon-prepare,.elfinder-dialog-icon-move{background-position:0 -128px}.elfinder-dialog-icon-upload{background-position:0 -160px}.elfinder-dialog-icon-rm{background-position:0 -192px}.elfinder-dialog-icon-download{background-position:0 -260px}.elfinder-dialog-icon-save{background-position:0 -295px}.elfinder-dialog-icon-rename{background-position:0 -330px}.elfinder-dialog-icon-archive,.elfinder-dialog-icon-extract{background-position:0 -365px}.elfinder-dialog-icon-search{background-position:0 -402px}.elfinder-dialog-confirm-applyall{padding-top:3px}.elfinder-dialog-confirm .elfinder-dialog-icon{background-position:0 -32px}.elfinder-info-title .elfinder-cwd-icon{float:left;width:48px;height:48px;margin-right:1em}.elfinder-info-title strong{display:block;padding:.3em 0 .5em}.elfinder-info-tb{min-width:200px;border:0 solid;margin:1em .2em;font-size:.9em}.elfinder-info-tb td{white-space:nowrap;padding:2px}.elfinder-info-tb tr td:first-child{text-align:right}.elfinder-info-tb span{float:left}.elfinder-info-tb a{outline:none;text-decoration:underline}.elfinder-info-tb a:hover{text-decoration:none}.elfinder-info-spinner{width:14px;height:14px;float:left;background:url(\"../img/spinner-mini.gif\") center center no-repeat;margin:0 5px}.elfinder-upload-dropbox{font-size:1.2em;text-align:center;padding:2em 0;border:3px dashed #aaa}.elfinder-upload-dropbox.ui-state-hover{background:#dfdfdf;border:3px dashed #555}.elfinder-upload-dialog-or{font-size:1.2em;margin:.3em 0;text-align:center}.elfinder-upload-dialog-wrapper{text-align:center}.elfinder-upload-dialog-wrapper .ui-button{position:relative;overflow:hidden}.elfinder-upload-dialog-wrapper .ui-button form{position:absolute;right:0;top:0;opacity:0;filter:Alpha(Opacity=0)}.elfinder-upload-dialog-wrapper .ui-button form input{padding:0 20px;font-size:3em}.dialogelfinder .dialogelfinder-drag{border-left:0 solid;border-top:0 solid;border-right:0 solid;font-weight:400;font-size:.9em;padding:2px 12px;cursor:move;position:relative;text-align:left}.elfinder-rtl .dialogelfinder-drag{text-align:right}.dialogelfinder-drag-close{position:absolute;top:50%;margin-top:-8px}.elfinder-ltr .dialogelfinder-drag-close{right:12px}.elfinder-rtl .dialogelfinder-drag-close{left:12px}.elfinder .elfinder-navbar{width:230px;padding:3px 5px;font-size:.72em;background-image:none;border-top:0 solid;border-bottom:0 solid;overflow:auto;display:none;position:relative;-moz-user-select:none;-khtml-user-select:none;-webkit-user-select:none;user-select:none}.elfinder-ltr .elfinder-navbar{float:left;border-left:0 solid;padding-right:10px}.elfinder-rtl .elfinder-navbar{float:right;border-right:0 solid;padding-left:10px}.elfinder-tree{display:table;width:100%;margin:0 0 .5em}.elfinder-navbar-dir{position:relative;display:block;white-space:nowrap;padding:3px 12px;margin:0;outline:0 solid;border:1px solid transparent;cursor:default}.elfinder-ltr .elfinder-navbar-dir{padding-left:35px}.elfinder-rtl .elfinder-navbar-dir{padding-right:35px}.elfinder-navbar-arrow{width:12px;height:14px;position:absolute;display:none;top:50%;margin-top:-8px;background-image:url(\"../img/arrows-normal.png\");background-repeat:no-repeat}.ui-state-active .elfinder-navbar-arrow{background-image:url(\"../img/arrows-active.png\")}.elfinder-navbar-collapsed .elfinder-navbar-arrow{display:block}.elfinder-ltr .elfinder-navbar-collapsed .elfinder-navbar-arrow{background-position:0 4px;left:0}.elfinder-rtl .elfinder-navbar-collapsed .elfinder-navbar-arrow{background-position:0 -10px;right:0}.elfinder-ltr .elfinder-navbar-expanded .elfinder-navbar-arrow,.elfinder-rtl .elfinder-navbar-expanded .elfinder-navbar-arrow{background-position:0 -21px}.elfinder-navbar-icon{width:16px;height:16px;position:absolute;top:50%;margin-top:-8px;background-image:url(\"../img/toolbar.png\");background-repeat:no-repeat;background-position:0 -16px}.elfinder-ltr .elfinder-navbar-icon{left:14px}.elfinder-rtl .elfinder-navbar-icon{right:14px}.elfinder-tree .elfinder-navbar-root .elfinder-navbar-icon{background-position:0 0}.elfinder-places .elfinder-navbar-root .elfinder-navbar-icon{background-position:0 -48px}.ui-state-active .elfinder-navbar-icon,.elfinder-droppable-active .elfinder-navbar-icon,.ui-state-hover .elfinder-navbar-icon{background-position:0 -32px}.elfinder-navbar-subtree{display:none}.elfinder-ltr .elfinder-navbar-subtree{margin-left:12px}.elfinder-rtl .elfinder-navbar-subtree{margin-right:12px}.elfinder-navbar-spinner{width:14px;height:14px;position:absolute;display:block;top:50%;margin-top:-7px;background:url(\"../img/spinner-mini.gif\") center center no-repeat}.elfinder-ltr .elfinder-navbar-spinner{left:0;margin-left:-2px}.elfinder-rtl .elfinder-navbar-spinner{right:0;margin-right:-2px}.elfinder-navbar .elfinder-perms{top:50%;margin-top:-8px}.elfinder-ltr .elfinder-navbar .elfinder-perms{left:18px}.elfinder-rtl .elfinder-navbar .elfinder-perms{right:18px}.elfinder-ltr .elfinder-navbar .elfinder-symlink{left:8px}.elfinder-rtl .elfinder-navbar .elfinder-symlink{right:8px}.elfinder-navbar .ui-resizable-handle{width:12px;background:url('../img/resize.png') center center no-repeat;left:0}.elfinder-nav-handle-icon{position:absolute;top:50%;margin:-8px 2px 0 2px;opacity:.5;filter:Alpha(Opacity=50)}.elfinder-places{border:1px solid transparent}.elfinder-places.elfinder-droppable-active{border:1px solid #8cafed}.elfinder-place-drag .elfinder-navbar-dir{font-size:.9em}.elfinder-quicklook{position:absolute;background:url(\"../img/quicklook-bg.png\");display:none;overflow:hidden;border-radius:7px;-moz-border-radius:7px;-webkit-border-radius:7px;padding:20px 0 40px}.elfinder-quicklook .ui-resizable-se{width:14px;height:14px;right:5px;bottom:3px;background:url(\"../img/toolbar.png\") 0 -496px no-repeat}.elfinder-quicklook-fullscreen{border-radius:0;-moz-border-radius:0;-webkit-border-radius:0;-webkit-background-clip:padding-box;padding:0;background:#000;z-index:90000;display:block}.elfinder-quicklook-fullscreen .elfinder-quicklook-titlebar{display:none}.elfinder-quicklook-fullscreen .elfinder-quicklook-preview{border:0 solid}.elfinder-quicklook-titlebar{text-align:center;background:#777;position:absolute;left:0;top:0;width:100%;height:20px;-moz-border-radius-topleft:7px;-webkit-border-top-left-radius:7px;border-top-left-radius:7px;-moz-border-radius-topright:7px;-webkit-border-top-right-radius:7px;border-top-right-radius:7px;cursor:move}.elfinder-quicklook-title{font-size:.7em;color:#fff;white-space:nowrap;overflow:hidden;padding:2px 0}.elfinder-quicklook-titlebar .ui-icon{position:absolute;left:4px;top:50%;margin-top:-8px;width:16px;height:16px;cursor:default}.elfinder-quicklook-preview{overflow:hidden;position:relative;border:0 solid;border-left:1px solid transparent;border-right:1px solid transparent;height:100%}.elfinder-quicklook-info-wrapper{position:absolute;width:100%;left:0;top:50%;margin-top:-50px}.elfinder-quicklook-info{padding:0 12px 0 112px}.elfinder-quicklook-info .elfinder-quicklook-info-data:first-child{color:#fff;font-weight:700;padding-bottom:.5em}.elfinder-quicklook-info-data{font-size:.72em;padding-bottom:.2em;color:#fff}.elfinder-quicklook .elfinder-cwd-icon{position:absolute;left:32px;top:50%;margin-top:-20px}.elfinder-quicklook-preview img{display:block;margin:0 auto}.elfinder-quicklook-navbar{position:absolute;left:50%;bottom:4px;width:140px;height:32px;padding:0;margin-left:-70px;border:1px solid transparent;border-radius:19px;-moz-border-radius:19px;-webkit-border-radius:19px}.elfinder-quicklook-fullscreen .elfinder-quicklook-navbar{width:188px;margin-left:-94px;padding:5px;border:1px solid #eee;background:#000}.elfinder-quicklook-fullscreen .elfinder-quicklook-navbar-icon-close,.elfinder-quicklook-fullscreen .elfinder-quicklook-navbar-separator{display:inline}.elfinder-quicklook-navbar-icon{width:32px;height:32px;margin:0 7px;float:left;background:url(\"../img/quicklook-icons.png\") 0 0 no-repeat}.elfinder-quicklook-navbar-icon-fullscreen{background-position:0 -64px}.elfinder-quicklook-navbar-icon-fullscreen-off{background-position:0 -96px}.elfinder-quicklook-navbar-icon-prev{background-position:0 0}.elfinder-quicklook-navbar-icon-next{background-position:0 -32px}.elfinder-quicklook-navbar-icon-close{background-position:0 -128px;display:none}.elfinder-quicklook-navbar-separator{width:1px;height:32px;float:left;border-left:1px solid #fff;display:none}.elfinder-quicklook-preview-text-wrapper{width:100%;height:100%;background:#fff;color:#222;font-size:.9em;overflow:auto}pre.elfinder-quicklook-preview-text{margin:0;padding:3px 9px}.elfinder-quicklook-preview-html,.elfinder-quicklook-preview-pdf{width:100%;height:100%;background:#fff;border:0 solid;margin:0}.elfinder-quicklook-preview-flash{width:100%;height:100%}.elfinder-quicklook-preview-audio{width:100%;position:absolute;bottom:0;left:0}embed.elfinder-quicklook-preview-audio{height:30px;background:0 0}.elfinder-quicklook-preview-video{width:100%;height:100%}.elfinder-statusbar{text-align:center;font-weight:400;padding:.2em .5em;border-right:0 solid transparent;border-bottom:0 solid transparent;border-left:0 solid transparent}.elfinder-statusbar a{text-decoration:none}.elfinder-statusbar div{font-size:.7em}.elfinder-ltr .elfinder-path{float:left}.elfinder-rtl .elfinder-path,.elfinder-ltr .elfinder-stat-size{float:right}.elfinder-rtl .elfinder-stat-size{float:left}.elfinder-toolbar{padding:4px 0 3px;border-left:0 solid transparent;border-top:0 solid transparent;border-right:0 solid transparent}.elfinder-buttonset{margin:1px 4px;float:left;background:0 0;padding:0;-moz-border-radius:4px;-webkit-border-radius:4px;border-radius:4px}.elfinder .elfinder-button{width:16px;height:16px;margin:0;padding:4px;float:left;overflow:hidden;position:relative;border:0 solid}.elfinder .ui-icon-search{cursor:pointer}.elfinder-button:first-child{-moz-border-radius-topleft:4px;-webkit-border-top-left-radius:4px;border-top-left-radius:4px;-moz-border-radius-bottomleft:4px;-webkit-border-bottom-left-radius:4px;border-bottom-left-radius:4px}.elfinder-button:last-child{-moz-border-radius-topright:4px;-webkit-border-top-right-radius:4px;border-top-right-radius:4px;-moz-border-radius-bottomright:4px;-webkit-border-bottom-right-radius:4px;border-bottom-right-radius:4px}.elfinder-toolbar-button-separator{float:left;padding:0;height:24px;border-top:0 solid;border-right:0 solid;border-bottom:0 solid;width:0}.elfinder .elfinder-button.ui-state-disabled{opacity:1;filter:Alpha(Opacity=100)}.elfinder .elfinder-button.ui-state-disabled .elfinder-button-icon{opacity:.4;filter:Alpha(Opacity=40)}.elfinder-rtl .elfinder-buttonset{float:right}.elfinder-button-icon{width:16px;height:16px;display:block;background:url('../img/toolbar.png') no-repeat}.elfinder-button-icon-home{background-position:0 0}.elfinder-button-icon-back{background-position:0 -112px}.elfinder-button-icon-forward{background-position:0 -128px}.elfinder-button-icon-up{background-position:0 -144px}.elfinder-button-icon-reload{background-position:0 -160px}.elfinder-button-icon-open{background-position:0 -176px}.elfinder-button-icon-mkdir{background-position:0 -192px}.elfinder-button-icon-mkfile{background-position:0 -208px}.elfinder-button-icon-rm{background-position:0 -224px}.elfinder-button-icon-copy{background-position:0 -240px}.elfinder-button-icon-cut{background-position:0 -256px}.elfinder-button-icon-paste{background-position:0 -272px}.elfinder-button-icon-getfile{background-position:0 -288px}.elfinder-button-icon-duplicate{background-position:0 -304px}.elfinder-button-icon-rename{background-position:0 -320px}.elfinder-button-icon-edit{background-position:0 -336px}.elfinder-button-icon-quicklook{background-position:0 -352px}.elfinder-button-icon-upload{background-position:0 -368px}.elfinder-button-icon-download{background-position:0 -384px}.elfinder-button-icon-info{background-position:0 -400px}.elfinder-button-icon-extract{background-position:0 -416px}.elfinder-button-icon-archive{background-position:0 -432px}.elfinder-button-icon-view{background-position:0 -448px}.elfinder-button-icon-view-list{background-position:0 -464px}.elfinder-button-icon-help{background-position:0 -480px}.elfinder-button-icon-resize{background-position:0 -512px}.elfinder-button-icon-search{background-position:0 -561px}.elfinder-button-icon-sort{background-position:0 -577px}.elfinder .elfinder-menubutton{overflow:visible}.elfinder-button-menu{position:absolute;left:0;top:26px;padding:3px 0}.elfinder-button-menu-item{white-space:nowrap;font-size:.72em;cursor:default;padding:5px 19px;position:relative}.elfinder-button-menu .ui-state-hover{border:0 solid}.elfinder-menu-item-sort-dir{width:16px;height:16px;position:absolute;left:2px;top:50%;margin-top:-8px;background:url(\"../img/toolbar.png\") 0 -594px no-repeat;display:none}.elfinder-button-menu-item-selected .elfinder-menu-item-sort-dir{display:block}.elfinder-menu-item-sort-desc .elfinder-menu-item-sort-dir{background-position:0 -610px}.elfinder-button form{position:absolute;top:0;right:0;opacity:0;filter:Alpha(Opacity=0);cursor:pointer}.elfinder .elfinder-button form input{background:0 0;cursor:default}.elfinder .elfinder-button-search{border:0 solid;background:0 0;padding:0;margin:1px 4px;height:auto;float:right;width:202px}.elfinder-ltr .elfinder-button-search{float:right;margin-right:10px}.elfinder-rtl .elfinder-button-search{float:left;margin-left:10px}.elfinder-button-search input{width:160px;height:22px;padding:0 20px;font-size:.8em;line-height:22px;border:1px solid #aaa;-moz-border-radius:12px;-webkit-border-radius:12px;border-radius:12px;outline:0 solid}.elfinder-rtl .elfinder-button-search input{direction:rtl}.elfinder-button-search .ui-icon{position:absolute;height:18px;top:50%;margin:-7px 4px 0 4px;opacity:.6;filter:Alpha(Opacity=60)}.elfinder-ltr .elfinder-button-search .ui-icon-search{left:0}.elfinder-rtl .elfinder-button-search .ui-icon-search,.elfinder-ltr .elfinder-button-search .ui-icon-close{right:0}.elfinder-rtl .elfinder-button-search .ui-icon-close{left:0}","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/css/theme.css:","\t20: /* selected file in \"icons\" view */","\t21: .elfinder-cwd-view-icons .elfinder-cwd-file .ui-state-hover { background:#ccc; }","\t27: .elfinder-cwd-view-icons .elfinder-cwd-file .elfinder-cwd-filename.ui-state-hover,","\t31: .elfinder-disabled .elfinder-cwd-view-icons .elfinder-cwd-file .elfinder-cwd-filename.ui-state-hover,","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/elfinder.full.js:","\t2:  * elFinder - file manager for web","\t13:  * File: /root/tmp/elFinder/js/elFinder.js","\t17:  * @class elFinder - file manager for web","\t103: \t\tevents = ['enable', 'disable', 'load', 'open', 'reload', 'select',  'add', 'remove', 'change', 'dblclick', 'getfile', 'lockfiles', 'unlockfiles', 'dragstart', 'dragstop'],","\t137: \t\t * Files/dirs cache","\t141: \t\tfiles = {},","\t144: \t\t * Selected files hashes","\t165: \t\t * Buffer for copied files","\t172: \t\t * Copied/cuted files hashes","\t174: \t\t * Required for dispaly correct files names in error messages","\t217: \t\t\t\tfiles = {};","\t219: \t\t\t\t// remove only files from prev cwd","\t220: \t\t\t\tfor (var i in files) {","\t221: \t\t\t\t\tif (files.hasOwnProperty(i) ","\t222: \t\t\t\t\t&& files[i].mime != 'directory' ","\t223: \t\t\t\t\t&& files[i].phash == cwd","\t225: \t\t\t\t\t\tdelete files[i];","\t231: \t\t\tcache(data.files);","\t232: \t\t\tif (!files[cwd]) {","\t239: \t\t * Store info about files/dirs in \"files\" object.","\t241: \t\t * @param  Array  files","\t250: \t\t\t\t\tfiles[f.hash] = f;","\t361: \t * URL to upload files","\t419: \t * Sort files type","\t457: \t\t\thashes = element.is('.'+self.res('class', 'cwdfile')) ","\t461: \t\t\thelper.append(icon(files[hashes[0]].mime)).data('files', hashes);","\t464: \t\t\t\thelper.append(icon(files[hashes[l-1]].mime) + '<span class=\"elfinder-drag-num\">'+l+'</span>');","\t478: \t\t\taccept     : '.elfinder-cwd-file-wrapper,.elfinder-navbar-dir,.elfinder-cwd-file',","\t482: \t\t\t\t\ttargets = $.map(ui.helper.data('files')||[], function(h) { return h || null }),","\t489: \t\t\t\t} else if (dst.is('.'+self.res(c, 'cwdfile'))) {","\t500: \t\t\t\t\th != hash && files[h].phash != hash && result.push(h);","\t507: \t\t\t\t\tself.trigger('drop', {files : targets});","\t513: \t * Return true if filemanager is active","\t522: \t * Return true if filemanager is visible","\t536: \t\tvar dir = files[hash || cwd], i;","\t539: \t\t\tdir = files[dir.phash]","\t545: \t\twhile (i in files && files.hasOwnProperty(i)) {","\t546: \t\t\tdir = files[i]","\t561: \t\treturn files[cwd] || {};","\t575: \t * Return file data from current dir or tree by it's hash","\t577: \t * @param  String  file hash","\t580: \tthis.file = function(hash) { ","\t581: \t\treturn files[hash]; ","\t585: \t * Return all cached files","\t589: \tthis.files = function() {","\t590: \t\treturn $.extend(true, {}, files);","\t594: \t * Return list of file parents hashes include file hash","\t596: \t * @param  String  file hash","\t603: \t\twhile ((dir = this.file(hash))) {","\t611: \t\tvar file, ","\t614: \t\twhile (hash && (file = files[hash]) && file.hash) {","\t615: \t\t\tpath.unshift(file.name);","\t616: \t\t\thash = file.phash;","\t623: \t * Return file path","\t625: \t * @param  Object  file","\t629: \t\treturn files[hash] && files[hash].path","\t630: \t\t\t? files[hash].path","\t635: \t * Return file url if set","\t637: \t * @param  Object  file","\t642: \t\tif (files[hash] && files[hash].url) {","\t643: \t\t\treturn files[hash].url;","\t650: \t\tvar file = files[hash],","\t653: \t\tif (file.url) {","\t654: \t\t\treturn file.url;","\t668: \t * @param  String  file hash","\t672: \t\tvar file = files[hash],","\t673: \t\t\turl = file && file.tmb && file.tmb != 1 ? cwdOptions['tmbUrl'] + file.tmb : '';","\t682: \t * Return selected files hashes","\t691: \t * Return selected files info","\t695: \tthis.selectedFiles = function() {","\t696: \t\treturn $.map(selected, function(hash) { return files[hash] || null });","\t700: \t * Return true if file with required name existsin required folder","\t702: \t * @param  String  file name","\t706: \tthis.fileByName = function(name, phash) {","\t709: \t\tfor (hash in files) {","\t710: \t\t\tif (files.hasOwnProperty(hash) && files[hash].phash == phash && files[hash].name == name) {","\t711: \t\t\t\treturn files[hash];","\t751: \t\t\t// sync files on request fail","\t921: \t * Compare current files cache with new files and return diff","\t923: \t * @param  Array  new files","\t946: \t\t$.each(files, function(hash, f) {","\t950: \t\t// compare files","\t951: \t\t$.each(raw, function(hash, file) {","\t952: \t\t\tvar origin = files[hash];","\t955: \t\t\t\tadded.push(file);","\t957: \t\t\t\t$.each(file, function(prop) {","\t958: \t\t\t\t\tif (file[prop] != origin[prop]) {","\t959: \t\t\t\t\t\tchanged.push(file)","\t968: \t\t\tvar file  = files[hash], ","\t969: \t\t\t\tphash = file.phash;","\t972: \t\t\t&& file.mime == 'directory' ","\t1017: \t\t\tvar diff = self.diff(odata.files.concat(pdata && pdata.tree ? pdata.tree : []));","\t1028: \tthis.upload = function(files) {","\t1029: \t\treturn this.transport.upload(files, this);","\t1114: \t *       description : 'Select all files', ","\t1172: \t *   this.clipboard([{...}, {...}], true) - put 2 files in clipboard and mark it as cutted","\t1174: \t * @param  Array    new files hashes","\t1175: \t * @param  Boolean  cut files?","\t1182: \t\t\tclipboard.length && this.trigger('unlockfiles', {files : map()});","\t1186: \t\t\t\tvar file = files[hash];","\t1187: \t\t\t\tif (file) {","\t1193: \t\t\t\t\t\tphash  : file.phash,","\t1194: \t\t\t\t\t\tname   : file.name,","\t1195: \t\t\t\t\t\tmime   : file.mime,","\t1196: \t\t\t\t\t\tread   : file.read,","\t1197: \t\t\t\t\t\tlocked : file.locked,","\t1204: \t\t\tcut && this.trigger('lockfiles', {files : map()});","\t1225: \t * @param  String|Array   usualy files hashes","\t1229: \tthis.exec = function(cmd, files, opts) {","\t1231: \t\t\t? this._commands[cmd].exec(files, opts) ","\t1343: \tthis.xhrUpload  = typeof XMLHttpRequestUpload != 'undefined' && typeof File != 'undefined' && typeof FormData != 'undefined';","\t1384: \t$.each(['enable', 'disable', 'load', 'open', 'reload', 'select',  'add', 'remove', 'change', 'dblclick', 'getfile', 'lockfiles', 'unlockfiles', 'dragstart', 'dragstop', 'search', 'searchend', 'viewchange'], function(i, name) {","\t1411: \t\t\tselected = $.map(e.data.selected || e.data.value|| [], function(hash) { return files[hash] ? hash : null; });","\t1431: \t\t\t\tif (files[hash]) {","\t1432: \t\t\t\t\tfiles[hash].tmb = tmb;","\t1440: \t\t\t$.each(e.data.changed||[], function(i, file) {","\t1441: \t\t\t\tvar hash = file.hash;","\t1442: \t\t\t\tfiles[hash] = files[hash] ? $.extend(files[hash], file) : file;","\t1449: \t\t\t\t\tvar file = files[hash];","\t1450: \t\t\t\t\tif (file) {","\t1451: \t\t\t\t\t\tif (file.mime == 'directory' && file.dirs) {","\t1452: \t\t\t\t\t\t\t$.each(files, function(h, f) {","\t1456: \t\t\t\t\t\tdelete files[hash];","\t1466: \t\t\tcache(e.data.files);","\t1488: \t// in getFileCallback set - change default actions on duble click/enter/ctrl+enter","\t1489: \tif (typeof(this.options.getFileCallback) == 'function' && this.commands.getfile) {","\t1492: \t\t\tself.exec('getfile').fail(function() {","\t1498: \t\t\tdescription : this.i18n('cmdgetfile'),","\t1499: \t\t\tcallback    : function() { self.exec('getfile').fail(function() { self.exec(self.OS == 'mac' ? 'rename' : 'open') }) }","\t1520: \t$.each(['open', 'reload', 'back', 'forward', 'up', 'home', 'info', 'quicklook', 'getfile', 'help'], function(i, cmd) {","\t1676: \t * File mimetype to kind mapping","\t1779: \t\topen    : function(data) { return data && data.cwd && data.files && $.isPlainObject(data.cwd) && $.isArray(data.files); },","\t1784: \t\tsearch  : function(data) { return data && data.files && $.isArray(data.files)}","\t1903: \t\t\tif (input && $(input).is(':file') && $(input).val()) {","\t1909: \t\t\tcnt = input.files ? input.files.length : 1;","\t1949: \t\t\t\tfiles       = data.input ? data.input.files : data.files, ","\t1950: \t\t\t\tcnt         = files.length,","\t2003: \t\t\t\t\t// drop file from finder","\t2028: \t\t\t$.each(files, function(i, file) {","\t2029: \t\t\t\tformData.append('upload[]', file);","\t2034: \t\t\t\t\t// ff bug while send zero sized file","\t2042: \t\t\tif (!$.browser.safari || !data.files) {","\t2160: \t\tvar filter = function(file) { ","\t2162: \t\t\tif (file && file.hash && file.name && file.mime) {","\t2163: \t\t\t\tif (file.mime == 'application/x-empty') {","\t2164: \t\t\t\t\tfile.mime = 'text/plain';","\t2166: \t\t\t\treturn file;","\t2169: \t\t\treturn file && file.hash && file.name && file.mime ? file : null; ","\t2173: \t\tif (data.files) {","\t2174: \t\t\tdata.files = $.map(data.files, filter);","\t2177: \t\t\tdata.tree = $.map(data.tree, filter);","\t2180: \t\t\tdata.added = $.map(data.added, filter);","\t2183: \t\t\tdata.changed = $.map(data.changed, filter);","\t2193: \t * Compare files based on elFinder.sort","\t2195: \t * @param  Object  file","\t2196: \t * @param  Object  file","\t2199: \tcompare : function(file1, file2) {","\t2202: \t\t\tf1   = asc ? file1 : file2,","\t2203: \t\t\tf2   = asc ? file2 : file1,","\t2206: \t\t\td1   = file1.mime == 'directory',","\t2207: \t\t\td2   = file2.mime == 'directory',","\t2245: \t * Sort files based on elFinder.sort","\t2247: \t * @param  Array  files","\t2250: \tsortFiles : function(files) {","\t2251: \t\treturn files.sort($.proxy(this.compare, this));","\t2262: \t *    msg : 'Copy files', // not required for known types @see this.notifyType","\t2329: \t *    title : 'Remove files',","\t2405: \t * Create unique file name in required dir","\t2407: \t * @param  String  file name","\t2424: \t\tif (!this.fileByName(name, phash)) {","\t2429: \t\t\tif (!this.fileByName(name, phash)) {","\t2448: \t\t\t\tvar file;","\t2450: \t\t\t\t\tif ((file = self.file(m.substr(1)))) {","\t2451: \t\t\t\t\t\treturn file.name;","\t2498: \t * @param  String  file mimetype","\t2511: \t * Return localized kind of file","\t2513: \t * @param  Object|String  file or file mimetype","\t2578: \t * Return css class marks file permissions","\t2580: \t * @param  Object  file ","\t2597: \t * Return localized string with file permissions","\t2599: \t * @param  Object  file","\t2612: \t * Return formated file size","\t2614: \t * @param  Number  file size","\t2664:  * File: /root/tmp/elFinder/js/elFinder.version.js","\t2677:  * File: /root/tmp/elFinder/js/jquery.elfinder.js","\t2727:  * File: /root/tmp/elFinder/js/elFinder.options.js","\t2779: \t * URL to upload file to.","\t2788: \t * Allow to drag and drop to upload files","\t2804: \t * Data to append to all requests and to upload files","\t2828: \t * Additional css class for filemanager node.","\t2841: \t\t'open', 'reload', 'home', 'up', 'back', 'forward', 'getfile', 'quicklook', ","\t2842: \t\t'download', 'rm', 'duplicate', 'rename', 'mkdir', 'mkfile', 'upload', 'copy', ","\t2852: \t\t// \"getfile\" command options.","\t2853: \t\tgetfile : {","\t2855: \t\t\t// allow to return multiple files info","\t2857: \t\t\t// allow to return filers info","\t2876: \t * Callback for \"getfile\" commands.","\t2882: \tgetFileCallback : null,","\t2904: \t\t\t['mkdir', 'mkfile', 'upload'],","\t2905: \t\t\t['open', 'download', 'getfile'],","\t2931: \t * Display only required files by types","\t2942: \t * How to sort files in current directory","\t2959: \t * Sort files direction.","\t3019: \t * How many files display at once?","\t3024: \tshowFiles : 30,","\t3028: \t * Distance in px to cwd bottom edge to start display files","\t3036: \t * Additional rule to valid new file name.","\t3084: \t\tcwd    : ['reload', 'back', '|', 'upload', 'mkdir', 'mkfile', 'paste', '|', 'sort', '|', 'info'],","\t3085: \t\t// current directory file menu","\t3086: \t\tfiles  : ['getfile', '|','open', 'quicklook', '|', 'download', '|', 'copy', 'cut', 'paste', 'duplicate', '|', 'rm', '|', 'edit', 'rename', 'resize', '|', 'archive', 'extract', '|', 'info']","\t3100:  * File: /root/tmp/elFinder/js/elFinder.history.js","\t3205:  * File: /root/tmp/elFinder/js/elFinder.command.js","\t3357: \t * @param  Array         target files hashes","\t3361: \tthis.exec = function(files, opts) { ","\t3453: \t * With argument check given files hashes and return list of existed files hashes.","\t3454: \t * Without argument return selected files hashes.","\t3461: \t\t\t? $.map($.isArray(hashes) ? hashes : [hashes], function(hash) { return fm.file(hash) ? hash : null; })","\t3466: \t * Return only existed files from given fils hashes | selected files","\t3471: \tthis.files = function(hashes) {","\t3475: \t\t\t? $.map($.isArray(hashes) ? hashes : [hashes], function(hash) { return fm.file(hash) || null })","\t3476: \t\t\t: fm.selectedFiles();","\t3484:  * File: /root/tmp/elFinder/js/elFinder.resources.js","\t3502: \t\tcwdfile     : 'elfinder-cwd-file',","\t3559: \t\t\t\tfile   = {","\t3567: \t\t\t\tnode = cwd.trigger('create.'+fm.namespace, file).find('#'+id),","\t3590: \t\t\t\t\t\t\tif (fm.fileByName(name, phash)) {","\t3596: \t\t\t\t\t\t\tfm.lockfiles({files : [id]});","\t3619: \t\t\tnode.find('.elfinder-cwd-filename').empty('').append(input.val(file.name));","\t3634:  * File: /root/tmp/elFinder/js/jquery.dialogelfinder.js","\t3645:  *     title          : 'My files', // dialog title, default = \"Files\"","\t3660: \t\t\ttoolbar = $('<div class=\"ui-widget-header dialogelfinder-drag ui-corner-top\">'+(opts.title || 'Files')+'</div>'),","\t3731:  * File: /root/tmp/elFinder/js/i18n/elfinder.en.js","\t3768: \t\t\t'errNotFile'           : 'Object is not a file.',","\t3773: \t\t\t'errExists'            : 'File named \"$1\" already exists.',","\t3774: \t\t\t'errInvName'           : 'Invalid file name.',","\t3776: \t\t\t'errFileNotFound'      : 'File not found.',","\t3778: \t\t\t'errPopup'             : 'Browser prevented opening popup window. To open file enable it in browser options.',","\t3780: \t\t\t'errMkfile'            : 'Unable to create file \"$1\".',","\t3782: \t\t\t'errCopyFrom'          : 'Copying files from volume \"$1\" not allowed.',","\t3783: \t\t\t'errCopyTo'            : 'Copying files to volume \"$1\" not allowed.',","\t3785: \t\t\t'errUploadFile'        : 'Unable to upload \"$1\".', // old name - errUpload","\t3786: \t\t\t'errUploadNoFiles'     : 'No files found for upload.', ","\t3788: \t\t\t'errUploadFileSize'    : 'File exceeds maximum allowed size.', //  old name - errFileMaxSize","\t3789: \t\t\t'errUploadMime'        : 'File type not allowed.', ","\t3798: \t\t\t'errRmSrc'             : 'Unable remove source file(s).',","\t3799: \t\t\t'errExtract'           : 'Unable to extract files from \"$1\".',","\t3802: \t\t\t'errNoArchive'         : 'File is not archive or has unsupported archive type.',","\t3806: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t3808: \t\t\t'errUsupportType'      : 'Unsupported file type.',","\t3817: \t\t\t'cmdedit'      : 'Edit file',","\t3818: \t\t\t'cmdextract'   : 'Extract files from archive',","\t3820: \t\t\t'cmdgetfile'   : 'Select files',","\t3825: \t\t\t'cmdmkfile'    : 'New text file',","\t3832: \t\t\t'cmdsearch'    : 'Find files',","\t3834: \t\t\t'cmdupload'    : 'Upload files',","\t3850: \t\t\t'ntffile'     : 'Open file',","\t3853: \t\t\t'ntfmkfile'   : 'Creating files',","\t3854: \t\t\t'ntfrm'       : 'Delete files',","\t3855: \t\t\t'ntfcopy'     : 'Copy files',","\t3856: \t\t\t'ntfmove'     : 'Move files',","\t3857: \t\t\t'ntfprepare'  : 'Prepare to copy files',","\t3858: \t\t\t'ntfrename'   : 'Rename files',","\t3859: \t\t\t'ntfupload'   : 'Uploading files',","\t3860: \t\t\t'ntfdownload' : 'Downloading files',","\t3861: \t\t\t'ntfsave'     : 'Save files',","\t3863: \t\t\t'ntfextract'  : 'Extracting files from archive',","\t3864: \t\t\t'ntfsearch'   : 'Searching files',","\t3897: \t\t\t'confirmRm'       : 'Are you sure you want to remove files?<br/>This cannot be undone!',","\t3898: \t\t\t'confirmRepl'     : 'Replace old file with new one?',","\t3910: \t\t\t'selectall'       : 'Select all files',","\t3911: \t\t\t'selectfiles'     : 'Select file(s)',","\t3912: \t\t\t'selectffile'     : 'Select first file',","\t3913: \t\t\t'selectlfile'     : 'Select last file',","\t3922: \t\t\t'files'           : 'Files',","\t3933: \t\t\t'webfm'           : 'Web file manager',","\t3950: \t\t\t'dropFiles'       : 'Drop files here',","\t3952: \t\t\t'selectForUpload' : 'Select files to upload',","\t3953: \t\t\t'moveFiles'       : 'Move files',","\t3954: \t\t\t'copyFiles'       : 'Copy files',","\t3976: \t\t\t'kindTorrent'     : 'Bittorrent file',","\t3983: \t\t\t'kindJAR'         : 'Java JAR file',","\t4045:  * File: /root/tmp/elFinder/js/ui/button.js","\t4126:  * File: /root/tmp/elFinder/js/ui/contexmenu.js","\t4275:  * File: /root/tmp/elFinder/js/ui/cwd.js","\t4321: \t\t\t * File css class","\t4325: \t\t\tclFile       = fm.res(c, 'cwdfile'),","\t4332: \t\t\tfileSelector = '.'+clFile,","\t4377: \t\t\t * Css class for temporary nodes (for mkdir/mkfile) commands","\t4381: \t\t\tclTmp = clFile+'-tmp',","\t4391: \t\t\t * File templates","\t4396: \t\t\t\ticon : '<div id=\"{hash}\" class=\"'+clFile+' {permsclass} {dirclass} ui-corner-all\"><div class=\"elfinder-cwd-file-wrapper ui-corner-all\"><div class=\"elfinder-cwd-icon {mime} ui-corner-all\" unselectable=\"on\" {style}/>{marker}</div><div class=\"elfinder-cwd-filename\" title=\"{name}\">{name}</div></div>',","\t4397: \t\t\t\trow  : '<tr id=\"{hash}\" class=\"'+clFile+' {permsclass} {dirclass}\"><td><div class=\"elfinder-cwd-file-wrapper\"><span class=\"elfinder-cwd-icon {mime}\"/>{marker}<span class=\"elfinder-cwd-filename\">{name}</span></div></td><td>{perms}</td><td>{date}</td><td>{size}</td><td>{kind}</td></tr>'","\t4437: \t\t\t * Return file html","\t4439: \t\t\t * @param  Object  file info","\t4451: \t\t\t * Flag. Required for msie to avoid unselect files on dragstart","\t4458: \t\t\t * Move selection to prev/next file","\t4477: \t\t\t\t\ts = sel.filter(prev ? ':first' : ':last');","\t4484: \t\t\t\t\t\t// find real prevoius file","\t4487: \t\t\t\t\t\t// find up/down side file in icons view","\t4508: \t\t\t\t\t\t\t// there is row before last one - select last file","\t4519: \t\t\t\t\t// there are no selected file - select first/last one","\t4526: \t\t\t\t\t\t// append new files to selected","\t4529: \t\t\t\t\t\t// unselect selected files","\t4532: \t\t\t\t\t// select file(s)","\t4535: \t\t\t\t\tscrollToView(n.filter(prev ? ':first' : ':last'));","\t4541: \t\t\tselectFile = function(hash) {","\t4546: \t\t\t * Unselect all files","\t4555: \t\t\t * Return selected files hashes list","\t4567: \t\t\t * Fire elfinder \"select\" event and pass selected files to it","\t4576: \t\t\t * Scroll file to set it visible","\t4578: \t\t\t * @param DOMElement  file/dir node","\t4595: \t\t\t * Files we get from server but not show yet","\t4604: \t\t\t * @param String  file hash","\t4627: \t\t\t * Lazy load - append to cwd not shown files","\t4639: \t\t\t\t\tfiles;","\t4646: \t\t\t\t\t&& (files = buffer.splice(0, fm.options.showFiles)).length) {","\t4648: \t\t\t\t\thtml = $.map(files, function(f) {","\t4679: \t\t\t * Do not add class on childs file over","\t4687: \t\t\t\t\t$.each(ui.helper.data('files'), function(i, h) {","\t4688: \t\t\t\t\t\tif (fm.file(h).phash == hash) {","\t4708: \t\t\t * Preload required thumbnails and on load add css to files.","\t4709: \t\t\t * Return false if required file is not visible yet (in buffer) -","\t4712: \t\t\t * @param  Object  file hash -> thumbnail map","\t4743: \t\t\t * @param  Array|Boolean  files hashes list for new api | true for old api","\t4746: \t\t\tloadThumbnails = function(files) {","\t4762: \t\t\t\ttmbs = tmbs = files.splice(0, tmbNum);","\t4770: \t\t\t\t\t\t\tloadThumbnails(files);","\t4777: \t\t\t * Add new files to cwd/buffer","\t4779: \t\t\t * @param  Array  new files","\t4782: \t\t\tadd = function(files) {","\t4784: \t\t\t\t\tl        = files.length, ","\t4788: \t\t\t\t\tfindNode = function(file) {","\t4789: \t\t\t\t\t\tvar pointer = cwd.find('[id]:first'), file2;","\t4792: \t\t\t\t\t\t\tfile2 = fm.file(pointer.attr('id'));","\t4793: \t\t\t\t\t\t\tif (file2 && fm.compare(file, file2) < 0) {","\t4799: \t\t\t\t\tfindIndex = function(file) {","\t4803: \t\t\t\t\t\t\tif (fm.compare(file, buffer[i]) < 0) {","\t4809: \t\t\t\t\tfile, hash, node, ndx;","\t4813: \t\t\t\t\tfile = files[l];","\t4814: \t\t\t\t\thash = file.hash;","\t4820: \t\t\t\t\tif ((node = findNode(file)) && node.length) {","\t4821: \t\t\t\t\t\tnode.before(itemhtml(file));","\t4822: \t\t\t\t\t} else if ((ndx = findIndex(file)) >= 0) {","\t4823: \t\t\t\t\t\tbuffer.splice(ndx, 0, file);","\t4825: \t\t\t\t\t\tplace.append(itemhtml(file));","\t4829: \t\t\t\t\t\tif (file.mime == 'directory') {","\t4831: \t\t\t\t\t\t} else if (file.tmb) {","\t4832: \t\t\t\t\t\t\tfile.tmb === 1 ? ltmb.push(hash) : (atmb[hash] = file.tmb);","\t4843: \t\t\t * Remove files from cwd/buffer","\t4845: \t\t\t * @param  Array  files hashes","\t4848: \t\t\tremove = function(files) {","\t4849: \t\t\t\tvar l = files.length, hash, n, ndx;","\t4852: \t\t\t\t\thash = files[l];","\t4875: \t\t\t * @param  Array  files","\t4878: \t\t\tcontent = function(files, any) {","\t4883: \t\t\t\t\tcwd.children('table,'+fileSelector).remove().end();","\t4895: \t\t\t\tbuffer = $.map(files, function(f) { return any || f.phash == phash ? f : null; });","\t4897: \t\t\t\tbuffer = fm.sortFiles(buffer);","\t4913: \t\t\t\t.delegate(fileSelector, 'click.'+fm.namespace, function(e) {","\t4936: \t\t\t\t.delegate(fileSelector, 'dblclick.'+fm.namespace, function(e) {","\t4937: \t\t\t\t\tfm.dblclick({file : this.id});","\t4940: \t\t\t\t.delegate(fileSelector, 'mouseenter.'+fm.namespace, function(e) {","\t4948: \t\t\t\t// add hover class to selected file","\t4949: \t\t\t\t.delegate(fileSelector, evtSelect, function(e) {","\t4953: \t\t\t\t// remove hover class from unselected file","\t4954: \t\t\t\t.delegate(fileSelector, evtUnselect, function(e) {","\t4957: \t\t\t\t// disable files wich removing or moving","\t4958: \t\t\t\t.delegate(fileSelector, evtDisable, function() {","\t4966: \t\t\t\t// if any files was not removed/moved - unlock its","\t4967: \t\t\t\t.delegate(fileSelector, evtEnable, function() {","\t4974: \t\t\t\t.delegate(fileSelector, 'scrolltoview', function() {","\t4977: \t\t\t\t.delegate(fileSelector, 'hover', function(e) {","\t4981: \t\t\t\t\tvar file = $(e.target).closest('.'+clFile);","\t4983: \t\t\t\t\tif (file.length) {","\t4986: \t\t\t\t\t\tif (!file.is('.'+clDisabled)) {","\t4987: \t\t\t\t\t\t\tif (!file.is('.'+clSelected)) {","\t4989: \t\t\t\t\t\t\t\tfile.trigger(evtSelect);","\t4993: \t\t\t\t\t\t\t\t'type'    : 'files',","\t5007: \t\t\t\t// make files selectable","\t5009: \t\t\t\t\tfilter     : fileSelector,","\t5016: \t\t\t\t// prepend fake file/dir","\t5017: \t\t\t\t.bind('create.'+fm.namespace, function(e, file) {","\t5020: \t\t\t\t\tparent.prepend($(itemhtml(file)).addClass(clTmp));","\t5023: \t\t\t\t// unselect all selected files","\t5028: \t\t\t\t.bind('selectfile', function(e, id) {","\t5084: \t\t\t\te.dataTransfer && e.dataTransfer.files &&  e.dataTransfer.files.length && fm.exec('upload', {files : e.dataTransfer.files})//fm.upload({files : e.dataTransfer.files});","\t5090: \t\t\t\tcontent(e.data.files, e.type=='search');","\t5093: \t\t\t\tcontent(fm.files());","\t5101: \t\t\t\t\tcontent(fm.files());","\t5104: \t\t\t\t\t\tselectFile(h);","\t5119: \t\t\t\t$.each($.map(e.data.changed || [], function(f) { return f.phash == phash ? f : null; }), function(i, file) {","\t5120: \t\t\t\t\tremove([file.hash]);","\t5121: \t\t\t\t\tadd([file]);","\t5122: \t\t\t\t\t$.inArray(file.hash, sel) !== -1 && selectFile(file.hash);","\t5138: \t\t\t// select dragged file if no selected, disable selectable","\t5143: \t\t\t\tif (target.is(fileSelector)) {","\t5161: \t\t\t.bind('lockfiles unlockfiles', function(e) {","\t5162: \t\t\t\tvar event = e.type == 'lockfiles' ? evtDisable : evtEnable,","\t5163: \t\t\t\t\tfiles = e.data.files || [], ","\t5164: \t\t\t\t\tl     = files.length;","\t5167: \t\t\t\t\tcwd.find('#'+files[l]).trigger(event);","\t5171: \t\t\t// select new files after some actions","\t5172: \t\t\t.bind('mkdir mkfile duplicate upload rename archive extract', function(e) {","\t5173: \t\t\t\tvar phash = fm.cwd().hash, files;","\t5177: \t\t\t\t$.each(e.data.added || [], function(i, file) { ","\t5178: \t\t\t\t\tfile && file.phash == phash && selectFile(file.hash);","\t5192: \t\t\t\t\t\tfm.select({selected : $.map(fm.files(), function(f) { return f.phash == phash ? f.hash : null; })})","\t5200: \t\t\t\tdescription : 'selectfiles',","\t5206: \t\t\t\tdescription : 'selectffile',","\t5215: \t\t\t\tdescription : 'selectlfile',","\t5232:  * File: /root/tmp/elFinder/js/ui/dialog.js","\t5259: \tthis.filter(':not(.ui-dialog-content)').each(function() {","\t5445:  * File: /root/tmp/elFinder/js/ui/navbar.js","\t5500:  * File: /root/tmp/elFinder/js/ui/overlay.js","\t5506: \tthis.filter(':not(.elfinder-overlay)').each(function() {","\t5552:  * File: /root/tmp/elFinder/js/ui/panel.js","\t5573:  * File: /root/tmp/elFinder/js/ui/path.js","\t5598: \t\t\t\t\tdirs.push('<a href=\"#'+hash+'\">'+fm.escape(fm.file(hash).name)+'</a>');","\t5610:  * File: /root/tmp/elFinder/js/ui/places.js","\t5805: \t\t\t\t\taccept     : '.elfinder-cwd-file-wrapper,.elfinder-tree-dir,.elfinder-cwd-file',","\t5810: \t\t\t\t\t\t$.each(ui.helper.data('files'), function(i, hash) {","\t5811: \t\t\t\t\t\t\tvar dir = fm.file(hash);","\t5825: \t\t// on fm load - show places and load files from backend","\t5844: \t\t\t\t\t$.each(data.files, function(i, file) {","\t5845: \t\t\t\t\t\tfile.mime == 'directory' && add(file);","\t5865: \t\t\t\t$.each(e.data.changed, function(i, file) {","\t5866: \t\t\t\t\tif ($.inArray(file.hash, dirs) !== -1) {","\t5867: \t\t\t\t\t\tremove(file.hash);","\t5868: \t\t\t\t\t\tfile.mime == 'directory' && add(file);","\t5882: \t\t\t\t\t\t$.each(data.files || [], function(i, file) {","\t5883: \t\t\t\t\t\t\tif ($.inArray(file.hash, dirs) === -1) {","\t5884: \t\t\t\t\t\t\t\tremove(file.hash);","\t5901:  * File: /root/tmp/elFinder/js/ui/searchbutton.js","\t5983:  * File: /root/tmp/elFinder/js/ui/sortbutton.js","\t6063:  * File: /root/tmp/elFinder/js/ui/stat.js","\t6068:  * Display number of files/selected files and its size in statusbar","\t6079: \t\t\tsetstat    = function(files, cwd) {","\t6083: \t\t\t\t$.each(files, function(i, file) {","\t6084: \t\t\t\t\tif (!cwd || file.phash == cwd) {","\t6086: \t\t\t\t\t\ts += parseInt(file.size)||0;","\t6096: \t\t\tsetstat(fm.files(), fm.cwd().hash)","\t6099: \t\t\tsetstat(e.data.files);","\t6104: \t\t\t\tfiles = fm.selectedFiles();","\t6106: \t\t\tif (files.length == 1) {","\t6107: \t\t\t\ts = files[0].size;","\t6108: \t\t\t\tsel.html(fm.escape(files[0].name)+(s > 0 ? ', '+fm.formatSize(s) : ''));","\t6113: \t\t\t$.each(files, function(i, file) {","\t6115: \t\t\t\ts += parseInt(file.size)||0;","\t6126:  * File: /root/tmp/elFinder/js/ui/toolbar.js","\t6165:  * File: /root/tmp/elFinder/js/ui/tree.js","\t6346: \t\t\t * Return only dirs from files list","\t6348: \t\t\t * @param  Array  files list","\t6351: \t\t\tfilter = function(files) {","\t6352: \t\t\t\treturn $.map(files||[], function(f) { return f.mime == 'directory' ? f : null });","\t6378: \t\t\t\t\tif ((info = fm.file(fm.navId2Hash(node.children('[id]').attr('id')))) ","\t6448: \t\t\t\t\t\tcurrent.parentsUntil('.'+root).filter('.'+subtree).show().prev('.'+navdir).addClass(expanded);","\t6455: \t\t\t\t\t\t\tvar dirs = filter(data.tree);","\t6490: \t\t\t\t\t\t.filter(function() { return $(this).next('.'+subtree).children().length > 0 })","\t6543: \t\t\t\t\t\t\t\t"]},{"start":{"row":855,"column":15},"end":{"row":1771,"column":9320},"action":"insert","lines":["updateTree(filter(data.tree)); ","\t6574: \t\t\t\tdirs = filter(data.files);","\t6586: \t\t\tvar dirs = filter(e.data.added);","\t6595: \t\t\tvar dirs = filter(e.data.changed),","\t6655: \t\t.bind('lockfiles unlockfiles', function(e) {","\t6656: \t\t\tvar lock = e.type == 'lockfiles',","\t6658: \t\t\t\tdirs = $.map(e.data.files||[], function(h) {  ","\t6659: \t\t\t\t\tvar dir = fm.file(h);","\t6681:  * File: /root/tmp/elFinder/js/ui/uploadButton.js","\t6685:  * @class  elFinder toolbar's button tor upload file","\t6694: \t\t\tinput = $('<input type=\"file\" multiple=\"true\"/>')","\t6714:  * File: /root/tmp/elFinder/js/ui/viewbutton.js","\t6737:  * File: /root/tmp/elFinder/js/ui/workzone.js","\t6773:  * File: /root/tmp/elFinder/js/commands/archive.js","\t6778:  * Archive selected files","\t6809: \t\tvar files = this.files(hashes),","\t6810: \t\t\tcnt   = files.length,","\t6828: \t\t\tif (!files[i].read) {","\t6843:  * File: /root/tmp/elFinder/js/commands/back.js","\t6870:  * File: /root/tmp/elFinder/js/commands/copy.js","\t6875:  * Put files in filemanager clipboard.","\t6887: \t\tvar sel = this.files(sel),","\t6900: \t\t$.each(this.files(hashes), function(i, file) {","\t6901: \t\t\tif (!(file.read && file.phash)) {","\t6902: \t\t\t\treturn !dfrd.reject(['errCopy', file.name, 'errPerm']);","\t6912:  * File: /root/tmp/elFinder/js/commands/cut.js","\t6917:  * Put files in filemanager clipboard.","\t6929: \t\tvar sel = this.files(sel),","\t6942: \t\t$.each(this.files(hashes), function(i, file) {","\t6943: \t\t\tif (!(file.read && file.phash) ) {","\t6944: \t\t\t\treturn !dfrd.reject(['errCopy', file.name, 'errPerm']);","\t6946: \t\t\tif (file.locked) {","\t6947: \t\t\t\treturn !dfrd.reject(['errLocked', file.name]);","\t6957:  * File: /root/tmp/elFinder/js/commands/download.js","\t6962:  * Download selected files.","\t6970: \t\tfilter = function(hashes) {","\t6971: \t\t\treturn $.map(self.files(hashes), function(f) { return f.mime == 'directory' ? null : f });","\t6982: \t\treturn  !this._disabled && cnt && cnt == filter(sel).length ? 0 : -1;","\t6988: \t\t\tfiles = filter(hashes),","\t7003: \t\tfor (i = 0; i < files.length; i++) {","\t7004: \t\t\tvar iframe = $('<iframe style=\"display:none\" src=\"'+base + 'cmd=file&target=' + files[i].hash+'&download=1'+'\"/>')","\t7018:  * File: /root/tmp/elFinder/js/commands/duplicate.js","\t7023:  * Create file/folder copy with suffix \"copy Number\"","\t7034: \t\tvar sel = this.files(sel),","\t7042: \t\t\tfiles  = this.files(hashes),","\t7043: \t\t\tcnt    = files.length,","\t7054: \t\t$.each(files, function(i, file) {","\t7055: \t\t\tif (!file.read || !fm.file(file.phash).write) {","\t7056: \t\t\t\treturn !dfrd.reject(['errCopy', file.name, 'errPerm']);","\t7074:  * File: /root/tmp/elFinder/js/commands/edit.js","\t7079:  * Edit text file in dialog window","\t7088: \t\t * Return files acceptable to edit","\t7090: \t\t * @param  Array  files hashes","\t7093: \t\tfilter = function(files) {","\t7094: \t\t\treturn $.map(files, function(file) {","\t7095: \t\t\t\treturn file.mime.indexOf('text/') === 0 || $.inArray(file.mime, mimes) !== -1 && file.read && file.write ? file : null;","\t7099: \t\t * Get file content and","\t7100: \t\t * open dialog with textarea to edit file content","\t7102: \t\t * @param  String  file hash","\t7105: \t\tedit = function(file) {","\t7106: \t\t\tvar hash   = file.hash,","\t7109: \t\t\t\tdata   = {cmd : 'file', target : hash},","\t7111: \t\t\t\tid    = 'edit-'+fm.namespace+'-'+file.hash,","\t7113: \t\t\t\t\tvar editor = $('<textarea class=\"elfinder-file-edit\" rows=\"20\">'+text+'</textarea>')","\t7144: \t\t\t\t\t\t\ttitle   : file.name,","\t7199: \t\t\tif (!file.read || !file.write) {","\t7200: \t\t\t\terror = ['errOpen', file.name, 'errPerm']","\t7207: \t\t\t\tnotify : {type : 'openfile', cnt : 1},","\t7226: \t\tvar sel = this.files(sel),","\t7229: \t\treturn !this._disabled && cnt && filter(sel).length == cnt ? 0 : -1;","\t7233: \t\tvar files = filter(this.files(hashes)),","\t7235: \t\t\tfile;","\t7241: \t\twhile ((file = files.shift())) {","\t7242: \t\t\tlist.push(edit(file));","\t7253:  * File: /root/tmp/elFinder/js/commands/extract.js","\t7258:  * Extract files from archive","\t7266: \t\tfilter  = function(files) {","\t7267: \t\t\treturn $.map(files, function(file) { ","\t7268: \t\t\t\treturn file.read && $.inArray(file.mime, mimes) !== -1 ? file : null","\t7282: \t\tvar sel = this.files(sel),","\t7285: \t\treturn !this._disabled && cnt && filter(sel).length == cnt ? 0 : -1;","\t7289: \t\tvar files    = this.files(hashes),","\t7291: \t\t\tcnt      = files.length, ","\t7293: \t\t\ti, file, error;","\t7300: \t\t\tfile = files[i];","\t7301: \t\t\tif (!(file.read && fm.file(file.phash).write)) {","\t7302: \t\t\t\terror = ['errExtract', file.name, 'errPerm']","\t7307: \t\t\tif ($.inArray(file.mime, mimes) === -1) {","\t7308: \t\t\t\terror = ['errExtract', file.name, 'errNoArchive'];","\t7314: \t\t\t\tdata       : {cmd : 'extract', target : file.hash},","\t7338:  * File: /root/tmp/elFinder/js/commands/forward.js","\t7365:  * File: /root/tmp/elFinder/js/commands/getfile.js","\t7369:  * @class elFinder command \"getfile\". ","\t7370:  * Return selected files info into outer callback.","\t7375: elFinder.prototype.commands.getfile = function() {","\t7378: \t\tfilter = function(files) {","\t7381: \t\t\tfiles = $.map(files, function(file) {","\t7382: \t\t\t\treturn file.mime != 'directory' || o.folders ? file : null;","\t7385: \t\t\treturn o.multiple || files.length == 1 ? files : [];","\t7389: \tthis.callback      = fm.options.getFileCallback;","\t7393: \t\tvar sel = this.files(sel),","\t7396: \t\treturn this.callback && cnt && filter(sel).length == cnt ? 0 : -1;","\t7402: \t\t\tfiles = this.files(hashes),","\t7403: \t\t\tcnt   = files.length,","\t7408: \t\t\t\t\tfm.trigger('getfile', {files : data});","\t7417: \t\t\tresult = function(file) {","\t7419: \t\t\t\t\t? opts.multiple ? $.map(files, function(f) { return f.url; }) : files[0].url","\t7420: \t\t\t\t\t: opts.multiple ? files : files[0];","\t7423: \t\t\ti, file, dim;","\t7430: \t\t\tfile = files[i];","\t7431: \t\t\tif (file.mime == 'directory' && !opts.folders) {","\t7434: \t\t\tfile.baseUrl = url;","\t7435: \t\t\tfile.url     = fm.url(file.hash);","\t7436: \t\t\tfile.path    = fm.path(file.hash);","\t7437: \t\t\tif (file.tmb && file.tmb != 1) {","\t7438: \t\t\t\tfile.tmb = tmb + file.tmb;","\t7440: \t\t\tif (file.dim) {","\t7441: \t\t\t\tdim = file.dim.split('x');","\t7442: \t\t\t\tfile.width = dim[0];","\t7443: \t\t\t\tfile.height = dim[1];","\t7444: \t\t\t} else if (file.mime.indexOf('image') !== -1) {","\t7446: \t\t\t\t\tdata : {cmd : 'dim', target : file.hash},","\t7456: \t\t\t\t}, files[i])));","\t7462: \t\t\t\tdfrd.resolve(result(files));","\t7467: \t\treturn dfrd.resolve(result(files));","\t7473:  * File: /root/tmp/elFinder/js/commands/help.js","\t7603: \t\t\t\t\t\tcontent.find('.ui-tabs-panel').hide().filter(link.attr('href')).show();","\t7607: \t\t\t\t.filter(':first').click();","\t7624:  * File: /root/tmp/elFinder/js/commands/home.js","\t7652:  * File: /root/tmp/elFinder/js/commands/info.js","\t7657:  * Display dialog with file properties.","\t7676: \t\t\tfiles    : fm.i18n('files'),","\t7713: \t\t\tfiles   = this.files(hashes),","\t7714: \t\t\tcnt     = files.length,","\t7726: \t\t\tid = fm.namespace+'-info-'+$.map(files, function(f) { return f.hash }).join('-'),","\t7728: \t\t\tsize, tmb, file, title, dcnt;","\t7741: \t\t\tfile  = files[0];","\t7742: \t\t\tview  = view.replace('{class}', fm.mime2class(file.mime));","\t7743: \t\t\ttitle = tpl.itemTitle.replace('{name}', file.name).replace('{kind}', fm.mime2kind(file));","\t7745: \t\t\tif (file.tmb) {","\t7746: \t\t\t\ttmb = fm.option('tmbUrl')+file.tmb;","\t7749: \t\t\tif (!file.read) {","\t7751: \t\t\t} else if (file.mime != 'directory' || file.alias) {","\t7752: \t\t\t\tsize = fm.formatSize(file.size);","\t7755: \t\t\t\tcount.push(file.hash);","\t7759: \t\t\tfile.alias && content.push(row.replace(l, msg.aliasfor).replace(v, file.alias));","\t7760: \t\t\tcontent.push(row.replace(l, msg.path).replace(v, fm.escape(fm.path(file.hash))));","\t7761: \t\t\tfile.read && content.push(row.replace(l, msg.link).replace(v,  '<a href=\"'+fm.url(file.hash)+'\" target=\"_blank\">'+file.name+'</a>'));","\t7763: \t\t\tif (file.dim) { // old api","\t7764: \t\t\t\tcontent.push(row.replace(l, msg.dim).replace(v, file.dim));","\t7765: \t\t\t} else if (file.mime.indexOf('image') !== -1) {","\t7768: \t\t\t\t\tdata : {cmd : 'dim', target : file.hash},","\t7780: \t\t\tcontent.push(row.replace(l, msg.modify).replace(v, fm.formatDate(file.date)));","\t7781: \t\t\tcontent.push(row.replace(l, msg.perms).replace(v, fm.formatPermissions(file)));","\t7782: \t\t\tcontent.push(row.replace(l, msg.locked).replace(v, file.locked ? msg.yes : msg.no));","\t7786: \t\t\tdcnt  = $.map(files, function(f) { return f.mime == 'directory' ? 1 : null }).length;","\t7789: \t\t\t\t$.each(files, function(h, f) { ","\t7798: \t\t\t\tcontent.push(row.replace(l, msg.kind).replace(v, msg.files));","\t7801: \t\t\t\tcontent.push(row.replace(l, msg.kind).replace(v, dcnt == cnt ? msg.folders : msg.folders+' '+dcnt+', '+msg.files+' '+(cnt-dcnt)))","\t7803: \t\t\t\tcount = $.map(files, function(f) { return f.hash });","\t7842:  * File: /root/tmp/elFinder/js/commands/mkdir.js","\t7870:  * File: /root/tmp/elFinder/js/commands/mkfile.js","\t7874:  * @class  elFinder command \"mkfile\"","\t7875:  * Create new empty file","\t7879: elFinder.prototype.commands.mkfile = function() {","\t7883: \tthis.prefix          = 'untitled file.txt';","\t7894:  * File: /root/tmp/elFinder/js/commands/open.js","\t7899:  * Enter folder or open files in new windows","\t7916: \t\tvar sel = this.files(sel),","\t7921: \t\t\t: cnt ? ($.map(sel, function(file) { return file.mime == 'directory' ? null : file}).length == cnt ? 0 : -1) : -1","\t7927: \t\t\tfiles = this.files(hashes),","\t7928: \t\t\tcnt   = files.length,","\t7929: \t\t\tfile, url, s, w;","\t7936: \t\tif (cnt == 1 && (file = files[0]) && file.mime == 'directory') {","\t7937: \t\t\treturn file && !file.read","\t7938: \t\t\t\t? dfrd.reject(['errOpen', file.name, 'errPerm'])","\t7940: \t\t\t\t\t\tdata   : {cmd  : 'open', target : file.hash},","\t7946: \t\tfiles = $.map(files, function(file) { return file.mime != 'directory' ? file : null });","\t7948: \t\t// nothing to open or files and folders selected - do nothing","\t7949: \t\tif (cnt != files.length) {","\t7953: \t\t// open files","\t7954: \t\tcnt = files.length;","\t7956: \t\t\tfile = files[cnt];","\t7958: \t\t\tif (!file.read) {","\t7959: \t\t\t\treturn dfrd.reject(['errOpen', file.name, 'errPerm']);","\t7962: \t\t\tif (!(url = fm.url(file.hash))) {","\t7965: \t\t\t\t\t+ (fm.oldAPI ? 'cmd=open&current='+file.phash : 'cmd=file')","\t7966: \t\t\t\t\t+ '&target=' + file.hash;","\t7971: \t\t\tif (file.dim) {","\t7972: \t\t\t\ts = file.dim.split('x');","\t7986:  * File: /root/tmp/elFinder/js/commands/paste.js","\t7991:  * Paste filesfrom clipboard into directory.","\t7992:  * If files pasted in its parent directory - files duplicates will created","\t8018: \t\t\t\tdst = this.fm.file(dst[0]);","\t8030: \t\t\tdst    = dst ? this.files(dst)[0] : fm.cwd(),","\t8031: \t\t\tfiles  = fm.clipboard(),","\t8032: \t\t\tcnt    = files.length,","\t8033: \t\t\tcut    = cnt ? files[0].cut : false,","\t8041: \t\t\tcopy  = function(files) {","\t8042: \t\t\t\treturn files.length && fm._commands.duplicate","\t8043: \t\t\t\t\t? fm.exec('duplicate', files)","\t8046: \t\t\tpaste = function(files) {","\t8049: \t\t\t\t\tintersect = function(files, names) {","\t8051: \t\t\t\t\t\t\ti   = files.length;","\t8054: \t\t\t\t\t\t\t$.inArray(files[i].name, names) !== -1 && ret.unshift(i);","\t8060: \t\t\t\t\t\t\tfile = files[i],","\t8063: \t\t\t\t\t\tif (!file) {","\t8068: \t\t\t\t\t\t\ttitle  : fm.i18n(cut ? 'moveFiles' : 'copyFiles'),","\t8069: \t\t\t\t\t\t\ttext   : fm.i18n(['errExists', file.name, 'confirmRepl']), ","\t8076: \t\t\t\t\t\t\t\t\t\t: paste(files);","\t8087: \t\t\t\t\t\t\t\t\t\t\tfiles[existed[i]].remove = true","\t8090: \t\t\t\t\t\t\t\t\t\tfiles[existed[ndx]].remove = true;","\t8095: \t\t\t\t\t\t\t\t\t\t: paste(files);","\t8107: \t\t\t\t\t\texisted = intersect(files, names);","\t8108: \t\t\t\t\t\texisted.length ? confirm(0) : paste(files);","\t8110: \t\t\t\t\tpaste     = function(files) {","\t8111: \t\t\t\t\t\tvar files  = $.map(files, function(file) { return !file.remove ? file : null } ),","\t8112: \t\t\t\t\t\t\tcnt    = files.length,","\t8121: \t\t\t\t\t\tsrc = files[0].phash;","\t8122: \t\t\t\t\t\tfiles = $.map(files, function(f) { return f.hash});","\t8125: \t\t\t\t\t\t\t\tdata   : {cmd : 'paste', dst : dst.hash, targets : files, cut : cut ? 1 : 0, src : src},","\t8129: \t\t\t\t\t\t\t\tfm.unlockfiles({files : files});","\t8134: \t\t\t\tif (self._disabled || !files.length) {","\t8140: \t\t\t\t\tpaste(files);","\t8144: \t\t\t\t\t\tpaste(files);","\t8148: \t\t\t\t\t\t\t? valid($.map(fm.files(), function(file) { return file.phash == dst.hash ? file.name : null }))","\t8170: \t\t\treturn dfrd.reject([error, files[0].name, 'errPerm']);","\t8175: \t\t$.each(files, function(i, file) {","\t8176: \t\t\tif (!file.read) {","\t8177: \t\t\t\treturn !dfrd.reject([error, files[0].name, 'errPerm']);","\t8180: \t\t\tif (cut && file.locked) {","\t8181: \t\t\t\treturn !dfrd.reject(['errLocked', file.name]);","\t8184: \t\t\tif ($.inArray(file.hash, parents) !== -1) {","\t8185: \t\t\t\treturn !dfrd.reject(['errCopyInItself', file.name]);","\t8188: \t\t\tfparents = fm.parents(file.hash);","\t8191: \t\t\t\tif ($.map(fparents, function(h) { var d = fm.file(h); return d.phash == dst.hash && d.name == file.name ? d : null }).length) {","\t8192: \t\t\t\t\treturn !dfrd.reject(['errReplByChild', file.name]);","\t8196: \t\t\tif (file.phash == dst.hash) {","\t8197: \t\t\t\tfcopy.push(file.hash);","\t8200: \t\t\t\t\thash  : file.hash,","\t8201: \t\t\t\t\tphash : file.phash,","\t8202: \t\t\t\t\tname  : file.name","\t8222:  * File: /root/tmp/elFinder/js/commands/quicklook.js","\t8227:  * Fast preview for some files types","\t8288: \t\t * @param  jQuery  file node in cwd","\t8430: \t\t\t\tfile    = e.file,","\t8434: \t\t\tif (file) {","\t8435: \t\t\t\t!file.read && e.stopImmediatePropagation();","\t8436: \t\t\t\tself.window.data('hash', file.hash);","\t8438: \t\t\t\ttitle.html(fm.escape(file.name));","\t8441: \t\t\t\t\t\ttpl.replace(/\\{value\\}/, file.name)","\t8442: \t\t\t\t\t\t+ tpl.replace(/\\{value\\}/, fm.mime2kind(file))","\t8443: \t\t\t\t\t\t+ (file.mime == 'directory' ? '' : tpl.replace(/\\{value\\}/, fm.formatSize(file.size)))","\t8444: \t\t\t\t\t\t+ tpl.replace(/\\{value\\}/, fm.i18n('modify')+': '+ fm.formatDate(file.date))","\t8446: \t\t\t\ticon.addClass('elfinder-cwd-icon ui-corner-all '+fm.mime2class(file.mime));","\t8448: \t\t\t\tif (file.tmb) {","\t8456: \t\t\t\t\t\t.attr('src', (tmb = fm.tmb(file.hash)));","\t8482: \t\t\t\tfile = self.value,","\t8485: \t\t\tif (self.closed() && file && (node = cwd.find('#'+file.hash)).length) {","\t8500: \t\t\t\tfile    = self.value,","\t8526: \t * Selected file","\t8533: \t\t// save selected file","\t8534: \t\tselect : function() { this.update(void(0), this.fm.selectedFiles()[0]); },","\t8617: \t\t\t\t\tself.value ? preview.trigger($.Event('update', {file : self.value})) : win.trigger('close');","\t8651:  * File: /root/tmp/elFinder/js/commands/quicklook.plugins.js","\t8676: \t\t\tvar file = e.file,","\t8679: \t\t\tif ($.inArray(file.mime, mimes) !== -1) {","\t8680: \t\t\t\t// this is our file - stop event propagation","\t8714: \t\t\t\t\t.attr('src', ql.fm.url(file.hash));","\t8731: \t\t\tvar file = e.file, jqxhr;","\t8733: \t\t\tif ($.inArray(file.mime, mimes) !== -1) {","\t8736: \t\t\t\t// stop loading on change file if not loaded yet","\t8744: \t\t\t\t\tdata           : {cmd : 'get', target  : file.hash, current : file.phash},","\t8770: \t\t\tvar file = e.file,","\t8771: \t\t\t\tmime = file.mime,","\t8777: \t\t\t\t// stop loading on change file if not loadin yet","\t8785: \t\t\t\t\tdata   : {cmd     : 'get', target  : file.hash },","\t8820: \t\t\tvar file = e.file, node;","\t8822: \t\t\tif (file.mime == mime) {","\t8835: \t\t\t\t\t.attr('src', fm.url(file.hash));","\t8863: \t\t\tvar file = e.file,","\t8866: \t\t\tif (file.mime == mime) {","\t8869: \t\t\t\tpreview.append((node = $('<embed class=\"elfinder-quicklook-preview-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" src=\"'+fm.url(file.hash)+'\" quality=\"high\" type=\"application/x-shockwave-flash\" />')));","\t8899: \t\t\tvar file = e.file,","\t8900: \t\t\t\ttype = mimes[file.mime];","\t8905: \t\t\t\tnode = $('<audio class=\"elfinder-quicklook-preview-audio\" controls preload=\"auto\" autobuffer><source src=\"'+ql.fm.url(file.hash)+'\" /></audio>')","\t8936: \t\t\tvar file = e.file,","\t8937: \t\t\t\ttype = mimes[file.mime];","\t8943: \t\t\t\tnode = $('<video class=\"elfinder-quicklook-preview-video\" controls preload=\"auto\" autobuffer><source src=\"'+ql.fm.url(file.hash)+'\" /></video>').appendTo(preview);","\t8973: \t\t\tvar file  = e.file,","\t8974: \t\t\t\tmime  = file.mime,","\t8977: \t\t\tif ($.inArray(file.mime, mimes) !== -1) {","\t8980: \t\t\t\tnode = $('<embed src=\"'+ql.fm.url(file.hash)+'\" type=\"'+mime+'\" class=\"elfinder-quicklook-preview-'+(video ? 'video' : 'audio')+'\"/>')","\t8995:  * File: /root/tmp/elFinder/js/commands/reload.js","\t9000:  * Sync files and folders","\t9034:  * File: /root/tmp/elFinder/js/commands/rename.js","\t9039:  * Rename selected file.","\t9051: \t\tvar sel = this.fm.selectedFiles();","\t9061: \t\t\tfile     = fm.file(sel.shift()),","\t9062: \t\t\tfilename = '.elfinder-cwd-filename',","\t9066: \t\t\t\t\t\tname   = fm.escape(file.name);","\t9073: \t\t\t\t\t\tcwd.find('#'+file.hash).find(filename).html(name);","\t9104: \t\t\t\t\t\tif (name == file.name) {","\t9110: \t\t\t\t\t\tif (fm.fileByName(name, file.phash)) {","\t9115: \t\t\t\t\t\tfm.lockfiles({files : [file.hash]});","\t9117: \t\t\t\t\t\t\t\tdata   : {cmd : 'rename', target : file.hash, name : name},","\t9128: \t\t\t\t\t\t\t\tfm.unlockfiles({files : [file.hash]})","\t9133: \t\t\tnode = cwd.find('#'+file.hash).find(filename).empty().append(input.val(file.name)),","\t9141: \t\tif (!file || cnt > 1 || !node.length) {","\t9145: \t\tif (file.locked) {","\t9146: \t\t\treturn dfrd.reject(['errLocked', file.name]);","\t9150: \t\t\tinput.parent().length && file && $.inArray(file.hash, fm.selected()) === -1 && input.blur();","\t9164:  * File: /root/tmp/elFinder/js/commands/resize.js","\t9178: \t\treturn this.fm.selected().length == 1 && this.fm.selectedFiles()[0].mime.indexOf('image/') !== -1 ? 0 : -1;","\t9183: \t\t\tfiles = this.files(hashes),","\t9186: \t\t\topen = function(file, id) {","\t9259: \t\t\t\t\t\t\t\t.filter(':text').keydown(function(e) {","\t9289: \t\t\t\t\t\t\t\t.filter(':first').focus();","\t9384: \t\t\t\t\t\t\t\ttarget : file.hash,","\t9403: \t\t\t\t\tsrc     = fm.url(file.hash)","\t9438: \t\t\t\t\ttitle          : file.name,","\t9457: \t\tif (!files.length || files[0].mime.indexOf('image/') === -1) {","\t9461: \t\tid = 'resize-'+fm.namespace+'-'+files[0].hash;","\t9469: \t\topen(files[0], id)","\t9477:  * File: /root/tmp/elFinder/js/commands/rm.js","\t9482:  * Delete files","\t9495: \t\treturn !this._disabled && sel.length && $.map(sel, function(h) { var f = fm.file(h); return f && f.phash && !f.locked ? h : null }).length == sel.length","\t9506: \t\t\tfiles  = this.files(hashes),","\t9507: \t\t\tcnt    = files.length,","\t9515: \t\t$.each(files, function(i, file) {","\t9516: \t\t\tif (!file.phash) {","\t9517: \t\t\t\treturn !dfrd.reject(['errRm', file.name, 'errPerm']);","\t9519: \t\t\tif (file.locked) {","\t9520: \t\t\t\treturn !dfrd.reject(['errLocked', file.name]);","\t9522: \t\t\tif (file.hash == cwd) {","\t9523: \t\t\t\tgoroot = fm.root(file.hash);","\t9528: \t\t\tfiles = this.hashes(hashes);","\t9536: \t\t\t\t\t\tfm.lockfiles({files : files});","\t9538: \t\t\t\t\t\t\tdata   : {cmd  : 'rm', targets : files}, ","\t9550: \t\t\t\t\t\t\tfm.unlockfiles({files : files});","\t9567:  * File: /root/tmp/elFinder/js/commands/search.js","\t9572:  * Find files","\t9577: \tthis.title          = 'Find files';","\t9614:  * File: /root/tmp/elFinder/js/commands/sort.js","\t9619:  * Change sort files rule","\t9661:  * File: /root/tmp/elFinder/js/commands/up.js","\t9689:  * File: /root/tmp/elFinder/js/commands/upload.js","\t9694:  * Upload files using iframe or XMLHttpRequest & FormData.","\t9695:  * Dialog allow to send files using drag and drop","\t9739: \t\tif (data && (data.input || data.files)) {","\t9746: \t\tinput = $('<input type=\"file\" multiple=\"true\"/>')","\t9761: \t\t\tdropbox = $('<div class=\"ui-corner-all elfinder-upload-dropbox\">'+fm.i18n('dropFiles')+'</div>')","\t9786: \t\t\t\tupload({files : e.dataTransfer.files});","\t9804:  * File: /root/tmp/elFinder/js/commands/view.js","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.ar.js:","\t35: \t\t\t'errNotFile'           : 'العنصر المختار ليس ملف',","\t43: \t\t\t'errFileNotFound'      : 'الملف غير موجود',","\t47: \t\t\t'errMkfile'            : ' غير قادر على إنشاء ملف جديد\"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'لم يتم رفع أي ملف ',","\t55: \t\t\t'errFileMaxSize'       : 'حجم الملف أكبر من الحجم المسموح به',","\t70: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t82: \t\t\t'cmdgetfile'   : 'أختيار الملفات',","\t87: \t\t\t'cmdmkfile'    : 'ملف نصي جديد',","\t109: \t\t\t'ntffile'     : 'فتح ملف',","\t112: \t\t\t'ntfmkfile'   : 'ينشئ الملفات',","\t159: \t\t\t'selectfiles'     : 'تحديد ملفات',","\t160: \t\t\t'selectffile'     : 'تحديد الملف الاول',","\t161: \t\t\t'selectlfile'     : 'تحديد الملف الأخير',","\t170: \t\t\t'files'           : 'ملفات',","\t198: \t\t\t'dropFiles'       : 'لصق الملفات هنا',","\t201: \t\t\t'moveFiles'       : 'قص الملفات',","\t202: \t\t\t'copyFiles'       : 'نسخ الملفات',","\t205: \t\t\t'untitled file.txt' : 'untitled file.txt',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.cs.js:","\t34: \t\t\t'errNotFile'           : 'Objekt není soubor.',","\t42: \t\t\t'errFileNotFound'      : 'Soubor nenalezen.',","\t46: \t\t\t'errMkfile'            : 'Nepodařilo se vytvořit soubor \"$1\".',","\t52: \t\t\t'errUploadNoFiles'     : 'Nejsou vybrány žádné soubory k nahrání.',","\t54: \t\t\t'errFileMaxSize'       : 'Překročena maximální povolená velikost souboru.',","\t81: \t\t\t'cmdgetfile'   : 'Vybrat soubory',","\t86: \t\t\t'cmdmkfile'    : 'Nový textový soubor',","\t108: \t\t\t'ntffile'     : 'Otevřít soubor',","\t111: \t\t\t'ntfmkfile'   : 'Vytváření souborů',","\t158: \t\t\t'selectfiles'     : 'Vybrat soubor(y)',","\t159: \t\t\t'selectffile'     : 'Vybrat první soubor',","\t160: \t\t\t'selectlfile'     : 'Vybrat poslední soubor',","\t169: \t\t\t'files'           : 'Soubory',","\t197: \t\t\t'dropFiles'       : 'Přetáhněte soubory sem',","\t200: \t\t\t'moveFiles'       : 'Přesunout sobory',","\t201: \t\t\t'copyFiles'       : 'Zkupírovat soubory',","\t204: \t\t\t'untitled file.txt' : 'nepojmenovaný soubor.txt',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.de.js:","\t35: \t\t\t'errNotFile'           : 'Objekt ist keine Datei.',","\t43: \t\t\t'errFileNotFound'      : 'Datei nicht gefunden.',","\t47: \t\t\t'errMkfile'            : 'Kann Datei \"$1\" nicht erstellen.',","\t53: \t\t\t'errUploadNoFiles'     : 'Keine Dateien zum Hochladen gefunden.',","\t55: \t\t\t'errFileMaxSize'       : 'Die Datei überschreitet die Maximalgröße',","\t79: \t\t\t'cmdgetfile'   : 'Datei auswählen',","\t84: \t\t\t'cmdmkfile'    : 'Neue Textdatei',","\t106: \t\t\t'ntffile'     : 'öffne Datei',","\t109: \t\t\t'ntfmkfile'   : 'Erstelle Dateien',","\t111: \t\t\t'ntfcopy'     : 'Kopiere Dateien files',","\t115: \t\t\t'ntfupload'   : 'Uploading files',","\t116: \t\t\t'ntfdownload' : 'Downloading files',","\t156: \t\t\t'selectfiles'     : 'Dateien auswählen',","\t157: \t\t\t'selectffile'     : 'Erste Datei auswhählen',","\t158: \t\t\t'selectlfile'     : 'Letzte Datei auswählen',","\t167: \t\t\t'files'           : 'Dateien',","\t195: \t\t\t'dropFiles'       : 'Dateien hier ablegen',","\t198: \t\t\t'moveFiles'       : 'Dateien verschieben',","\t199: \t\t\t'copyFiles'       : 'Dateien kopieren',","\t269: \t\t\t'kindVideoDV'     : 'DV Film',","\t270: \t\t\t'kindVideoMPEG'   : 'MPEG Film',","\t271: \t\t\t'kindVideoMPEG4'  : 'MPEG-4 Film',","\t272: \t\t\t'kindVideoAVI'    : 'AVI Film',","\t273: \t\t\t'kindVideoMOV'    : 'Quick Time Film',","\t274: \t\t\t'kindVideoWM'     : 'Windows Media Film',","\t275: \t\t\t'kindVideoFlash'  : 'Flash Film',","\t276: \t\t\t'kindVideoMKV'    : 'Matroska Film',","\t277: \t\t\t'kindVideoOGG'    : 'Ogg Film'","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.es.js:","\t35: \t\t\t'errNotFile'           : 'El objeto no es un archivo.',","\t43: \t\t\t'errFileNotFound'      : 'Archivo no encontrado.',","\t47: \t\t\t'errMkfile'            : 'No se puede crear el archivo \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'No hay archivos para subir.',","\t55: \t\t\t'errFileMaxSize'       : 'El tamaño del archivo excede el máximo permitido.',","\t82: \t\t\t'cmdgetfile'   : 'Seleccionar archivos',","\t87: \t\t\t'cmdmkfile'    : 'Nuevo archivo de texto',","\t109: \t\t\t'ntffile'     : 'Abrir archivo',","\t112: \t\t\t'ntfmkfile'   : 'Creando archivos',","\t159: \t\t\t'selectfiles'     : 'Seleccionar archivo(s)',","\t160: \t\t\t'selectffile'     : 'Seleccionar primer archivo',","\t161: \t\t\t'selectlfile'     : 'Seleccionar último archivo',","\t170: \t\t\t'files'           : 'Archivos',","\t198: \t\t\t'dropFiles'       : 'Arrastre archivos aquí',","\t201: \t\t\t'moveFiles'       : 'Mover archivos',","\t202: \t\t\t'copyFiles'       : 'Copiar archivos',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.fr.js:","\t35: \t\t\t'errNotFile'           : 'Cet objet n\\'est pas un fichier.',","\t43: \t\t\t'errFileNotFound'      : 'Fichier non trouvé.',","\t47: \t\t\t'errMkfile'            : 'impossible de créer le fichier \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'Aucun fichier a envoyer.',","\t55: \t\t\t'errFileMaxSize'       : 'Le fichier dépasse la taille maximale allouée.',","\t70: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t82: \t\t\t'cmdgetfile'   : 'Sélectionner les fichiers',","\t87: \t\t\t'cmdmkfile'    : 'Nouveau fichier texte',","\t111: \t\t\t'ntffile'     : 'Ouvrir le fichier',","\t114: \t\t\t'ntfmkfile'   : 'Création des fichiers',","\t171: \t\t\t'selectfiles'     : 'Sélectionner le(s) fichier(s)',","\t172: \t\t\t'selectffile'     : 'Sélectionner le premier fichier',","\t173: \t\t\t'selectlfile'     : 'Sélectionner le dernier fichier',","\t182: \t\t\t'files'           : 'Fichiers',","\t210: \t\t\t'dropFiles'       : 'Déposez les fichiers ici',","\t213: \t\t\t'moveFiles'       : 'Déplacer les fichiers',","\t214: \t\t\t'copyFiles'       : 'Copier les fichiers',","\t217: \t\t\t'untitled file.txt' : 'untitled file.txt',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.jp.js:","\t35: \t\t\t'errNotFile'           : 'オブジェクトがファイルではありません',","\t43: \t\t\t'errFileNotFound'      : 'ファイルが見つかりません',","\t47: \t\t\t'errMkfile'            : '\"$1\"ファイルを作成することができません',","\t53: \t\t\t'errUploadNoFiles'     : 'アップロードされたファイルがありません',","\t55: \t\t\t'errFileMaxSize'       : 'ファイルが許容サイズを超えています',","\t79: \t\t\t'cmdgetfile'   : 'ファイル選択',","\t84: \t\t\t'cmdmkfile'    : '新規テキストファイル',","\t106: \t\t\t'ntffile'     : 'ファイルを開く',","\t109: \t\t\t'ntfmkfile'   : 'ファイルを作成',","\t156: \t\t\t'selectfiles'     : 'ファイル選択',","\t157: \t\t\t'selectffile'     : '最初のファイルを選択',","\t158: \t\t\t'selectlfile'     : '最後のファイルを選択',","\t167: \t\t\t'files'           : 'ファイル',","\t194: \t\t\t'dropFiles'       : 'ここにファイルをドロップ',","\t197: \t\t\t'moveFiles'       : 'ファイルを移動',","\t198: \t\t\t'copyFiles'       : 'ファイルをコピー',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.LANG.js:","\t3:  * use this file to create new translation","\t42: \t\t\t'errNotFile'           : 'Object is not a file.',","\t47: \t\t\t'errExists'            : 'File named \"$1\" already exists.',","\t48: \t\t\t'errInvName'           : 'Invalid file name.',","\t50: \t\t\t'errFileNotFound'      : 'File not found.',","\t52: \t\t\t'errPopup'             : 'Browser prevented opening popup window. To open file enable it in browser options.',","\t54: \t\t\t'errMkfile'            : 'Unable to create file \"$1\".',","\t56: \t\t\t'errCopyFrom'          : 'Copying files from volume \"$1\" not allowed.',","\t57: \t\t\t'errCopyTo'            : 'Copying files to volume \"$1\" not allowed.',","\t60: \t\t\t'errUploadNoFiles'     : 'No files found for upload.',","\t62: \t\t\t'errFileMaxSize'       : 'File exceeds maximum allowed size.',","\t63: \t\t\t'errUploadMime'        : 'File type not allowed.',","\t70: \t\t\t'errExtract'           : 'Unable to extract files from \"$1\".',","\t73: \t\t\t'errNoArchive'         : 'File is not archive or has unsupported archive type.',","\t77: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t79: \t\t\t'errUsupportType'      : 'Unsupported file type.',","\t88: \t\t\t'cmdedit'      : 'Edit file',","\t89: \t\t\t'cmdextract'   : 'Extract files from archive',","\t91: \t\t\t'cmdgetfile'   : 'Select files',","\t96: \t\t\t'cmdmkfile'    : 'New text file',","\t103: \t\t\t'cmdsearch'    : 'Find files',","\t105: \t\t\t'cmdupload'    : 'Upload files',","\t121: \t\t\t'ntffile'     : 'Open file',","\t124: \t\t\t'ntfmkfile'   : 'Creating files',","\t125: \t\t\t'ntfrm'       : 'Delete files',","\t126: \t\t\t'ntfcopy'     : 'Copy files',","\t127: \t\t\t'ntfmove'     : 'Move files',","\t128: \t\t\t'ntfprepare'  : 'Prepare to copy files',","\t129: \t\t\t'ntfrename'   : 'Rename files',","\t130: \t\t\t'ntfupload'   : 'Uploading files',","\t131: \t\t\t'ntfdownload' : 'Downloading files',","\t132: \t\t\t'ntfsave'     : 'Save files',","\t134: \t\t\t'ntfextract'  : 'Extracting files from archive',","\t135: \t\t\t'ntfsearch'   : 'Searching files',","\t167: \t\t\t'confirmRm'       : 'Are you sure you want to remove files?<br/>This cannot be undone!',","\t168: \t\t\t'confirmRepl'     : 'Replace old file with new one?',","\t180: \t\t\t'selectall'       : 'Select all files',","\t181: \t\t\t'selectfiles'     : 'Select file(s)',","\t182: \t\t\t'selectffile'     : 'Select first file',","\t183: \t\t\t'selectlfile'     : 'Select last file',","\t192: \t\t\t'files'           : 'Files',","\t203: \t\t\t'webfm'           : 'Web file manager',","\t220: \t\t\t'dropFiles'       : 'Drop files here',","\t222: \t\t\t'selectForUpload' : 'Select files to upload',","\t223: \t\t\t'moveFiles'       : 'Move files',","\t224: \t\t\t'copyFiles'       : 'Copy files',","\t227: \t\t\t'untitled file.txt' : 'untitled file.txt',","\t248: \t\t\t'kindTorrent'     : 'Bittorrent file',","\t255: \t\t\t'kindJAR'         : 'Java JAR file',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.nl.js:","\t35: \t\t\t'errNotFile'           : 'Object is geen bestand.',","\t43: \t\t\t'errFileNotFound'      : 'Bestand niet gevonden.',","\t47: \t\t\t'errMkfile'            : 'Kan bestand \"$1\" niet aanmaken.',","\t53: \t\t\t'errUploadNoFiles'     : 'Geen bestanden gevonden om te uploaden.',","\t55: \t\t\t'errFileMaxSize'       : 'Bestand overschrijdt de maximale grootte.',","\t84: \t\t\t'cmdgetfile'   : 'Kies bestanden',","\t89: \t\t\t'cmdmkfile'    : 'Nieuw tekstbestand',","\t114: \t\t\t'ntffile'     : 'Bezig met openen bestand',","\t117: \t\t\t'ntfmkfile'   : 'Bezig met Bestanden maken',","\t174: \t\t\t'selectfiles'     : 'Selecteer bestand(en)',","\t175: \t\t\t'selectffile'     : 'Selecteer eerste bestand',","\t176: \t\t\t'selectlfile'     : 'Selecteer laatste bestand',","\t185: \t\t\t'files'           : 'Bestanden',","\t213: \t\t\t'dropFiles'       : 'Sleep hier uw bestanden heen',","\t216: \t\t\t'moveFiles'       : 'Verplaats bestanden',","\t217: \t\t\t'copyFiles'       : 'Kopieer bestanden',","\t220: \t\t\t'untitled file.txt' : 'nieuw bestand.txt',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.pt_BR.js:","\t35: \t\t\t'errNotFile'           : 'Objeto não é um arquivo.',","\t43: \t\t\t'errFileNotFound'      : 'Arquivo não encontrado.',","\t47: \t\t\t'errMkfile'            : 'Incapaz de criar o arquivo \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'Não foi encontrado nenhum arquivo para upload.',","\t55: \t\t\t'errFileMaxSize'       : 'Arquivo excede o tamanho máximo permitido.',","\t79: \t\t\t'cmdgetfile'   : 'Selecionar arquivos',","\t84: \t\t\t'cmdmkfile'    : 'Novo arquivo de texto',","\t106: \t\t\t'ntffile'     : 'Abrir arquivo',","\t109: \t\t\t'ntfmkfile'   : 'Criar arquivos',","\t156: \t\t\t'selectfiles'     : 'Selecionar arquivo(s)',","\t157: \t\t\t'selectffile'     : 'Selecionar primeiro arquivo',","\t158: \t\t\t'selectlfile'     : 'Slecionar último arquivo',","\t167: \t\t\t'files'           : 'Arquivos',","\t195: \t\t\t'dropFiles'       : 'Solte os arquivos aqui',","\t198: \t\t\t'moveFiles'       : 'Mover arquivos',","\t199: \t\t\t'copyFiles'       : 'Copiar arquivos',","\t269: \t\t\t'kindVideoDV'     : 'DV filme',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.ru.js:","\t35: \t\t\t'errNotFile'           : 'Объект не является файлом.',","\t43: \t\t\t'errFileNotFound'      : 'Файл не найден.',","\t47: \t\t\t'errMkfile'            : 'Ошибка создания файла \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'Отсутствуют загруженые файлы.',","\t55: \t\t\t'errFileMaxSize'       : 'Размер файла превышает допустимый.',","\t84: \t\t\t'cmdgetfile'   : 'Выбрать',","\t89: \t\t\t'cmdmkfile'    : 'Новый файл',","\t114: \t\t\t'ntffile'     : 'Открытие файла',","\t117: \t\t\t'ntfmkfile'   : 'Создание файла',","\t174: \t\t\t'selectfiles'     : 'Выбрать файл(ы)',","\t175: \t\t\t'selectffile'     : 'Выбрать первый файл',","\t176: \t\t\t'selectlfile'     : 'Выбрать последний файл',","\t185: \t\t\t'files'           : 'Файлы',","\t213: \t\t\t'dropFiles'       : 'Бросить файлы',","\t216: \t\t\t'moveFiles'       : 'Перемещение файлов',","\t217: \t\t\t'copyFiles'       : 'Копирование файлов',","\t220: \t\t\t'untitled file.txt' : 'новый файл.txt',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.zh_CN.js:","\t35: \t\t\t'errNotFile'           : '对象不是文件.',","\t43: \t\t\t'errFileNotFound'      : '未找到文件.',","\t47: \t\t\t'errMkfile'            : '不能创建文件 \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : '未找到要上传的文件.',","\t55: \t\t\t'errFileMaxSize'       : '文件超过了允许的最大大小.',","\t79: \t\t\t'cmdgetfile'   : '选择文件',","\t84: \t\t\t'cmdmkfile'    : '新建文本文件',","\t106: \t\t\t'ntffile'     : '打开文件',","\t109: \t\t\t'ntfmkfile'   : '创建文件',","\t156: \t\t\t'selectfiles'     : '选择文件',","\t157: \t\t\t'selectffile'     : '选择第一个文件',","\t158: \t\t\t'selectlfile'     : '选择最后一个文件',","\t167: \t\t\t'files'           : '文件',","\t195: \t\t\t'dropFiles'       : '把文件拖到这里',","\t198: \t\t\t'moveFiles'       : '移动文件',","\t199: \t\t\t'copyFiles'       : '复制文件',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/proxy/elFinderSupportVer1.js:","\t62: \t\t\t\topts.data.current = fm.file(opts.data.target).phash;","\t66: \t\t\t\topts.data.current = fm.file(opts.data.target).phash;","\t70: \t\t\t\topts.data.current = fm.file(opts.data.targets[0]).phash;","\t75: \t\t\t\topts.data.current = fm.file(opts.data.target).phash;","\t81: \t\t\t\t\t$.ajax($.extend(_opts, {data : {cmd : 'duplicate', target : hash, current : fm.file(hash).phash}}))","\t98: \t\t\tcase 'mkfile':","\t143: \t// \t'File not found'                                   : 'File not found.',","\t144: \t// \t'Invalid name'                                     : 'Invalid file name.',","\t145: \t// \t'File or folder with the same name already exists' : 'File named \"$1\" already exists in this location.',","\t146: \t// \t'Not allowed file type'                            : 'Not allowed file type.',","\t147: \t// \t'File exceeds the maximum allowed filesize'        : 'File exceeds maximum allowed size.',","\t150: \t// \t'Unable to extract files from archive'             : 'Unable to extract files from \"$1\".'","\t155: \t\t\tfiles = {}, ","\t156: \t\t\tfilter = function(file) { return file && file.hash && file.name && file.mime ? file : null; },","\t183: \t\t\tphash = this.fm.file(data.target.hash).phash;","\t184: \t\t\treturn {changed : [this.normalizeFile(data.target, phash)]};","\t190: \t\t\t$.each(this.normalizeTree(data.tree), function(i, file) {","\t191: \t\t\t\tfiles[file.hash] = file;","\t195: \t\t$.each(data.cdc||[], function(i, file) {","\t196: \t\t\tvar hash = file.hash;","\t198: \t\t\tif (files[hash]) {","\t199: \t\t\t\tfiles[hash].date   = file.date;","\t200: \t\t\t\tfiles[hash].locked = file.hash == phash ? true : file.rm === void(0) ? false : !file.rm;","\t202: \t\t\t\tfiles[hash] = self.normalizeFile(file, phash, data.tmb);","\t207: \t\t\t$.each(this.fm.files(), function(hash, file) {","\t208: \t\t\t\tif (!files[hash] && file.phash != phash && file.mime == 'directory') {","\t209: \t\t\t\t\tfiles[hash] = file;","\t216: \t\t\t\t\tcwd     : files[phash] || this.normalizeFile(data.cwd),","\t217: \t\t\t\t\tfiles   : $.map(files, function(f) { return f }),","\t231: \t\t}, this.fm.diff($.map(files, filter)));","\t249: \t\t\t\t\tresult.push(self.normalizeFile(dir, phash))","\t260: \t * Convert file info from old api format into new one","\t262: \t * @param  Object  file","\t266: \tthis.normalizeFile = function(file, phash, tmb) {","\t267: \t\tvar mime = file.mime || 'directory',","\t268: \t\t\tsize = mime == 'directory' && !file.linkTo ? 0 : file.size,","\t270: \t\t\t\turl    : file.url,","\t271: \t\t\t\thash   : file.hash,","\t273: \t\t\t\tname   : file.name,","\t275: \t\t\t\tdate   : file.date || 'unknown',","\t277: \t\t\t\tread   : file.read,","\t278: \t\t\t\twrite  : file.write,","\t279: \t\t\t\tlocked : !phash ? true : file.rm === void(0) ? false : !file.rm","\t282: \t\tif (file.mime == 'application/x-empty') {","\t285: \t\tif (file.linkTo) {","\t286: \t\t\tinfo.alias = file.linkTo;","\t289: \t\tif (file.linkTo) {","\t290: \t\t\tinfo.linkTo = file.linkTo;","\t293: \t\tif (file.tmb) {","\t294: \t\t\tinfo.tmb = file.tmb;","\t300: \t\tif (file.dirs && file.dirs.length) {","\t303: \t\tif (file.dim) {","\t304: \t\t\tinfo.dim = file.dim;","\t306: \t\tif (file.resize) {","\t307: \t\t\tinfo.resize = file.resize;","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/templates/elfinder.html:","\t23:                             ['mkdir', 'mkfile'],","\t33:                                    'mkdir', 'mkfile', 'paste', '|',","\t35:                             files : ['edit', 'open', '|',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/templates/read_file.html:","\t2:   <head><title>{{ file.name }}</title></head>","\t4:     {{ file.content }}","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/volume_drivers/base.py:","\t15:             or file. This data is used in response to 'open' commands to","\t36:     def read_file_view(self, request, hash):","\t37:         \"\"\" Django view function, used to display files in response to the","\t38:             'file' command.","\t41:             :param hash: The hash of the target file.","\t55:     def mkfile(self, name, parent):","\t58:             :param name: The name of the new file.","\t60:             :returns: dict -- a dict describing the new file.","\t65:         \"\"\" Renames a file or directory.","\t67:             :param name: The new name of the file/directory.","\t68:             :param target: The hash of the target file/directory.","\t78:             :returns: list -- a list containing the names of files/directories","\t84:         \"\"\" Moves/copies target files/directories from source to dest.","\t86:             If a file with the same name already exists in the dest directory","\t90:             :param targets: A list of hashes of files/dirs to move/copy.","\t100:         \"\"\" Deletes the target files/directories.","\t103:             for each target, so should only delete one file/directory.","\t105:             :param targets: A list of hashes of files/dirs to delete.","\t106:             :returns: string -- the hash of the file/dir that was deleted.","\t110:     def upload(self, files, parent):","\t111:         \"\"\" Uploads one or more files in to the parent directory.","\t113:             :param files: A list of uploaded file objects, as described here:","\t114:             https://docs.djangoproject.com/en/dev/topics/http/file-uploads/","\t116:             new files.","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/volume_drivers/model_driver.py:","\t14:                  collection_model=models.FileCollection,","\t16:                  file_model=models.File,","\t22:         self.file_model = file_model","\t37:             root directories of other file collections.","\t45:         for item in dir.files.all():","\t72:             f:  File","\t74:             The tree_id of the root node of the currently open FileCollection","\t77:             things if they are now looking at a different FileCollection.","\t99:             model = self.file_model","\t114:         \"\"\" Helper function to create objects (files/directories).","\t131:     def read_file_view(self, request, hash):","\t132:         file = self.get_object(hash)","\t133:         return render_to_response('read_file.html',","\t134:                                   {'file': file},","\t141:     def mkfile(self, name, parent):","\t142:         \"\"\" Creates a new file. \"\"\"","\t143:         return self._create_object(name, parent, self.file_model)","\t146:         \"\"\" Renames a file or directory. \"\"\"","\t154:         \"\"\" Returns a list of files/directories in the target directory. \"\"\"","\t161:         \"\"\" Moves/copies target files/directories from source to dest. \"\"\"","\t177:             # both Files and Directories. Using filter() and iterating","\t181:             dirs = self.directory_model.objects.filter(name=object.name,","\t183:             files = self.file_model.objects.filter(name=object.name,","\t188:             for file in files:","\t189:                 removed.append(file.get_hash())","\t190:                 file.delete()","\t201:         \"\"\" Delete a File or Directory object. \"\"\"","\t206:     def upload(self, files, parent):","\t207:         \"\"\" For now, this uses a very naive way of storing files - the entire","\t208:             file is read in to the File model's content field in one go.","\t210:             This should be updated to use read_chunks to add the file one ","\t215:         for upload in files.getlist('upload[]'):","\t216:             new_file = self.file_model(name=upload.name,","\t221:                 new_file.validate_unique()","\t226:             new_file.save()","\t227:             added.append(new_file.get_info())","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/test_project/initial_data.json:","\t1: [{\"pk\": 22, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_logentry\", \"name\": \"Can add log entry\", \"content_type\": 8}}, {\"pk\": 23, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_logentry\", \"name\": \"Can change log entry\", \"content_type\": 8}}, {\"pk\": 24, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_logentry\", \"name\": \"Can delete log entry\", \"content_type\": 8}}, {\"pk\": 4, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_group\", \"name\": \"Can add group\", \"content_type\": 2}}, {\"pk\": 5, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_group\", \"name\": \"Can change group\", \"content_type\": 2}}, {\"pk\": 6, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_group\", \"name\": \"Can delete group\", \"content_type\": 2}}, {\"pk\": 10, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_message\", \"name\": \"Can add message\", \"content_type\": 4}}, {\"pk\": 11, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_message\", \"name\": \"Can change message\", \"content_type\": 4}}, {\"pk\": 12, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_message\", \"name\": \"Can delete message\", \"content_type\": 4}}, {\"pk\": 1, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_permission\", \"name\": \"Can add permission\", \"content_type\": 1}}, {\"pk\": 2, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_permission\", \"name\": \"Can change permission\", \"content_type\": 1}}, {\"pk\": 3, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_permission\", \"name\": \"Can delete permission\", \"content_type\": 1}}, {\"pk\": 7, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_user\", \"name\": \"Can add user\", \"content_type\": 3}}, {\"pk\": 8, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_user\", \"name\": \"Can change user\", \"content_type\": 3}}, {\"pk\": 9, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_user\", \"name\": \"Can delete user\", \"content_type\": 3}}, {\"pk\": 13, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_contenttype\", \"name\": \"Can add content type\", \"content_type\": 5}}, {\"pk\": 14, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_contenttype\", \"name\": \"Can change content type\", \"content_type\": 5}}, {\"pk\": 15, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_contenttype\", \"name\": \"Can delete content type\", \"content_type\": 5}}, {\"pk\": 25, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_directory\", \"name\": \"Can add directory\", \"content_type\": 9}}, {\"pk\": 26, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_directory\", \"name\": \"Can change directory\", \"content_type\": 9}}, {\"pk\": 27, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_directory\", \"name\": \"Can delete directory\", \"content_type\": 9}}, {\"pk\": 31, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_file\", \"name\": \"Can add file\", \"content_type\": 11}}, {\"pk\": 32, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_file\", \"name\": \"Can change file\", \"content_type\": 11}}, {\"pk\": 33, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_file\", \"name\": \"Can delete file\", \"content_type\": 11}}, {\"pk\": 28, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_filecollection\", \"name\": \"Can add file collection\", \"content_type\": 10}}, {\"pk\": 29, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_filecollection\", \"name\": \"Can change file collection\", \"content_type\": 10}}, {\"pk\": 30, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_filecollection\", \"name\": \"Can delete file collection\", \"content_type\": 10}}, {\"pk\": 16, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_session\", \"name\": \"Can add session\", \"content_type\": 6}}, {\"pk\": 17, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_session\", \"name\": \"Can change session\", \"content_type\": 6}}, {\"pk\": 18, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_session\", \"name\": \"Can delete session\", \"content_type\": 6}}, {\"pk\": 19, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_site\", \"name\": \"Can add site\", \"content_type\": 7}}, {\"pk\": 20, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_site\", \"name\": \"Can change site\", \"content_type\": 7}}, {\"pk\": 21, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_site\", \"name\": \"Can delete site\", \"content_type\": 7}}, {\"pk\": 1, \"model\": \"auth.user\", \"fields\": {\"username\": \"admin\", \"first_name\": \"\", \"last_name\": \"\", \"is_active\": true, \"is_superuser\": true, \"is_staff\": true, \"last_login\": \"2011-11-04 12:06:23\", \"groups\": [], \"user_permissions\": [], \"password\": \"sha1$af2fa$c4e1b39ca0d442d071002c7a0414fc8b61a42896\", \"email\": \"admin@example.com\", \"date_joined\": \"2011-11-04 12:06:23\"}}]","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/test_project/manage.py:","\t8:     sys.stderr.write(\"Error: Can't find the file 'settings.py' in the directory containing %r. It appears you've customized things.\\nYou'll have to run django-admin.py, passing it your settings module.\\n\" % __file__)","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/test_project/settings.py:","\t15:         'NAME': 'test_database.db',                      # Or path to database file if using sqlite3.","\t46: # Absolute filesystem path to the directory that will hold user-uploaded files.","\t55: # Absolute path to the directory static files should be collected to.","\t56: # Don't put anything in this directory yourself; store your static files","\t57: # in apps' \"static/\" subdirectories and in STATICFILES_DIRS.","\t61: # URL prefix for static files.","\t65: # URL prefix for admin static files -- CSS, JavaScript and images.","\t70: # Additional locations of static files","\t71: STATICFILES_DIRS = (","\t77: # List of finder classes that know how to find static files in","\t79: STATICFILES_FINDERS = (","\t80:     'django.contrib.staticfiles.finders.FileSystemFinder',","\t81:     'django.contrib.staticfiles.finders.AppDirectoriesFinder',","\t82: #    'django.contrib.staticfiles.finders.DefaultStorageFinder',","\t90:     'django.template.loaders.filesystem.Loader',","\t117:     'django.contrib.staticfiles',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/test_project/test_app/tests.py:","\t2: This file demonstrates writing tests using the unittest module. These will pass","","/clouddrive/clouddrive/myapp/templates/static/elFinder/Changelog:","\t15: \t\t- MySQL volume driver support (as file storage)","\t57: \t\t- Added shortcut support for copy/cut/paste/delete files and","\t61: \t\t- [bugfix] invalid determing files/folders permissions using","","/clouddrive/clouddrive/myapp/templates/static/elFinder/elfinder.src.html:","\t71: \t<script src=\"js/commands/getfile.js\"></script>","\t73: \t<script src=\"js/commands/mkfile.js\"></script>","\t160: \t\t\t\t\tgetFileCallback : function(files, fm) {","\t161: \t\t\t\t\t\tconsole.log(files);","\t164: \t\t\t\t\t\tgetfile : {","","/clouddrive/clouddrive/myapp/templates/static/elFinder/Jakefile.js:","\t2:  * This is build file for elFinder 2.x","\t19: \tfiles = {","\t57: // plugins files","\t64: \t\tfiles.php = files.php.concat(grep(path.join(src, 'php', 'plugins', plugins[i]), '.+'));","\t90: function copyFile(from, to, overwrite) {","\t101: \tvar ver = fs.readFileSync(path.join(src, 'js', 'elFinder.version.js')).toString();","\t109: \t\t' * elFinder - file manager for web\\n' +","\t132: \tvar dir = ['css', 'js', 'img', path.join('js', 'i18n'), path.join('js', 'proxy'), 'php', 'files'];","\t156: file({'css/elfinder.full.css': files['elfinder.full.css']}, function(){","\t160: \t\tfile = this.prereqs[f];","\t161: \t\tconsole.log('\\t' + file);","\t162: \t\tdata += '\\n/* File: ' + file + ' */\\n';","\t163: \t\tdata += fs.readFileSync(file);","\t165: \tfs.writeFileSync(this.name, getComment() + data);","\t169: file({'css/elfinder.min.css': ['css/elfinder.full.css']}, function () {","\t171: \tvar css_optimized = csso.justDoIt(fs.readFileSync('css/elfinder.full.css').toString())","\t172: \tfs.writeFileSync(this.name, getComment() + css_optimized);","\t177: file({'js/elfinder.full.js': files['elfinder.full.js']}, function(){","\t180: \tvar elf = files['elfinder.full.js'];","\t183: \t\tfile = elf[f];","\t184: \t\tconsole.log('\\t' + file);","\t185: \t\tdata += '\\n\\n/*\\n * File: ' + file + '\\n */\\n\\n';","\t186: \t\tdata += fs.readFileSync(file);","\t190: \tfs.writeFileSync(this.name, getComment() + data);","\t194: file({'js/elfinder.min.js': ['js/elfinder.full.js']}, function () {","\t199: \t\tvar ast = ugp.parse(fs.readFileSync('js/elfinder.full.js').toString()); // parse code and get the initial AST","\t206: \tfs.writeFileSync(this.name, getComment() + result);","\t210: desc('copy misc files')","\t212: \tconsole.log('copy misc files');","\t213: \tvar cf = files['images']","\t214: \t\t.concat(files['i18n'])","\t216: \t\t.concat(files['php'])","\t217: \t\t.concat(files['misc']);","\t221: \t\tcopyFile(cf[i], dst);","\t226: \t// copyFile(hs, hd);","\t231: \tcopyFile(cs, cd);","\t246: \t\t\t.concat([path.join('js', 'proxy', 'elFinderSupportVer1.js'), 'Changelog', 'README.md', 'elfinder.html', path.join('files', 'readme.txt')]);","\t249: \t\tvar file = uf[f];","\t250: \t\tif (path.existsSync(file)) {","\t251: \t\t\tconsole.log('\\tunlink ' + file);","\t252: \t\t\tfs.unlinkSync(file);","\t259: \t\tvar ud = ['css', path.join('js', 'proxy'), path.join('js', 'i18n'), 'js', 'img', 'php', 'files'];","\t273: \t\tversion = fs.readFileSync('.version').toString().replace(/\\n$/, '');","\t283: \t\tvar fls = (files['php'].concat(files['images']).concat(files['i18n']).concat(files['misc'])).map(function(i){","\t289: \t\tfls.push('files');","\t290: \t\tconsole.log('Including next files into release:');","\t292: \t\tthis.packageFiles.items = fls;","","/clouddrive/clouddrive/myapp/templates/static/elFinder/README.md:","\t13: elFinder is an open-source file manager for web, written in JavaScript using","\t21:  * All operations with files and folders on a remote server (copy, move,","\t22:    upload, create folder/file, rename, etc.)","\t25:  * Local file system, MySQL, FTP volume storage drivers","\t26:  * Background file upload with Drag & Drop HTML5 support","\t29:  * Standard methods of file/group selection using mouse or keyboard","\t30:  * Move/Copy files with Drag & Drop","\t33:  * Quicklook, preview for common file types","\t34:  * Edit text files and images","\t37:  * Thumbnails for image files","\t39:  * Flexible configuration of access rights, upload file types, user interface","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/commands.css:","\t161: /* edit text file textarea */","\t162: .elfinder-file-edit {","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/common.css:","\t18: /* dir/file permissions and symlink markers */","\t62: /* files num in drag helper */","\t84: .elfinder-overlay { opacity: 0; filter:Alpha(Opacity=0); }","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/cwd.css:","\t35: /* file container */","\t36: .elfinder-cwd-view-icons .elfinder-cwd-file {","\t46: .elfinder-ltr .elfinder-cwd-view-icons .elfinder-cwd-file { float:left;  margin:0 3px 12px 0; }","\t47: .elfinder-rtl .elfinder-cwd-view-icons .elfinder-cwd-file { float:right; margin:0 0 5px 3px; }","\t50: .elfinder-cwd-view-icons .elfinder-cwd-file .ui-state-hover { border:0 solid; }","\t53: .elfinder-cwd-view-icons .elfinder-cwd-file-wrapper {","\t61: /* file name place */","\t62: .elfinder-cwd-view-icons .elfinder-cwd-filename {","\t210: /* filename container */","\t211: .elfinder-cwd-view-list .elfinder-cwd-file-wrapper { width:97%; position:relative; }","\t212: /* filename container in ltr/rtl enviroment */","\t213: .elfinder-ltr .elfinder-cwd-view-list .elfinder-cwd-file-wrapper { padding-left:23px;  }","\t214: .elfinder-rtl .elfinder-cwd-view-list .elfinder-cwd-file-wrapper { padding-right:23px; }","\t223: /* file icon */","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/dialog.css:","\t121: .elfinder-dialog-icon-file        { background-position: 0 -225px; }","\t124: .elfinder-dialog-icon-mkfile      { background-position: 0 -96px; }","\t150: /*********************** FILE INFO DIALOG **************************/","\t211: \topacity: 0; filter:Alpha(Opacity=0);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/fonts.css:","\t3: .elfinder-cwd-view-icons .elfinder-cwd-filename { font-size:.7em; }","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/navbar.css:","\t138: \topacity: .5; filter:Alpha(Opacity=50);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/quicklook.css:","\t85: /* wrapper for file info/icon */","\t94: /* file info */","\t99: /* file name in info */","\t113: /* file icon */","\t177: /* prev file icon */","\t182: /* next file icon */","\t202: /* text files preview wrapper */","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/theme.css:","\t21: /* selected file in \"icons\" view */","\t22: .elfinder-cwd-view-icons .elfinder-cwd-file .ui-state-hover { background:#ccc; }","\t28: .elfinder-cwd-view-icons .elfinder-cwd-file .elfinder-cwd-filename.ui-state-hover,","\t32: .elfinder-disabled .elfinder-cwd-view-icons .elfinder-cwd-file .elfinder-cwd-filename.ui-state-hover,","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/toolbar.css:","\t69: .elfinder .elfinder-button.ui-state-disabled { opacity:1; filter:Alpha(Opacity=100);}","\t70: .elfinder .elfinder-button.ui-state-disabled .elfinder-button-icon { opacity:.4; filter:Alpha(Opacity=40);}","\t91: .elfinder-button-icon-mkfile    { background-position: 0 -208px; }","\t96: .elfinder-button-icon-getfile   { background-position: 0 -288px; }","\t160: \topacity: 0; filter:Alpha(Opacity=0);","\t205: \tfilter:Alpha(Opacity=60);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/jquery/ui-themes/smoothness-1.8.23/jquery-ui-1.8.23.custom.css:","\t19: .ui-helper-zfix { width: 100%; height: 100%; top: 0; left: 0; position: absolute; opacity: 0; filter:Alpha(Opacity=0); }","\t82: .ui-priority-secondary, .ui-widget-content .ui-priority-secondary,  .ui-widget-header .ui-priority-secondary { opacity: .7; filter:Alpha(Opacity=70); font-weight: normal; }","\t83: .ui-state-disabled, .ui-widget-content .ui-state-disabled, .ui-widget-header .ui-state-disabled { opacity: .35; filter:Alpha(Opacity=35); background-image: none; }","\t286: .ui-widget-overlay { background: #aaaaaa url(images/ui-bg_flat_0_aaaaaa_40x100.png) 50% 50% repeat-x; opacity: .30;filter:Alpha(Opacity=30); }","\t287: .ui-widget-shadow { margin: -8px 0 0 -8px; padding: 8px; background: #aaaaaa url(images/ui-bg_flat_0_aaaaaa_40x100.png) 50% 50% repeat-x; opacity: .30;filter:Alpha(Opacity=30); -moz-border-radius: 8px; -khtml-border-radius: 8px; -webkit-border-radius: 8px; border-radius: 8px; }/*!","\t548:     filter: mask(); /*must have*/","","/clouddrive/clouddrive/myapp/templates/static/elFinder/jquery/ui-themes/smoothness/jquery-ui-1.10.1.custom.css:","\t51: \tfilter:Alpha(Opacity=0);","\t606: \tfilter: alpha(opacity=25);","\t635: \tfilter: inherit;","\t907: \tfilter:Alpha(Opacity=70);","\t914: \tfilter:Alpha(Opacity=35);","\t918: \tfilter:Alpha(Opacity=35); /* For IE8 - See #6059 */","\t1166: \tfilter: Alpha(Opacity=30);","\t1173: \tfilter: Alpha(Opacity=30);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/jquery/ui-themes/smoothness/jquery-ui-1.10.1.custom.min.css:","\t5: * Copyright (c) 2013 jQuery Foundation and other contributors Licensed MIT */.ui-helper-hidden{display:none}.ui-helper-hidden-accessible{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.ui-helper-reset{margin:0;padding:0;border:0;outline:0;line-height:1.3;text-decoration:none;font-size:100%;list-style:none}.ui-helper-clearfix:before,.ui-helper-clearfix:after{content:\"\";display:table;border-collapse:collapse}.ui-helper-clearfix:after{clear:both}.ui-helper-clearfix{min-height:0}.ui-helper-zfix{width:100%;height:100%;top:0;left:0;position:absolute;opacity:0;filter:Alpha(Opacity=0)}.ui-front{z-index:100}.ui-state-disabled{cursor:default!important}.ui-icon{display:block;text-indent:-99999px;overflow:hidden;background-repeat:no-repeat}.ui-widget-overlay{position:fixed;top:0;left:0;width:100%;height:100%}.ui-resizable{position:relative}.ui-resizable-handle{position:absolute;font-size:0.1px;display:block}.ui-resizable-disabled .ui-resizable-handle,.ui-resizable-autohide .ui-resizable-handle{display:none}.ui-resizable-n{cursor:n-resize;height:7px;width:100%;top:-5px;left:0}.ui-resizable-s{cursor:s-resize;height:7px;width:100%;bottom:-5px;left:0}.ui-resizable-e{cursor:e-resize;width:7px;right:-5px;top:0;height:100%}.ui-resizable-w{cursor:w-resize;width:7px;left:-5px;top:0;height:100%}.ui-resizable-se{cursor:se-resize;width:12px;height:12px;right:1px;bottom:1px}.ui-resizable-sw{cursor:sw-resize;width:9px;height:9px;left:-5px;bottom:-5px}.ui-resizable-nw{cursor:nw-resize;width:9px;height:9px;left:-5px;top:-5px}.ui-resizable-ne{cursor:ne-resize;width:9px;height:9px;right:-5px;top:-5px}.ui-selectable-helper{position:absolute;z-index:100;border:1px dotted black}.ui-accordion .ui-accordion-header{display:block;cursor:pointer;position:relative;margin-top:2px;padding:.5em .5em .5em .7em;min-height:0}.ui-accordion .ui-accordion-icons{padding-left:2.2em}.ui-accordion .ui-accordion-noicons{padding-left:.7em}.ui-accordion .ui-accordion-icons .ui-accordion-icons{padding-left:2.2em}.ui-accordion .ui-accordion-header .ui-accordion-header-icon{position:absolute;left:.5em;top:50%;margin-top:-8px}.ui-accordion .ui-accordion-content{padding:1em 2.2em;border-top:0;overflow:auto}.ui-autocomplete{position:absolute;top:0;left:0;cursor:default}.ui-button{display:inline-block;position:relative;padding:0;line-height:normal;margin-right:.1em;cursor:pointer;vertical-align:middle;text-align:center;overflow:visible}.ui-button,.ui-button:link,.ui-button:visited,.ui-button:hover,.ui-button:active{text-decoration:none}.ui-button-icon-only{width:2.2em}button.ui-button-icon-only{width:2.4em}.ui-button-icons-only{width:3.4em}button.ui-button-icons-only{width:3.7em}.ui-button .ui-button-text{display:block;line-height:normal}.ui-button-text-only .ui-button-text{padding:.4em 1em}.ui-button-icon-only .ui-button-text,.ui-button-icons-only .ui-button-text{padding:.4em;text-indent:-9999999px}.ui-button-text-icon-primary .ui-button-text,.ui-button-text-icons .ui-button-text{padding:.4em 1em .4em 2.1em}.ui-button-text-icon-secondary .ui-button-text,.ui-button-text-icons .ui-button-text{padding:.4em 2.1em .4em 1em}.ui-button-text-icons .ui-button-text{padding-left:2.1em;padding-right:2.1em}input.ui-button{padding:.4em 1em}.ui-button-icon-only .ui-icon,.ui-button-text-icon-primary .ui-icon,.ui-button-text-icon-secondary .ui-icon,.ui-button-text-icons .ui-icon,.ui-button-icons-only .ui-icon{position:absolute;top:50%;margin-top:-8px}.ui-button-icon-only .ui-icon{left:50%;margin-left:-8px}.ui-button-text-icon-primary .ui-button-icon-primary,.ui-button-text-icons .ui-button-icon-primary,.ui-button-icons-only .ui-button-icon-primary{left:.5em}.ui-button-text-icon-secondary .ui-button-icon-secondary,.ui-button-text-icons .ui-button-icon-secondary,.ui-button-icons-only .ui-button-icon-secondary{right:.5em}.ui-buttonset{margin-right:7px}.ui-buttonset .ui-button{margin-left:0;margin-right:-.3em}input.ui-button::-moz-focus-inner,button.ui-button::-moz-focus-inner{border:0;padding:0}.ui-datepicker{width:17em;padding:.2em .2em 0;display:none}.ui-datepicker .ui-datepicker-header{position:relative;padding:.2em 0}.ui-datepicker .ui-datepicker-prev,.ui-datepicker .ui-datepicker-next{position:absolute;top:2px;width:1.8em;height:1.8em}.ui-datepicker .ui-datepicker-prev-hover,.ui-datepicker .ui-datepicker-next-hover{top:1px}.ui-datepicker .ui-datepicker-prev{left:2px}.ui-datepicker .ui-datepicker-next{right:2px}.ui-datepicker .ui-datepicker-prev-hover{left:1px}.ui-datepicker .ui-datepicker-next-hover{right:1px}.ui-datepicker .ui-datepicker-prev span,.ui-datepicker .ui-datepicker-next span{display:block;position:absolute;left:50%;margin-left:-8px;top:50%;margin-top:-8px}.ui-datepicker .ui-datepicker-title{margin:0 2.3em;line-height:1.8em;text-align:center}.ui-datepicker .ui-datepicker-title select{font-size:1em;margin:1px 0}.ui-datepicker select.ui-datepicker-month-year{width:100%}.ui-datepicker select.ui-datepicker-month,.ui-datepicker select.ui-datepicker-year{width:49%}.ui-datepicker table{width:100%;font-size:.9em;border-collapse:collapse;margin:0 0 .4em}.ui-datepicker th{padding:.7em .3em;text-align:center;font-weight:bold;border:0}.ui-datepicker td{border:0;padding:1px}.ui-datepicker td span,.ui-datepicker td a{display:block;padding:.2em;text-align:right;text-decoration:none}.ui-datepicker .ui-datepicker-buttonpane{background-image:none;margin:.7em 0 0 0;padding:0 .2em;border-left:0;border-right:0;border-bottom:0}.ui-datepicker .ui-datepicker-buttonpane button{float:right;margin:.5em .2em .4em;cursor:pointer;padding:.2em .6em .3em .6em;width:auto;overflow:visible}.ui-datepicker .ui-datepicker-buttonpane button.ui-datepicker-current{float:left}.ui-datepicker.ui-datepicker-multi{width:auto}.ui-datepicker-multi .ui-datepicker-group{float:left}.ui-datepicker-multi .ui-datepicker-group table{width:95%;margin:0 auto .4em}.ui-datepicker-multi-2 .ui-datepicker-group{width:50%}.ui-datepicker-multi-3 .ui-datepicker-group{width:33.3%}.ui-datepicker-multi-4 .ui-datepicker-group{width:25%}.ui-datepicker-multi .ui-datepicker-group-last .ui-datepicker-header,.ui-datepicker-multi .ui-datepicker-group-middle .ui-datepicker-header{border-left-width:0}.ui-datepicker-multi .ui-datepicker-buttonpane{clear:left}.ui-datepicker-row-break{clear:both;width:100%;font-size:0}.ui-datepicker-rtl{direction:rtl}.ui-datepicker-rtl .ui-datepicker-prev{right:2px;left:auto}.ui-datepicker-rtl .ui-datepicker-next{left:2px;right:auto}.ui-datepicker-rtl .ui-datepicker-prev:hover{right:1px;left:auto}.ui-datepicker-rtl .ui-datepicker-next:hover{left:1px;right:auto}.ui-datepicker-rtl .ui-datepicker-buttonpane{clear:right}.ui-datepicker-rtl .ui-datepicker-buttonpane button{float:left}.ui-datepicker-rtl .ui-datepicker-buttonpane button.ui-datepicker-current,.ui-datepicker-rtl .ui-datepicker-group{float:right}.ui-datepicker-rtl .ui-datepicker-group-last .ui-datepicker-header,.ui-datepicker-rtl .ui-datepicker-group-middle .ui-datepicker-header{border-right-width:0;border-left-width:1px}.ui-dialog{position:absolute;top:0;left:0;padding:.2em;outline:0}.ui-dialog .ui-dialog-titlebar{padding:.4em 1em;position:relative}.ui-dialog .ui-dialog-title{float:left;margin:.1em 0;white-space:nowrap;width:90%;overflow:hidden;text-overflow:ellipsis}.ui-dialog .ui-dialog-titlebar-close{position:absolute;right:.3em;top:50%;width:21px;margin:-10px 0 0 0;padding:1px;height:20px}.ui-dialog .ui-dialog-content{position:relative;border:0;padding:.5em 1em;background:none;overflow:auto}.ui-dialog .ui-dialog-buttonpane{text-align:left;border-width:1px 0 0 0;background-image:none;margin-top:.5em;padding:.3em 1em .5em .4em}.ui-dialog .ui-dialog-buttonpane .ui-dialog-buttonset{float:right}.ui-dialog .ui-dialog-buttonpane button{margin:.5em .4em .5em 0;cursor:pointer}.ui-dialog .ui-resizable-se{width:12px;height:12px;right:-5px;bottom:-5px;background-position:16px 16px}.ui-draggable .ui-dialog-titlebar{cursor:move}.ui-menu{list-style:none;padding:2px;margin:0;display:block;outline:none}.ui-menu .ui-menu{margin-top:-3px;position:absolute}.ui-menu .ui-menu-item{margin:0;padding:0;width:100%}.ui-menu .ui-menu-divider{margin:5px -2px 5px -2px;height:0;font-size:0;line-height:0;border-width:1px 0 0 0}.ui-menu .ui-menu-item a{text-decoration:none;display:block;padding:2px .4em;line-height:1.5;min-height:0;font-weight:normal}.ui-menu .ui-menu-item a.ui-state-focus,.ui-menu .ui-menu-item a.ui-state-active{font-weight:normal;margin:-1px}.ui-menu .ui-state-disabled{font-weight:normal;margin:.4em 0 .2em;line-height:1.5}.ui-menu .ui-state-disabled a{cursor:default}.ui-menu-icons{position:relative}.ui-menu-icons .ui-menu-item a{position:relative;padding-left:2em}.ui-menu .ui-icon{position:absolute;top:.2em;left:.2em}.ui-menu .ui-menu-icon{position:static;float:right}.ui-progressbar{height:2em;text-align:left;overflow:hidden}.ui-progressbar .ui-progressbar-value{margin:-1px;height:100%}.ui-progressbar .ui-progressbar-overlay{background:url(\"images/animated-overlay.gif\");height:100%;filter:alpha(opacity=25);opacity:0.25}.ui-progressbar-indeterminate .ui-progressbar-value{background-image:none}.ui-slider{position:relative;text-align:left}.ui-slider .ui-slider-handle{position:absolute;z-index:2;width:1.2em;height:1.2em;cursor:default}.ui-slider "]},{"start":{"row":1771,"column":9320},"end":{"row":2678,"column":45},"action":"insert","lines":[".ui-slider-range{position:absolute;z-index:1;font-size:.7em;display:block;border:0;background-position:0 0}.ui-slider.ui-state-disabled .ui-slider-handle,.ui-slider.ui-state-disabled .ui-slider-range{filter:inherit}.ui-slider-horizontal{height:.8em}.ui-slider-horizontal .ui-slider-handle{top:-.3em;margin-left:-.6em}.ui-slider-horizontal .ui-slider-range{top:0;height:100%}.ui-slider-horizontal .ui-slider-range-min{left:0}.ui-slider-horizontal .ui-slider-range-max{right:0}.ui-slider-vertical{width:.8em;height:100px}.ui-slider-vertical .ui-slider-handle{left:-.3em;margin-left:0;margin-bottom:-.6em}.ui-slider-vertical .ui-slider-range{left:0;width:100%}.ui-slider-vertical .ui-slider-range-min{bottom:0}.ui-slider-vertical .ui-slider-range-max{top:0}.ui-spinner{position:relative;display:inline-block;overflow:hidden;padding:0;vertical-align:middle}.ui-spinner-input{border:none;background:none;color:inherit;padding:0;margin:.2em 0;vertical-align:middle;margin-left:.4em;margin-right:22px}.ui-spinner-button{width:16px;height:50%;font-size:.5em;padding:0;margin:0;text-align:center;position:absolute;cursor:default;display:block;overflow:hidden;right:0}.ui-spinner a.ui-spinner-button{border-top:none;border-bottom:none;border-right:none}.ui-spinner .ui-icon{position:absolute;margin-top:-8px;top:50%;left:0}.ui-spinner-up{top:0}.ui-spinner-down{bottom:0}.ui-spinner .ui-icon-triangle-1-s{background-position:-65px -16px}.ui-tabs{position:relative;padding:.2em}.ui-tabs .ui-tabs-nav{margin:0;padding:.2em .2em 0}.ui-tabs .ui-tabs-nav li{list-style:none;float:left;position:relative;top:0;margin:1px .2em 0 0;border-bottom:0;padding:0;white-space:nowrap}.ui-tabs .ui-tabs-nav li a{float:left;padding:.5em 1em;text-decoration:none}.ui-tabs .ui-tabs-nav li.ui-tabs-active{margin-bottom:-1px;padding-bottom:1px}.ui-tabs .ui-tabs-nav li.ui-tabs-active a,.ui-tabs .ui-tabs-nav li.ui-state-disabled a,.ui-tabs .ui-tabs-nav li.ui-tabs-loading a{cursor:text}.ui-tabs .ui-tabs-nav li a,.ui-tabs-collapsible .ui-tabs-nav li.ui-tabs-active a{cursor:pointer}.ui-tabs .ui-tabs-panel{display:block;border-width:0;padding:1em 1.4em;background:none}.ui-tooltip{padding:8px;position:absolute;z-index:9999;max-width:300px;-webkit-box-shadow:0 0 5px #aaa;box-shadow:0 0 5px #aaa}body .ui-tooltip{border-width:2px}.ui-widget{font-family:Verdana,Arial,sans-serif;font-size:1.1em}.ui-widget .ui-widget{font-size:1em}.ui-widget input,.ui-widget select,.ui-widget textarea,.ui-widget button{font-family:Verdana,Arial,sans-serif;font-size:1em}.ui-widget-content{border:1px solid #aaa;background:#fff url(images/ui-bg_flat_75_ffffff_40x100.png) 50% 50% repeat-x;color:#222}.ui-widget-content a{color:#222}.ui-widget-header{border:1px solid #aaa;background:#ccc url(images/ui-bg_highlight-soft_75_cccccc_1x100.png) 50% 50% repeat-x;color:#222;font-weight:bold}.ui-widget-header a{color:#222}.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default{border:1px solid #d3d3d3;background:#e6e6e6 url(images/ui-bg_glass_75_e6e6e6_1x400.png) 50% 50% repeat-x;font-weight:normal;color:#555}.ui-state-default a,.ui-state-default a:link,.ui-state-default a:visited{color:#555;text-decoration:none}.ui-state-hover,.ui-widget-content .ui-state-hover,.ui-widget-header .ui-state-hover,.ui-state-focus,.ui-widget-content .ui-state-focus,.ui-widget-header .ui-state-focus{border:1px solid #999;background:#dadada url(images/ui-bg_glass_75_dadada_1x400.png) 50% 50% repeat-x;font-weight:normal;color:#212121}.ui-state-hover a,.ui-state-hover a:hover,.ui-state-hover a:link,.ui-state-hover a:visited{color:#212121;text-decoration:none}.ui-state-active,.ui-widget-content .ui-state-active,.ui-widget-header .ui-state-active{border:1px solid #aaa;background:#fff url(images/ui-bg_glass_65_ffffff_1x400.png) 50% 50% repeat-x;font-weight:normal;color:#212121}.ui-state-active a,.ui-state-active a:link,.ui-state-active a:visited{color:#212121;text-decoration:none}.ui-state-highlight,.ui-widget-content .ui-state-highlight,.ui-widget-header .ui-state-highlight{border:1px solid #fcefa1;background:#fbf9ee url(images/ui-bg_glass_55_fbf9ee_1x400.png) 50% 50% repeat-x;color:#363636}.ui-state-highlight a,.ui-widget-content .ui-state-highlight a,.ui-widget-header .ui-state-highlight a{color:#363636}.ui-state-error,.ui-widget-content .ui-state-error,.ui-widget-header .ui-state-error{border:1px solid #cd0a0a;background:#fef1ec url(images/ui-bg_glass_95_fef1ec_1x400.png) 50% 50% repeat-x;color:#cd0a0a}.ui-state-error a,.ui-widget-content .ui-state-error a,.ui-widget-header .ui-state-error a{color:#cd0a0a}.ui-state-error-text,.ui-widget-content .ui-state-error-text,.ui-widget-header .ui-state-error-text{color:#cd0a0a}.ui-priority-primary,.ui-widget-content .ui-priority-primary,.ui-widget-header .ui-priority-primary{font-weight:bold}.ui-priority-secondary,.ui-widget-content .ui-priority-secondary,.ui-widget-header .ui-priority-secondary{opacity:.7;filter:Alpha(Opacity=70);font-weight:normal}.ui-state-disabled,.ui-widget-content .ui-state-disabled,.ui-widget-header .ui-state-disabled{opacity:.35;filter:Alpha(Opacity=35);background-image:none}.ui-state-disabled .ui-icon{filter:Alpha(Opacity=35)}.ui-icon{width:16px;height:16px;background-position:16px 16px}.ui-icon,.ui-widget-content .ui-icon{background-image:url(images/ui-icons_222222_256x240.png)}.ui-widget-header .ui-icon{background-image:url(images/ui-icons_222222_256x240.png)}.ui-state-default .ui-icon{background-image:url(images/ui-icons_888888_256x240.png)}.ui-state-hover .ui-icon,.ui-state-focus .ui-icon{background-image:url(images/ui-icons_454545_256x240.png)}.ui-state-active .ui-icon{background-image:url(images/ui-icons_454545_256x240.png)}.ui-state-highlight .ui-icon{background-image:url(images/ui-icons_2e83ff_256x240.png)}.ui-state-error .ui-icon,.ui-state-error-text .ui-icon{background-image:url(images/ui-icons_cd0a0a_256x240.png)}.ui-icon-carat-1-n{background-position:0 0}.ui-icon-carat-1-ne{background-position:-16px 0}.ui-icon-carat-1-e{background-position:-32px 0}.ui-icon-carat-1-se{background-position:-48px 0}.ui-icon-carat-1-s{background-position:-64px 0}.ui-icon-carat-1-sw{background-position:-80px 0}.ui-icon-carat-1-w{background-position:-96px 0}.ui-icon-carat-1-nw{background-position:-112px 0}.ui-icon-carat-2-n-s{background-position:-128px 0}.ui-icon-carat-2-e-w{background-position:-144px 0}.ui-icon-triangle-1-n{background-position:0 -16px}.ui-icon-triangle-1-ne{background-position:-16px -16px}.ui-icon-triangle-1-e{background-position:-32px -16px}.ui-icon-triangle-1-se{background-position:-48px -16px}.ui-icon-triangle-1-s{background-position:-64px -16px}.ui-icon-triangle-1-sw{background-position:-80px -16px}.ui-icon-triangle-1-w{background-position:-96px -16px}.ui-icon-triangle-1-nw{background-position:-112px -16px}.ui-icon-triangle-2-n-s{background-position:-128px -16px}.ui-icon-triangle-2-e-w{background-position:-144px -16px}.ui-icon-arrow-1-n{background-position:0 -32px}.ui-icon-arrow-1-ne{background-position:-16px -32px}.ui-icon-arrow-1-e{background-position:-32px -32px}.ui-icon-arrow-1-se{background-position:-48px -32px}.ui-icon-arrow-1-s{background-position:-64px -32px}.ui-icon-arrow-1-sw{background-position:-80px -32px}.ui-icon-arrow-1-w{background-position:-96px -32px}.ui-icon-arrow-1-nw{background-position:-112px -32px}.ui-icon-arrow-2-n-s{background-position:-128px -32px}.ui-icon-arrow-2-ne-sw{background-position:-144px -32px}.ui-icon-arrow-2-e-w{background-position:-160px -32px}.ui-icon-arrow-2-se-nw{background-position:-176px -32px}.ui-icon-arrowstop-1-n{background-position:-192px -32px}.ui-icon-arrowstop-1-e{background-position:-208px -32px}.ui-icon-arrowstop-1-s{background-position:-224px -32px}.ui-icon-arrowstop-1-w{background-position:-240px -32px}.ui-icon-arrowthick-1-n{background-position:0 -48px}.ui-icon-arrowthick-1-ne{background-position:-16px -48px}.ui-icon-arrowthick-1-e{background-position:-32px -48px}.ui-icon-arrowthick-1-se{background-position:-48px -48px}.ui-icon-arrowthick-1-s{background-position:-64px -48px}.ui-icon-arrowthick-1-sw{background-position:-80px -48px}.ui-icon-arrowthick-1-w{background-position:-96px -48px}.ui-icon-arrowthick-1-nw{background-position:-112px -48px}.ui-icon-arrowthick-2-n-s{background-position:-128px -48px}.ui-icon-arrowthick-2-ne-sw{background-position:-144px -48px}.ui-icon-arrowthick-2-e-w{background-position:-160px -48px}.ui-icon-arrowthick-2-se-nw{background-position:-176px -48px}.ui-icon-arrowthickstop-1-n{background-position:-192px -48px}.ui-icon-arrowthickstop-1-e{background-position:-208px -48px}.ui-icon-arrowthickstop-1-s{background-position:-224px -48px}.ui-icon-arrowthickstop-1-w{background-position:-240px -48px}.ui-icon-arrowreturnthick-1-w{background-position:0 -64px}.ui-icon-arrowreturnthick-1-n{background-position:-16px -64px}.ui-icon-arrowreturnthick-1-e{background-position:-32px -64px}.ui-icon-arrowreturnthick-1-s{background-position:-48px -64px}.ui-icon-arrowreturn-1-w{background-position:-64px -64px}.ui-icon-arrowreturn-1-n{background-position:-80px -64px}.ui-icon-arrowreturn-1-e{background-position:-96px -64px}.ui-icon-arrowreturn-1-s{background-position:-112px -64px}.ui-icon-arrowrefresh-1-w{background-position:-128px -64px}.ui-icon-arrowrefresh-1-n{background-position:-144px -64px}.ui-icon-arrowrefresh-1-e{background-position:-160px -64px}.ui-icon-arrowrefresh-1-s{background-position:-176px -64px}.ui-icon-arrow-4{background-position:0 -80px}.ui-icon-arrow-4-diag{background-position:-16px -80px}.ui-icon-extlink{background-position:-32px -80px}.ui-icon-newwin{background-position:-48px -80px}.ui-icon-refresh{background-position:-64px -80px}.ui-icon-shuffle{background-position:-80px -80px}.ui-icon-transfer-e-w{background-position:-96px -80px}.ui-icon-transferthick-e-w{background-position:-112px -80px}.ui-icon-folder-collapsed{background-position:0 -96px}.ui-icon-folder-open{background-position:-16px -96px}.ui-icon-document{background-position:-32px -96px}.ui-icon-document-b{background-position:-48px -96px}.ui-icon-note{background-position:-64px -96px}.ui-icon-mail-closed{background-position:-80px -96px}.ui-icon-mail-open{background-position:-96px -96px}.ui-icon-suitcase{background-position:-112px -96px}.ui-icon-comment{background-position:-128px -96px}.ui-icon-person{background-position:-144px -96px}.ui-icon-print{background-position:-160px -96px}.ui-icon-trash{background-position:-176px -96px}.ui-icon-locked{background-position:-192px -96px}.ui-icon-unlocked{background-position:-208px -96px}.ui-icon-bookmark{background-position:-224px -96px}.ui-icon-tag{background-position:-240px -96px}.ui-icon-home{background-position:0 -112px}.ui-icon-flag{background-position:-16px -112px}.ui-icon-calendar{background-position:-32px -112px}.ui-icon-cart{background-position:-48px -112px}.ui-icon-pencil{background-position:-64px -112px}.ui-icon-clock{background-position:-80px -112px}.ui-icon-disk{background-position:-96px -112px}.ui-icon-calculator{background-position:-112px -112px}.ui-icon-zoomin{background-position:-128px -112px}.ui-icon-zoomout{background-position:-144px -112px}.ui-icon-search{background-position:-160px -112px}.ui-icon-wrench{background-position:-176px -112px}.ui-icon-gear{background-position:-192px -112px}.ui-icon-heart{background-position:-208px -112px}.ui-icon-star{background-position:-224px -112px}.ui-icon-link{background-position:-240px -112px}.ui-icon-cancel{background-position:0 -128px}.ui-icon-plus{background-position:-16px -128px}.ui-icon-plusthick{background-position:-32px -128px}.ui-icon-minus{background-position:-48px -128px}.ui-icon-minusthick{background-position:-64px -128px}.ui-icon-close{background-position:-80px -128px}.ui-icon-closethick{background-position:-96px -128px}.ui-icon-key{background-position:-112px -128px}.ui-icon-lightbulb{background-position:-128px -128px}.ui-icon-scissors{background-position:-144px -128px}.ui-icon-clipboard{background-position:-160px -128px}.ui-icon-copy{background-position:-176px -128px}.ui-icon-contact{background-position:-192px -128px}.ui-icon-image{background-position:-208px -128px}.ui-icon-video{background-position:-224px -128px}.ui-icon-script{background-position:-240px -128px}.ui-icon-alert{background-position:0 -144px}.ui-icon-info{background-position:-16px -144px}.ui-icon-notice{background-position:-32px -144px}.ui-icon-help{background-position:-48px -144px}.ui-icon-check{background-position:-64px -144px}.ui-icon-bullet{background-position:-80px -144px}.ui-icon-radio-on{background-position:-96px -144px}.ui-icon-radio-off{background-position:-112px -144px}.ui-icon-pin-w{background-position:-128px -144px}.ui-icon-pin-s{background-position:-144px -144px}.ui-icon-play{background-position:0 -160px}.ui-icon-pause{background-position:-16px -160px}.ui-icon-seek-next{background-position:-32px -160px}.ui-icon-seek-prev{background-position:-48px -160px}.ui-icon-seek-end{background-position:-64px -160px}.ui-icon-seek-start{background-position:-80px -160px}.ui-icon-seek-first{background-position:-80px -160px}.ui-icon-stop{background-position:-96px -160px}.ui-icon-eject{background-position:-112px -160px}.ui-icon-volume-off{background-position:-128px -160px}.ui-icon-volume-on{background-position:-144px -160px}.ui-icon-power{background-position:0 -176px}.ui-icon-signal-diag{background-position:-16px -176px}.ui-icon-signal{background-position:-32px -176px}.ui-icon-battery-0{background-position:-48px -176px}.ui-icon-battery-1{background-position:-64px -176px}.ui-icon-battery-2{background-position:-80px -176px}.ui-icon-battery-3{background-position:-96px -176px}.ui-icon-circle-plus{background-position:0 -192px}.ui-icon-circle-minus{background-position:-16px -192px}.ui-icon-circle-close{background-position:-32px -192px}.ui-icon-circle-triangle-e{background-position:-48px -192px}.ui-icon-circle-triangle-s{background-position:-64px -192px}.ui-icon-circle-triangle-w{background-position:-80px -192px}.ui-icon-circle-triangle-n{background-position:-96px -192px}.ui-icon-circle-arrow-e{background-position:-112px -192px}.ui-icon-circle-arrow-s{background-position:-128px -192px}.ui-icon-circle-arrow-w{background-position:-144px -192px}.ui-icon-circle-arrow-n{background-position:-160px -192px}.ui-icon-circle-zoomin{background-position:-176px -192px}.ui-icon-circle-zoomout{background-position:-192px -192px}.ui-icon-circle-check{background-position:-208px -192px}.ui-icon-circlesmall-plus{background-position:0 -208px}.ui-icon-circlesmall-minus{background-position:-16px -208px}.ui-icon-circlesmall-close{background-position:-32px -208px}.ui-icon-squaresmall-plus{background-position:-48px -208px}.ui-icon-squaresmall-minus{background-position:-64px -208px}.ui-icon-squaresmall-close{background-position:-80px -208px}.ui-icon-grip-dotted-vertical{background-position:0 -224px}.ui-icon-grip-dotted-horizontal{background-position:-16px -224px}.ui-icon-grip-solid-vertical{background-position:-32px -224px}.ui-icon-grip-solid-horizontal{background-position:-48px -224px}.ui-icon-gripsmall-diagonal-se{background-position:-64px -224px}.ui-icon-grip-diagonal-se{background-position:-80px -224px}.ui-corner-all,.ui-corner-top,.ui-corner-left,.ui-corner-tl{border-top-left-radius:4px}.ui-corner-all,.ui-corner-top,.ui-corner-right,.ui-corner-tr{border-top-right-radius:4px}.ui-corner-all,.ui-corner-bottom,.ui-corner-left,.ui-corner-bl{border-bottom-left-radius:4px}.ui-corner-all,.ui-corner-bottom,.ui-corner-right,.ui-corner-br{border-bottom-right-radius:4px}.ui-widget-overlay{background:#aaa url(images/ui-bg_flat_0_aaaaaa_40x100.png) 50% 50% repeat-x;opacity:.3;filter:Alpha(Opacity=30)}.ui-widget-shadow{margin:-8px 0 0 -8px;padding:8px;background:#aaa url(images/ui-bg_flat_0_aaaaaa_40x100.png) 50% 50% repeat-x;opacity:.3;filter:Alpha(Opacity=30);border-radius:8px}","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/elFinder.command.js:","\t150: \t * @param  Array         target files hashes","\t154: \tthis.exec = function(files, opts) { ","\t246: \t * With argument check given files hashes and return list of existed files hashes.","\t247: \t * Without argument return selected files hashes.","\t254: \t\t\t? $.map($.isArray(hashes) ? hashes : [hashes], function(hash) { return fm.file(hash) ? hash : null; })","\t259: \t * Return only existed files from given fils hashes | selected files","\t264: \tthis.files = function(hashes) {","\t268: \t\t\t? $.map($.isArray(hashes) ? hashes : [hashes], function(hash) { return fm.file(hash) || null })","\t269: \t\t\t: fm.selectedFiles();","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/elFinder.js:","\t3:  * @class elFinder - file manager for web","\t89: \t\tevents = ['enable', 'disable', 'load', 'open', 'reload', 'select',  'add', 'remove', 'change', 'dblclick', 'getfile', 'lockfiles', 'unlockfiles', 'dragstart', 'dragstop'],","\t123: \t\t * Files/dirs cache","\t127: \t\tfiles = {},","\t130: \t\t * Selected files hashes","\t151: \t\t * Buffer for copied files","\t158: \t\t * Copied/cuted files hashes","\t160: \t\t * Required for dispaly correct files names in error messages","\t203: \t\t\t\tfiles = {};","\t205: \t\t\t\t// remove only files from prev cwd","\t206: \t\t\t\tfor (var i in files) {","\t207: \t\t\t\t\tif (files.hasOwnProperty(i) ","\t208: \t\t\t\t\t&& files[i].mime != 'directory' ","\t209: \t\t\t\t\t&& files[i].phash == cwd","\t211: \t\t\t\t\t\tdelete files[i];","\t217: \t\t\tcache(data.files);","\t218: \t\t\tif (!files[cwd]) {","\t225: \t\t * Store info about files/dirs in \"files\" object.","\t227: \t\t * @param  Array  files","\t244: \t\t\t\t\tfiles[f.hash] = f;","\t386: \t * URL to upload files","\t537: \t\t\tvar targets = $.map(ui.helper.data('files')||[], function(h) { return h || null ;}),","\t542: \t\t\t\tif (files[h].locked) {","\t557: \t\t\thashes = element.is('.'+self.res('class', 'cwdfile')) ","\t561: \t\t\thelper.append(icon(files[hashes[0]].mime)).data('files', hashes).data('locked', false);","\t564: \t\t\t\thelper.append(icon(files[hashes[l-1]].mime) + '<span class=\"elfinder-drag-num\">'+l+'</span>');","\t579: \t\t\taccept     : '.elfinder-cwd-file-wrapper,.elfinder-navbar-dir,.elfinder-cwd-file',","\t583: \t\t\t\t\ttargets = $.map(ui.helper.data('files')||[], function(h) { return h || null }),","\t590: \t\t\t\t} else if (dst.is('.'+self.res(c, 'cwdfile'))) {","\t601: \t\t\t\t\th != hash && files[h].phash != hash && result.push(h);","\t608: \t\t\t\t\tself.trigger('drop', {files : targets});","\t615: \t * Return true if filemanager is active","\t624: \t * Return true if filemanager is visible","\t638: \t\tvar dir = files[hash || cwd], i;","\t641: \t\t\tdir = files[dir.phash]","\t647: \t\twhile (i in files && files.hasOwnProperty(i)) {","\t648: \t\t\tdir = files[i]","\t663: \t\treturn files[cwd] || {};","\t677: \t * Return file data from current dir or tree by it's hash","\t679: \t * @param  String  file hash","\t682: \tthis.file = function(hash) { ","\t683: \t\treturn files[hash]; ","\t687: \t * Return all cached files","\t691: \tthis.files = function() {","\t692: \t\treturn $.extend(true, {}, files);","\t696: \t * Return list of file parents hashes include file hash","\t698: \t * @param  String  file hash","\t705: \t\twhile ((dir = this.file(hash))) {","\t713: \t\tvar file, ","\t716: \t\twhile (hash && (file = files[hash]) && file.hash) {","\t717: \t\t\tpath.unshift(i18 && file.i18 ? file.i18 : file.name);","\t718: \t\t\thash = file.phash;","\t725: \t * Return file path","\t727: \t * @param  Object  file","\t731: \t\treturn files[hash] && files[hash].path","\t732: \t\t\t? files[hash].path","\t737: \t * Return file url if set","\t739: \t * @param  Object  file","\t743: \t\tvar file = files[hash];","\t745: \t\tif (!file || !file.read) {","\t749: \t\tif (file.url) {","\t750: \t\t\treturn file.url;","\t758: \t\t\tcmd: 'file',","\t759: \t\t\ttarget: file.hash","\t763: \t\t\tparams.current = file.phash;","\t771: \t * @param  String  file hash","\t775: \t\tvar file = files[hash],","\t776: \t\t\turl = file && file.tmb && file.tmb != 1 ? cwdOptions['tmbUrl'] + file.tmb : '';","\t785: \t * Return selected files hashes","\t794: \t * Return selected files info","\t798: \tthis.selectedFiles = function() {","\t799: \t\treturn $.map(selected, function(hash) { return files[hash] ? $.extend({}, files[hash]) : null });","\t803: \t * Return true if file with required name existsin required folder","\t805: \t * @param  String  file name","\t809: \tthis.fileByName = function(name, phash) {","\t812: \t\tfor (hash in files) {","\t813: \t\t\tif (files.hasOwnProperty(hash) && files[hash].phash == phash && files[hash].name == name) {","\t814: \t\t\t\treturn files[hash];","\t854: \t\t\t// sync files on request fail","\t1028: \t * Compare current files cache with new files and return diff","\t1030: \t * @param  Array  new files","\t1053: \t\t$.each(files, function(hash, f) {","\t1057: \t\t// compare files","\t1058: \t\t$.each(raw, function(hash, file) {","\t1059: \t\t\tvar origin = files[hash];","\t1062: \t\t\t\tadded.push(file);","\t1064: \t\t\t\t$.each(file, function(prop) {","\t1065: \t\t\t\t\tif (file[prop] != origin[prop]) {","\t1066: \t\t\t\t\t\tchanged.push(file)","\t1075: \t\t\tvar file  = files[hash], ","\t1076: \t\t\t\tphash = file.phash;","\t1079: \t\t\t&& file.mime == 'directory' ","\t1107: \t\t\t\tdata           : {cmd : 'tree', target : (cwd == this.root())? cwd : this.file(cwd).phash},","\t1124: \t\t\tvar diff = self.diff(odata.files.concat(pdata && pdata.tree ? pdata.tree : []));","\t1136: \tthis.upload = function(files) {","\t1137: \t\treturn this.transport.upload(files, this);","\t1222: \t *       description : 'Select all files', ","\t1280: \t *   this.clipboard([{...}, {...}], true) - put 2 files in clipboard and mark it as cutted","\t1282: \t * @param  Array    new files hashes","\t1283: \t * @param  Boolean  cut files?","\t1290: \t\t\tclipboard.length && this.trigger('unlockfiles', {files : map()});","\t1294: \t\t\t\tvar file = files[hash];","\t1295: \t\t\t\tif (file) {","\t1301: \t\t\t\t\t\tphash  : file.phash,","\t1302: \t\t\t\t\t\tname   : file.name,","\t1303: \t\t\t\t\t\tmime   : file.mime,","\t1304: \t\t\t\t\t\tread   : file.read,","\t1305: \t\t\t\t\t\tlocked : file.locked,","\t1312: \t\t\tcut && this.trigger('lockfiles', {files : map()});","\t1333: \t * @param  String|Array   usualy files hashes","\t1337: \tthis.exec = function(cmd, files, opts) {","\t1339: \t\t\t? this._commands[cmd].exec(files, opts) ","\t1449: \tthis.xhrUpload  = (typeof XMLHttpRequestUpload != 'undefined' || typeof XMLHttpRequestEventTarget != 'undefined') && typeof File != 'undefined' && typeof FormData != 'undefined';","\t1490: \t$.each(['enable', 'disable', 'load', 'open', 'reload', 'select',  'add', 'remove', 'change', 'dblclick', 'getfile', 'lockfiles', 'unlockfiles', 'dragstart', 'dragstop', 'search', 'searchend', 'viewchange'], function(i, name) {","\t1517: \t\t\tselected = $.map(e.data.selected || e.data.value|| [], function(hash) { return files[hash] ? hash : null; });","\t1537: \t\t\t\tif (files[hash]) {","\t1538: \t\t\t\t\tfiles[hash].tmb = tmb;","\t1546: \t\t\t$.each(e.data.changed||[], function(i, file) {","\t1547: \t\t\t\tvar hash = file.hash;","\t1548: \t\t\t\tif ((files[hash].width && !file.width) || (files[hash].height && !file.height)) {","\t1549: \t\t\t\t\tfiles[hash].width = undefined;","\t1550: \t\t\t\t\tfiles[hash].height = undefined;","\t1552: \t\t\t\tfiles[hash] = files[hash] ? $.extend(files[hash], file) : file;","\t1559: \t\t\t\t\tvar file = files[hash];","\t1560: \t\t\t\t\tif (file) {","\t1561: \t\t\t\t\t\tif (file.mime == 'directory' && file.dirs) {","\t1562: \t\t\t\t\t\t\t$.each(files, function(h, f) {","\t1566: \t\t\t\t\t\tdelete files[hash];","\t1576: \t\t\tcache(e.data.files);","\t1598: \t// in getFileCallback set - change default actions on double click/enter/ctrl+enter","\t1599: \tif (typeof(this.options.getFileCallback) == 'function' && this.commands.getfile) {","\t1602: \t\t\tself.exec('getfile').fail(function() {","\t1608: \t\t\tdescription : this.i18n('cmdgetfile'),","\t1609: \t\t\tcallback    : function() { self.exec('getfile').fail(function() { self.exec(self.OS == 'mac' ? 'rename' : 'open') }) }","\t1630: \t$.each(['open', 'reload', 'back', 'forward', 'up', 'home', 'info', 'quicklook', 'getfile', 'help'], function(i, cmd) {","\t1794: \t * File mimetype to kind mapping","\t1931: \t\topen    : function(data) { return data && data.cwd && data.files && $.isPlainObject(data.cwd) && $.isArray(data.files); },","\t1936: \t\tsearch  : function(data) { return data && data.files && $.isArray(data.files)}","\t2035: \t\t\tif (input && $(input).is(':file') && $(input).val()) {","\t2041: \t\t\tcnt = input.files ? input.files.length : 1;","\t2081: \t\t\t\tfiles       = data.input ? data.input.files : data.files, ","\t2082: \t\t\t\tcnt         = files.length,","\t2135: \t\t\t\t\t// drop file from finder","\t2160: \t\t\t$.each(files, function(i, file) {","\t2161: \t\t\t\tformData.append('upload[]', file);","\t2166: \t\t\t\t\t// ff bug while send zero sized file","\t2174: \t\t\tif (!this.UA.Safari || !data.files) {","\t2305: \t\tvar filter = function(file) { ","\t2307: \t\t\tif (file && file.hash && file.name && file.mime) {","\t2308: \t\t\t\tif (file.mime == 'application/x-empty') {","\t2309: \t\t\t\t\tfile.mime = 'text/plain';","\t2311: \t\t\t\treturn file;","\t2314: \t\t\treturn file && file.hash && file.name && file.mime ? file : null; ","\t2318: \t\tif (data.files) {","\t2319: \t\t\tdata.files = $.map(data.files, filter);","\t2322: \t\t\tdata.tree = $.map(data.tree, filter);","\t2325: \t\t\tdata.added = $.map(data.added, filter);","\t2328: \t\t\tdata.changed = $.map(data.changed, filter);","\t2351: \t\tname : function(file1, file2) { return file1.name.toLowerCase().localeCompare(file2.name.toLowerCase()); },","\t2352: \t\tsize : function(file1, file2) { ","\t2353: \t\t\tvar size1 = parseInt(file1.size) || 0,","\t2354: \t\t\t\tsize2 = parseInt(file2.size) || 0;","\t2357: \t\t\treturn (parseInt(file1.size) || 0) > (parseInt(file2.size) || 0) ? 1 : -1; },","\t2358: \t\tkind : function(file1, file2) { return file1.mime.localeCompare(file2.mime); },","\t2359: \t\tdate : function(file1, file2) { ","\t2360: \t\t\tvar date1 = file1.ts || file1.date,","\t2361: \t\t\t\tdate2 = file2.ts || file2.date;","\t2368: \t * Compare files based on elFinder.sort","\t2370: \t * @param  Object  file","\t2371: \t * @param  Object  file","\t2374: \tcompare : function(file1, file2) {","\t2381: \t\t\td1    = file1.mime == 'directory',","\t2382: \t\t\td2    = file2.mime == 'directory',","\t2393: \t\tres = asc ? sort(file1, file2) : sort(file2, file1);","\t2396: \t\t\t? res = asc ? rules.name(file1, file2) : rules.name(file2, file1)","\t2401: \t * Sort files based on config","\t2403: \t * @param  Array  files","\t2406: \tsortFiles : function(files) {","\t2407: \t\treturn files.sort(this.compare);","\t2418: \t *    msg : 'Copy files', // not required for known types @see this.notifyType","\t2485: \t *    title : 'Remove files',","\t2561: \t * Create unique file name in required dir","\t2563: \t * @param  String  file name","\t2580: \t\tif (!this.fileByName(name, phash)) {","\t2585: \t\t\tif (!this.fileByName(name, phash)) {","\t2604: \t\t\t\tvar file;","\t2606: \t\t\t\t\tif ((file = self.file(m.substr(1)))) {","\t2607: \t\t\t\t\t\treturn file.name;","\t2654: \t * @param  String  file mimetype","\t2666: \t * Return localized kind of file","\t2668: \t * @param  Object|String  file or file mimetype","\t2721: \t * @param  Object  file object","\t2724: \tformatDate : function(file, ts) {","\t2726: \t\t\tts   = ts || file.ts, ","\t2774: \t\t} else if (file.date) {","\t2775: \t\t\treturn file.date.replace(/([a-z]+)\\s/i, function(a1, a2) { return self.i18n(a2)+' '; });","\t2782: \t * Return css class marks file permissions","\t2784: \t * @param  Object  file ","\t2801: \t * Return localized string with file permissions","\t2803: \t * @param  Object  file","\t2816: \t * Return formated file size","\t2818: \t * @param  Number  file size","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/elFinder.options.js:","\t50: \t * URL to upload file to.","\t59: \t * Allow to drag and drop to upload files","\t75: \t * Data to append to all requests and to upload files","\t99: \t * Additional css class for filemanager node.","\t112: \t\t'open', 'reload', 'home', 'up', 'back', 'forward', 'getfile', 'quicklook', ","\t113: \t\t'download', 'rm', 'duplicate', 'rename', 'mkdir', 'mkfile', 'upload', 'copy', ","\t123: \t\t// \"getfile\" command options.","\t124: \t\tgetfile : {","\t126: \t\t\t// allow to return multiple files info","\t128: \t\t\t// allow to return filers info","\t145: \t\t\t// if empty - any text files can be edited","\t147: \t\t\t// edit files in wysisyg's","\t151: \t\t\t\t// \t * files mimetypes allowed to edit in current wysisyg","\t174: \t\t\t\t// \t * Called before file content send to backend.","\t192: \t * Callback for \"getfile\" commands.","\t198: \tgetFileCallback : null,","\t230: \t\t\t['mkdir', 'mkfile', 'upload'],","\t231: \t\t\t['open', 'download', 'getfile'],","\t261: \t * Display only required files by types","\t272: \t * Custom files sort rules.","\t278: \t *   name : function(file1, file2) { return file1.name.toLowerCase().localeCompare(file2.name.toLowerCase()); }","\t323: \t * File modification datetime format.","\t333: \t * File modification datetime format in form \"Yesterday 12:23:01\".","\t394: \t * How many files display at once?","\t399: \tshowFiles : 30,","\t403: \t * Distance in px to cwd bottom edge to start display files","\t411: \t * Additional rule to valid new file name.","\t459: \t\tcwd    : ['reload', 'back', '|', 'upload', 'mkdir', 'mkfile', 'paste', '|', 'sort', '|', 'info'],","\t460: \t\t// current directory file menu","\t461: \t\tfiles  : ['getfile', '|','open', 'quicklook', '|', 'download', '|', 'copy', 'cut', 'paste', 'duplicate', '|', 'rm', '|', 'edit', 'rename', 'resize', '|', 'archive', 'extract', '|', 'info']","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/elFinder.resources.js:","\t17: \t\tcwdfile     : 'elfinder-cwd-file',","\t75: \t\t\t\tfile   = {","\t83: \t\t\t\tnode = cwd.trigger('create.'+fm.namespace, file).find('#'+id),","\t106: \t\t\t\t\t\t\tif (fm.fileByName(name, phash)) {","\t112: \t\t\t\t\t\t\tfm.lockfiles({files : [id]});","\t135: \t\t\tnode.find('.elfinder-cwd-filename').empty('').append(input.val(file.name));","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/jquery.dialogelfinder.js:","\t9:  *     title          : 'My files', // dialog title, default = \"Files\"","\t24: \t\t\ttoolbar = $('<div class=\"ui-widget-header dialogelfinder-drag ui-corner-top\">'+(opts.title || 'Files')+'</div>'),","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/archive.js:","\t4:  * Archive selected files","\t35: \t\tvar files = this.files(hashes),","\t36: \t\t\tcnt   = files.length,","\t39: \t\t\terror = ['errArchive', 'errPerm', 'errCreatingTempDir', 'errFtpDownloadFile', 'errFtpUploadFile', 'errFtpMkdir', 'errArchiveExec', 'errExtractExec', 'errRm'],","\t54: \t\t\tif (!files[i].read) {","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/copy.js:","\t4:  * Put files in filemanager clipboard.","\t16: \t\tvar sel = this.files(sel),","\t29: \t\t$.each(this.files(hashes), function(i, file) {","\t30: \t\t\tif (!(file.read && file.phash)) {","\t31: \t\t\t\treturn !dfrd.reject(['errCopy', file.name, 'errPerm']);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/cut.js:","\t4:  * Put files in filemanager clipboard.","\t16: \t\tvar sel = this.files(sel),","\t29: \t\t$.each(this.files(hashes), function(i, file) {","\t30: \t\t\tif (!(file.read && file.phash) ) {","\t31: \t\t\t\treturn !dfrd.reject(['errCopy', file.name, 'errPerm']);","\t33: \t\t\tif (file.locked) {","\t34: \t\t\t\treturn !dfrd.reject(['errLocked', file.name]);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/download.js:","\t4:  * Download selected files.","\t12: \t\tfilter = function(hashes) {","\t13: \t\t\treturn $.map(self.files(hashes), function(f) { return f.mime == 'directory' ? null : f });","\t24: \t\treturn  !this._disabled && cnt && (!fm.UA.IE || cnt == 1) && cnt == filter(sel).length ? 0 : -1;","\t30: \t\t\tfiles   = filter(hashes),","\t52: \t\tfor (i = 0; i < files.length; i++) {","\t53: \t\t\tiframes += '<iframe class=\"downloader\" id=\"downloader-' + files[i].hash+'\" style=\"display:none\" src=\"'+base + 'cmd=file&target=' + files[i].hash+'&download=1'+cdata+'\"/>';","\t62: \t\t\t\t}, fm.UA.Firefox? (20000 + (10000 * i)) : 1000); // give mozilla 20 sec + 10 sec for each file to be saved","\t64: \t\tfm.trigger('download', {files : files});","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/duplicate.js:","\t4:  * Create file/folder copy with suffix \"copy Number\"","\t13: \t\tvar sel = this.files(sel),","\t21: \t\t\tfiles  = this.files(hashes),","\t22: \t\t\tcnt    = files.length,","\t33: \t\t$.each(files, function(i, file) {","\t34: \t\t\tif (!file.read || !fm.file(file.phash).write) {","\t35: \t\t\t\treturn !dfrd.reject(['errCopy', file.name, 'errPerm']);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/edit.js:","\t4:  * Edit text file in dialog window","\t14: \t\t * Return files acceptable to edit","\t16: \t\t * @param  Array  files hashes","\t19: \t\tfilter = function(files) {","\t20: \t\t\treturn $.map(files, function(file) {","\t21: \t\t\t\treturn (file.mime.indexOf('text/') === 0 || $.inArray(file.mime, mimes) !== -1) ","\t22: \t\t\t\t\t&& file.mime.indexOf('text/rtf')","\t23: \t\t\t\t\t&& (!self.onlyMimes.length || $.inArray(file.mime, self.onlyMimes) !== -1)","\t24: \t\t\t\t\t&& file.read && file.write ? file : null;","\t29: \t\t * Open dialog with textarea to edit file","\t32: \t\t * @param  Object  file     file object","\t33: \t\t * @param  String  content  file content","\t36: \t\tdialog = function(id, file, content) {","\t39: \t\t\t\tta   = $('<textarea class=\"elfinder-file-edit\" rows=\"20\" id=\"'+id+'-ta\">'+fm.escape(content)+'</textarea>'),","\t50: \t\t\t\t\ttitle   : file.name,","\t71: \t\t\t\t\tif ($.inArray(file.mime, editor.mimes || []) !== -1 ","\t126: \t\t * Get file content and","\t127: \t\t * open dialog with textarea to edit file content","\t129: \t\t * @param  String  file hash","\t132: \t\tedit = function(file) {","\t133: \t\t\tvar hash   = file.hash,","\t136: \t\t\t\tdata   = {cmd : 'file', target : hash},","\t138: \t\t\t\tid    = 'edit-'+fm.namespace+'-'+file.hash,","\t148: \t\t\tif (!file.read || !file.write) {","\t149: \t\t\t\terror = ['errOpen', file.name, 'errPerm']","\t156: \t\t\t\tnotify : {type : 'openfile', cnt : 1},","\t160: \t\t\t\tdialog(id, file, data.content)","\t199: \t\tvar sel = this.files(sel),","\t202: \t\treturn !this._disabled && cnt && filter(sel).length == cnt ? 0 : -1;","\t206: \t\tvar files = filter(this.files(hashes)),","\t208: \t\t\tfile;","\t214: \t\twhile ((file = files.shift())) {","\t215: \t\t\tlist.push(edit(file));","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/extract.js:","\t4:  * Extract files from archive","\t12: \t\tfilter  = function(files) {","\t13: \t\t\treturn $.map(files, function(file) { ","\t14: \t\t\t\treturn file.read && $.inArray(file.mime, mimes) !== -1 ? file : null","\t28: \t\tvar sel = this.files(sel),","\t31: \t\treturn !this._disabled && cnt && this.fm.cwd().write && filter(sel).length == cnt ? 0 : -1;","\t35: \t\tvar files    = this.files(hashes),","\t37: \t\t\tcnt      = files.length, ","\t44: \t\tvar names = $.map(fm.files(hashes), function(file) { return file.name; });","\t46: \t\t$.map(fm.files(hashes), function(file) { map[file.name] = file; });","\t59: \t\tvar unpack = function(file) {","\t60: \t\t\tif (!(file.read && fm.file(file.phash).write)) {","\t61: \t\t\t\terror = ['errExtract', file.name, 'errPerm'];","\t64: \t\t\t} else if ($.inArray(file.mime, mimes) === -1) {","\t65: \t\t\t\terror = ['errExtract', file.name, 'errNoArchive'];","\t70: \t\t\t\t\tdata:{cmd:'extract', target:file.hash},","\t84: \t\tvar confirm = function(files, index) {","\t85: \t\t\tvar file = files[index];","\t86: \t\t\tvar name = file.name.replace(/\\.((tar\\.(gz|bz|bz2|z|lzo))|cpio\\.gz|ps\\.gz|xcf\\.(gz|bz2)|[a-z0-9]{1,4})$/ig, '');","\t100: \t\t\t\t\t\t\t\t\t\tunpack(file);","\t103: \t\t\t\t\t\t\t\t\t\tconfirm(files, index+1);","\t109: \t\t\t\t\t\t\t\t\t\tunpack(files[i]);","\t121: \t\t\t\t\t\t\t\t\tconfirm(files, index+1);","\t137: \t\t\t\tunpack(file);","\t139: \t\t\t\t\tconfirm(files, index+1);","\t151: \t\t\tconfirm(files, 0);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/getfile.js:","\t3:  * @class elFinder command \"getfile\". ","\t4:  * Return selected files info into outer callback.","\t9: elFinder.prototype.commands.getfile = function() {","\t12: \t\tfilter = function(files) {","\t15: \t\t\tfiles = $.map(files, function(file) {","\t16: \t\t\t\treturn file.mime != 'directory' || o.folders ? file : null;","\t19: \t\t\treturn o.multiple || files.length == 1 ? files : [];","\t23: \tthis.callback      = fm.options.getFileCallback;","\t27: \t\tvar sel = this.files(sel),","\t30: \t\treturn this.callback && cnt && filter(sel).length == cnt ? 0 : -1;","\t36: \t\t\tfiles = this.files(hashes),","\t37: \t\t\tcnt   = files.length,","\t42: \t\t\t\t\tfm.trigger('getfile', {files : data});","\t51: \t\t\tresult = function(file) {","\t53: \t\t\t\t\t? opts.multiple ? $.map(files, function(f) { return f.url; }) : files[0].url","\t54: \t\t\t\t\t: opts.multiple ? files : files[0];","\t57: \t\t\ti, file, dim;","\t64: \t\t\tfile = files[i];","\t65: \t\t\tif (file.mime == 'directory' && !opts.folders) {","\t68: \t\t\tfile.baseUrl = url;","\t69: \t\t\tfile.url     = fm.url(file.hash);","\t70: \t\t\tfile.path    = fm.path(file.hash);","\t71: \t\t\tif (file.tmb && file.tmb != 1) {","\t72: \t\t\t\tfile.tmb = tmb + file.tmb;","\t74: \t\t\tif (!file.width && !file.height) {","\t75: \t\t\t\tif (file.dim) {","\t76: \t\t\t\t\tdim = file.dim.split('x');","\t77: \t\t\t\t\tfile.width = dim[0];","\t78: \t\t\t\t\tfile.height = dim[1];","\t79: \t\t\t\t} else if (file.mime.indexOf('image') !== -1) {","\t81: \t\t\t\t\t\tdata : {cmd : 'dim', target : file.hash},","\t88: \t\t\t\t\t\t\tvar rfile = fm.file(this.hash);","\t89: \t\t\t\t\t\t\trfile.width = this.width = dim[0];","\t90: \t\t\t\t\t\t\trfile.height = this.height = dim[1];","\t92: \t\t\t\t\t}.bind(file)));","\t99: \t\t\t\tdfrd.resolve(result(files));","\t104: \t\treturn dfrd.resolve(result(files));","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/help.js:","\t132: \t\t\t\t\tcontent.find('.ui-tabs-panel').hide().filter(link.attr('href')).show();","\t136: \t\t\t.filter(':first').click();","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/info.js:","\t4:  * Display dialog with file properties.","\t23: \t\t\tfiles    : fm.i18n('files'),","\t56: \t\tvar files   = this.files(hashes);","\t57: \t\tif (! files.length) {","\t58: \t\t\tfiles   = this.files([ this.fm.cwd().hash ]);","\t64: \t\t\tcnt     = files.length,","\t76: \t\t\tid = fm.namespace+'-info-'+$.map(files, function(f) { return f.hash }).join('-'),","\t78: \t\t\tsize, tmb, file, title, dcnt;","\t91: \t\t\tfile  = files[0];","\t93: \t\t\tview  = view.replace('{class}', fm.mime2class(file.mime));","\t94: \t\t\ttitle = tpl.itemTitle.replace('{name}', fm.escape(file.i18 || file.name)).replace('{kind}', fm.mime2kind(file));","\t96: \t\t\tif (file.tmb) {","\t97: \t\t\t\ttmb = fm.option('tmbUrl')+file.tmb;","\t100: \t\t\tif (!file.read) {","\t102: \t\t\t} else if (file.mime != 'directory' || file.alias) {","\t103: \t\t\t\tsize = fm.formatSize(file.size);","\t106: \t\t\t\tcount.push(file.hash);","\t110: \t\t\tfile.alias && content.push(row.replace(l, msg.aliasfor).replace(v, file.alias));","\t111: \t\t\tcontent.push(row.replace(l, msg.path).replace(v, fm.escape(fm.path(file.hash, true))));","\t112: \t\t\tfile.read && content.push(row.replace(l, msg.link).replace(v,  '<a href=\"'+fm.url(file.hash)+'\" target=\"_blank\">'+file.name+'</a>'));","\t114: \t\t\tif (file.dim) { // old api","\t115: \t\t\t\tcontent.push(row.replace(l, msg.dim).replace(v, file.dim));","\t116: \t\t\t} else if (file.mime.indexOf('image') !== -1) {","\t117: \t\t\t\tif (file.width && file.height) {","\t118: \t\t\t\t\tcontent.push(row.replace(l, msg.dim).replace(v, file.width+'x'+file.height));","\t122: \t\t\t\t\t\tdata : {cmd : 'dim', target : file.hash},","\t132: \t\t\t\t\t\t\tvar rfile = fm.file(file.hash);","\t133: \t\t\t\t\t\t\trfile.width = dim[0];","\t134: \t\t\t\t\t\t\trfile.height = dim[1];","\t141: \t\t\tcontent.push(row.replace(l, msg.modify).replace(v, fm.formatDate(file)));","\t142: \t\t\tcontent.push(row.replace(l, msg.perms).replace(v, fm.formatPermissions(file)));","\t143: \t\t\tcontent.push(row.replace(l, msg.locked).replace(v, file.locked ? msg.yes : msg.no));","\t147: \t\t\tdcnt  = $.map(files, function(f) { return f.mime == 'directory' ? 1 : null }).length;","\t150: \t\t\t\t$.each(files, function(h, f) { ","\t159: \t\t\t\tcontent.push(row.replace(l, msg.kind).replace(v, msg.files));","\t162: \t\t\t\tcontent.push(row.replace(l, msg.kind).replace(v, dcnt == cnt ? msg.folders : msg.folders+' '+dcnt+', '+msg.files+' '+(cnt-dcnt)))","\t164: \t\t\t\tcount = $.map(files, function(f) { return f.hash });","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/mkfile.js:","\t3:  * @class  elFinder command \"mkfile\"","\t4:  * Create new empty file","\t8: elFinder.prototype.commands.mkfile = function() {","\t12: \tthis.prefix          = 'untitled file.txt';","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/open.js:","\t4:  * Enter folder or open files in new windows","\t21: \t\tvar sel = this.files(sel),","\t26: \t\t\t: cnt ? ($.map(sel, function(file) { return file.mime == 'directory' ? null : file}).length == cnt ? 0 : -1) : -1","\t32: \t\t\tfiles = this.files(hashes),","\t33: \t\t\tcnt   = files.length,","\t34: \t\t\tfile, url, s, w;","\t41: \t\tif (cnt == 1 && (file = files[0]) && file.mime == 'directory') {","\t42: \t\t\treturn file && !file.read","\t43: \t\t\t\t? dfrd.reject(['errOpen', file.name, 'errPerm'])","\t45: \t\t\t\t\t\tdata   : {cmd  : 'open', target : file.thash || file.hash},","\t51: \t\tfiles = $.map(files, function(file) { return file.mime != 'directory' ? file : null });","\t53: \t\t// nothing to open or files and folders selected - do nothing","\t54: \t\tif (cnt != files.length) {","\t58: \t\t// open files","\t59: \t\tcnt = files.length;","\t61: \t\t\tfile = files[cnt];","\t63: \t\t\tif (!file.read) {","\t64: \t\t\t\treturn dfrd.reject(['errOpen', file.name, 'errPerm']);","\t67: \t\t\tif (!(url = fm.url(/*file.thash || */file.hash))) {","\t70: \t\t\t\t\t+ (fm.oldAPI ? 'cmd=open&current='+file.phash : 'cmd=file')","\t71: \t\t\t\t\t+ '&target=' + file.hash;","\t75: \t\t\tif (file.dim) {","\t76: \t\t\t\ts = file.dim.split('x');","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/paste.js:","\t4:  * Paste filesfrom clipboard into directory.","\t5:  * If files pasted in its parent directory - files duplicates will created","\t30: \t\t\t\tdst = this.fm.file(dst[0]);","\t42: \t\t\tdst    = dst ? this.files(dst)[0] : fm.cwd(),","\t43: \t\t\tfiles  = fm.clipboard(),","\t44: \t\t\tcnt    = files.length,","\t45: \t\t\tcut    = cnt ? files[0].cut : false,","\t53: \t\t\tcopy  = function(files) {","\t54: \t\t\t\treturn files.length && fm._commands.duplicate","\t55: \t\t\t\t\t? fm.exec('duplicate', files)","\t58: \t\t\tpaste = function(files) {","\t61: \t\t\t\t\tintersect = function(files, names) {","\t63: \t\t\t\t\t\t\ti   = files.length;","\t66: \t\t\t\t\t\t\t$.inArray(files[i].name, names) !== -1 && ret.unshift(i);","\t72: \t\t\t\t\t\t\tfile = files[i],","\t75: \t\t\t\t\t\tif (!file) {","\t80: \t\t\t\t\t\t\ttitle  : fm.i18n(cut ? 'moveFiles' : 'copyFiles'),","\t81: \t\t\t\t\t\t\ttext   : fm.i18n(['errExists', file.name, 'confirmRepl']), ","\t88: \t\t\t\t\t\t\t\t\t\t: paste(files);","\t99: \t\t\t\t\t\t\t\t\t\t\tfiles[existed[i]].remove = true","\t102: \t\t\t\t\t\t\t\t\t\tfiles[existed[ndx]].remove = true;","\t107: \t\t\t\t\t\t\t\t\t\t: paste(files);","\t119: \t\t\t\t\t\texisted = intersect(files, names);","\t120: \t\t\t\t\t\texisted.length ? confirm(0) : paste(files);","\t122: \t\t\t\t\tpaste     = function(files) {","\t123: \t\t\t\t\t\tvar files  = $.map(files, function(file) { return !file.remove ? file : null } ),","\t124: \t\t\t\t\t\t\tcnt    = files.length,","\t133: \t\t\t\t\t\tsrc = files[0].phash;","\t134: \t\t\t\t\t\tfiles = $.map(files, function(f) { return f.hash});","\t137: \t\t\t\t\t\t\t\tdata   : {cmd : 'paste', dst : dst.hash, targets : files, cut : cut ? 1 : 0, src : src},","\t142: \t\t\t\t\t\t\t\tfm.unlockfiles({files : files});","\t147: \t\t\t\tif (self._disabled || !files.length) {","\t153: \t\t\t\t\tpaste(files);","\t157: \t\t\t\t\t\tpaste(files);","\t161: \t\t\t\t\t\t\t? valid($.map(fm.files(), function(file) { return file.phash == dst.hash ? file.name : null }))","\t183: \t\t\treturn dfrd.reject([error, files[0].name, 'errPerm']);","\t188: \t\t$.each(files, function(i, file) {","\t189: \t\t\tif (!file.read) {","\t190: \t\t\t\treturn !dfrd.reject([error, files[0].name, 'errPerm']);","\t193: \t\t\tif (cut && file.locked) {","\t194: \t\t\t\treturn !dfrd.reject(['errLocked', file.name]);","\t197: \t\t\tif ($.inArray(file.hash, parents) !== -1) {","\t198: \t\t\t\treturn !dfrd.reject(['errCopyInItself', file.name]);","\t201: \t\t\tfparents = fm.parents(file.hash);","\t204: \t\t\t\tif ($.map(fparents, function(h) { var d = fm.file(h); return d.phash == dst.hash && d.name == file.name ? d : null }).length) {","\t205: \t\t\t\t\treturn !dfrd.reject(['errReplByChild', file.name]);","\t209: \t\t\tif (file.phash == dst.hash) {","\t210: \t\t\t\tfcopy.push(file.hash);","\t213: \t\t\t\t\thash  : file.hash,","\t214: \t\t\t\t\tphash : file.phash,","\t215: \t\t\t\t\tname  : file.name","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/quicklook.js:","\t4:  * Fast preview for some files types","\t65: \t\t * @param  jQuery  file node in cwd","\t213: \t\t\t\tfile    = e.file,","\t217: \t\t\tif (file) {","\t218: \t\t\t\t!file.read && e.stopImmediatePropagation();","\t219: \t\t\t\tself.window.data('hash', file.hash);","\t221: \t\t\t\ttitle.html(fm.escape(file.name));","\t224: \t\t\t\t\t\ttpl.replace(/\\{value\\}/, file.name)","\t225: \t\t\t\t\t\t+ tpl.replace(/\\{value\\}/, fm.mime2kind(file))","\t226: \t\t\t\t\t\t+ (file.mime == 'directory' ? '' : tpl.replace(/\\{value\\}/, fm.formatSize(file.size)))","\t227: \t\t\t\t\t\t+ tpl.replace(/\\{value\\}/, fm.i18n('modify')+': '+ fm.formatDate(file))","\t229: \t\t\t\ticon.addClass('elfinder-cwd-icon ui-corner-all '+fm.mime2class(file.mime));","\t231: \t\t\t\tif (file.tmb) {","\t239: \t\t\t\t\t\t.attr('src', (tmb = fm.tmb(file.hash)));","\t265: \t\t\t\tfile = self.value,","\t268: \t\t\tif (self.closed() && file && (node = cwd.find('#'+file.hash)).length) {","\t283: \t\t\t\tfile    = self.value,","\t310: \t * Selected file","\t317: \t\t// save selected file","\t318: \t\tselect : function() { this.update(void(0), this.fm.selectedFiles()[0]); },","\t401: \t\t\t\t\tself.value ? preview.trigger($.Event('update', {file : self.value})) : win.trigger('close');","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/quicklook.plugins.js:","\t23: \t\t\tvar file = e.file,","\t26: \t\t\tif ($.inArray(file.mime, mimes) !== -1) {","\t27: \t\t\t\t// this is our file - stop event propagation","\t61: \t\t\t\t\t.attr('src', ql.fm.url(file.hash));","\t78: \t\t\tvar file = e.file, jqxhr;","\t80: \t\t\tif ($.inArray(file.mime, mimes) !== -1) {","\t83: \t\t\t\t// stop loading on change file if not loaded yet","\t89: \t\t\t\t\tdata           : {cmd : 'get', target  : file.hash, current : file.phash},","\t115: \t\t\tvar file = e.file,","\t116: \t\t\t\tmime = file.mime,","\t122: \t\t\t\t// stop loading on change file if not loadin yet","\t128: \t\t\t\t\tdata   : {cmd     : 'get', target  : file.hash },","\t163: \t\t\tvar file = e.file, node;","\t165: \t\t\tif (file.mime == mime) {","\t178: \t\t\t\t\t.attr('src', fm.url(file.hash));","\t206: \t\t\tvar file = e.file,","\t209: \t\t\tif (file.mime == mime) {","\t212: \t\t\t\tpreview.append((node = $('<embed class=\"elfinder-quicklook-preview-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" src=\"'+fm.url(file.hash)+'\" quality=\"high\" type=\"application/x-shockwave-flash\" />')));","\t242: \t\t\tvar file = e.file,","\t243: \t\t\t\ttype = mimes[file.mime];","\t248: \t\t\t\tnode = $('<audio class=\"elfinder-quicklook-preview-audio\" controls preload=\"auto\" autobuffer><source src=\"'+ql.fm.url(file.hash)+'\" /></audio>')","\t279: \t\t\tvar file = e.file,","\t280: \t\t\t\ttype = mimes[file.mime];","\t286: \t\t\t\tnode = $('<video class=\"elfinder-quicklook-preview-video\" controls preload=\"auto\" autobuffer><source src=\"'+ql.fm.url(file.hash)+'\" /></video>').appendTo(preview);","\t316: \t\t\tvar file  = e.file,","\t317: \t\t\t\tmime  = file.mime,","\t320: \t\t\tif ($.inArray(file.mime, mimes) !== -1) {","\t323: \t\t\t\tnode = $('<embed src=\"'+ql.fm.url(file.hash)+'\" type=\"'+mime+'\" class=\"elfinder-quicklook-preview-'+(video ? 'video' : 'audio')+'\"/>')","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/reload.js:","\t3:  * Sync files and folders","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/rename.js:","\t4:  * Rename selected file.","\t15: \t\tvar sel = this.fm.selectedFiles();","\t25: \t\t\tfile     = fm.file(sel.shift()),","\t26: \t\t\tfilename = '.elfinder-cwd-filename',","\t30: \t\t\t\t\t\tname   = fm.escape(file.name);","\t37: \t\t\t\t\t\tcwd.find('#'+file.hash).find(filename).html(name);","\t39: \t\t\t\t\t\t\tcwd.find('#'+file.hash).click();","\t73: \t\t\t\t\t\tif (name == file.name) {","\t79: \t\t\t\t\t\tif (fm.fileByName(name, file.phash)) {","\t84: \t\t\t\t\t\tfm.lockfiles({files : [file.hash]});","\t86: \t\t\t\t\t\t\t\tdata   : {cmd : 'rename', target : file.hash, name : name},","\t97: \t\t\t\t\t\t\t\tfm.unlockfiles({files : [file.hash]})","\t102: \t\t\tnode = cwd.find('#'+file.hash).find(filename).empty().append(input.val(file.name)),","\t110: \t\tif (!file || cnt > 1 || !node.length) {","\t114: \t\tif (file.locked) {","\t115: \t\t\treturn dfrd.reject(['errLocked', file.name]);","\t119: \t\t\tinput.parent().length && file && $.inArray(file.hash, fm.selected()) === -1 && input.blur();","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/resize.js:","\t16: \t\tvar sel = this.fm.selectedFiles();","\t22: \t\t\tfiles = this.files(hashes),","\t25: \t\t\topen = function(file, id) {","\t163: \t\t\t\t\t\t\t\t.filter(':text').keydown(function(e) {","\t208: \t\t\t\t\t\t\t\t.filter(':first').focus();","\t401: \t\t\t\t\t\t\t\trhandle.filter(':ui-resizable').resizable('destroy');","\t418: \t\t\t\t\t\t\t\trhandlec.filter(':ui-resizable').resizable('destroy');","\t419: \t\t\t\t\t\t\t\trhandlec.filter(':ui-draggable').draggable('destroy');","\t512: \t\t\t\t\t\t\t\ttarget : file.hash,","\t534: \t\t\t\t\tsrc     = fm.url(file.hash)","\t607: \t\t\t\t\ttitle          : file.name,","\t617: \t\t\t\t\t$('.elfinder-dialog').css('filter', '');","\t647: \t\tif (!files.length || files[0].mime.indexOf('image/') === -1) {","\t651: \t\tid = 'resize-'+fm.namespace+'-'+files[0].hash;","\t659: \t\topen(files[0], id);","\t787: \t\t\telement.style.filter =  (element.style.filter || '').replace(/progid:DXImageTransform\\.Microsoft\\.Matrix\\([^)]*\\)/, \"\" ) +","\t793: \t\t\t\t\t\",FilterType='bilinear',sizingMethod='auto expand')\") ","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/rm.js:","\t4:  * Delete files","\t17: \t\treturn !this._disabled && sel.length && $.map(sel, function(h) { var f = fm.file(h); return f && f.phash && !f.locked ? h : null }).length == sel.length","\t28: \t\t\tfiles  = this.files(hashes),","\t29: \t\t\tcnt    = files.length,","\t37: \t\t$.each(files, function(i, file) {","\t38: \t\t\tif (!file.phash) {","\t39: \t\t\t\treturn !dfrd.reject(['errRm', file.name, 'errPerm']);","\t41: \t\t\tif (file.locked) {","\t42: \t\t\t\treturn !dfrd.reject(['errLocked', file.name]);","\t44: \t\t\tif (file.hash == cwd) {","\t45: \t\t\t\tgoroot = fm.root(file.hash);","\t50: \t\t\tfiles = this.hashes(hashes);","\t58: \t\t\t\t\t\tfm.lockfiles({files : files});","\t60: \t\t\t\t\t\t\tdata   : {cmd  : 'rm', targets : files}, ","\t72: \t\t\t\t\t\t\tfm.unlockfiles({files : files});","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/search.js:","\t4:  * Find files","\t9: \tthis.title          = 'Find files';","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/sort.js:","\t4:  * Change sort files rule","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/upload.js:","\t4:  * Upload files using iframe or XMLHttpRequest & FormData.","\t5:  * Dialog allow to send files using drag and drop","\t49: \t\tif (data && (data.input || data.files)) {","\t56: \t\tinput = $('<input type=\"file\" multiple=\"true\"/>')","\t71: \t\t\tdropbox = $('<div class=\"ui-corner-all elfinder-upload-dropbox\">'+fm.i18n('dropFiles')+'</div>')","\t96: \t\t\t\tupload({files : e.dataTransfer.files});","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.ar.js:","\t35: \t\t\t'errNotFile'           : 'العنصر المختار ليس ملف',","\t43: \t\t\t'errFileNotFound'      : 'الملف غير موجود',","\t47: \t\t\t'errMkfile'            : ' غير قادر على إنشاء ملف جديد\"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'لم يتم رفع أي ملف ',","\t55: \t\t\t'errFileMaxSize'       : 'حجم الملف أكبر من الحجم المسموح به',","\t70: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t82: \t\t\t'cmdgetfile'   : 'أختيار الملفات',","\t87: \t\t\t'cmdmkfile'    : 'ملف نصي جديد',","\t109: \t\t\t'ntffile'     : 'فتح ملف',","\t112: \t\t\t'ntfmkfile'   : 'ينشئ الملفات',","\t159: \t\t\t'selectfiles'     : 'تحديد ملفات',","\t160: \t\t\t'selectffile'     : 'تحديد الملف الاول',","\t161: \t\t\t'selectlfile'     : 'تحديد الملف الأخير',","\t170: \t\t\t'files'           : 'ملفات',","\t198: \t\t\t'dropFiles'       : 'لصق الملفات هنا',","\t201: \t\t\t'moveFiles'       : 'قص الملفات',","\t202: \t\t\t'copyFiles'       : 'نسخ الملفات',","\t205: \t\t\t'untitled file.txt' : 'untitled file.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.bg.js:","\t35: \t\t\t'errNotFile'           : 'Обектът не е фаил.',","\t43: \t\t\t'errFileNotFound'      : 'Фаилът не е открит.',","\t47: \t\t\t'errMkfile'            : 'Не мога да създам файл \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'Не са намерени файлове за качване.',","\t55: \t\t\t'errFileMaxSize'       : 'Файла превишава максимално допустимия размер.',","\t84: \t\t\t'cmdgetfile'   : 'Избери файлове',","\t89: \t\t\t'cmdmkfile'    : 'Нов текстови файл',","\t114: \t\t\t'ntffile'     : 'Отваряне на файл',","\t117: \t\t\t'ntfmkfile'   : 'Създавам файл',","\t175: \t\t\t'selectfiles'     : 'Избери фаил(ове)',","\t176: \t\t\t'selectffile'     : 'Избери първият файл',","\t177: \t\t\t'selectlfile'     : 'Избери последният файл',","\t186: \t\t\t'files'           : 'Файлове',","\t214: \t\t\t'dropFiles'       : 'Пуснете файловете тук',","\t217: \t\t\t'moveFiles'       : 'Премести файлове',","\t218: \t\t\t'copyFiles'       : 'Копирай файлове',","\t221: \t\t\t'untitled file.txt' : 'неозаглавен_файл.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.ca.js:","\t35: \t\t\t'errNotFile'           : 'L\\'objecte no és un fitxer.',","\t43: \t\t\t'errFileNotFound'      : 'No s\\'ha trobat el fitxer.',","\t47: \t\t\t'errMkfile'            : 'No s\\'ha pogut crear el fitxer \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'No s\\'han trobat fitxers per carregar.',","\t55: \t\t\t'errFileMaxSize'       : 'El fitxer excedeix la mida màxima permesa.',","\t84: \t\t\t'cmdgetfile'   : 'Selecciona els fitxers',","\t89: \t\t\t'cmdmkfile'    : 'Nou fitxer de text',","\t114: \t\t\t'ntffile'     : 'S\\'està obrint el fitxer',","\t117: \t\t\t'ntfmkfile'   : 'S\\'estan creant el fitxers',","\t175: \t\t\t'selectfiles'     : 'Selecciona el(s) fitxer(s)',","\t176: \t\t\t'selectffile'     : 'Selecciona el primer fitxer',","\t177: \t\t\t'selectlfile'     : 'Selecciona l\\'últim fitxer',","\t186: \t\t\t'files'           : 'Fitxers',","\t214: \t\t\t'dropFiles'       : 'Arrossegueu els fitxers aquí',","\t217: \t\t\t'moveFiles'       : 'Mou els fitxers',","\t218: \t\t\t'copyFiles'       : 'Copia els fitxers',","\t221: \t\t\t'untitled file.txt' : 'fitxer sense nom.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.cs.js:","\t37: \t\t\t'errNotFile'           : 'Objekt není soubor.',","\t45: \t\t\t'errFileNotFound'      : 'Soubor nenalezen.',","\t49: \t\t\t'errMkfile'            : 'Nepodařilo se vytvořit soubor \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : 'Nejsou vybrány žádné soubory k nahrání.',","\t57: \t\t\t'errFileMaxSize'       : 'Překročena maximální povolená velikost souboru.',","\t86: \t\t\t'cmdgetfile'   : 'Vybrat soubory',","\t91: \t\t\t'cmdmkfile'    : 'Nový textový soubor',","\t116: \t\t\t'ntffile'     : 'Otevírání souboru',","\t119: \t\t\t'ntfmkfile'   : 'Vytváření souborů',","\t202: \t\t\t'selectfiles'     : 'Vybrat soubor(y)',","\t203: \t\t\t'selectffile'     : 'Vybrat první soubor',","\t204: \t\t\t'selectlfile'     : 'Vybrat poslední soubor',","\t213: \t\t\t'files'           : 'Soubory',","\t241: \t\t\t'dropFiles'       : 'Přetáhněte soubory sem',","\t244: \t\t\t'moveFiles'       : 'Přesunout sobory',","\t245: \t\t\t'copyFiles'       : 'Zkupírovat soubory',","\t248: \t\t\t'untitled file.txt' : 'nepojmenovaný soubor.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.de.js:","\t38: \t\t\t'errNotFile'           : 'Objekt ist keine Datei.',","\t46: \t\t\t'errFileNotFound'      : 'Datei nicht gefunden.',","\t50: \t\t\t'errMkfile'            : 'Kann Datei \"$1\" nicht erstellen.',","\t55: \t\t\t'errUploadFile'        : 'Kann \"$1\" nicht hochladen.',","\t56: \t\t\t'errUploadNoFiles'     : 'Keine Dateien zum Hochladen gefunden.',","\t58: \t\t\t'errUploadFileSize'    : 'Die Datei überschreitet die Maximalgröße',","\t86: \t\t\t'errFtpDownloadFile'   : 'Download der Datei über FTP nicht möglich: \"$1\"',","\t87: \t\t\t'errFtpUploadFile'     : 'Upload der Datei zu FTP nicht möglich: \"$1\"',","\t102: \t\t\t'cmdgetfile'   : 'Datei auswählen',","\t107: \t\t\t'cmdmkfile'    : 'Neue Textdatei',","\t133: \t\t\t'ntffile'     : 'öffne Datei',","\t136: \t\t\t'ntfmkfile'   : 'Erstelle Dateien',","\t138: \t\t\t'ntfcopy'     : 'Kopiere Dateien files',","\t193: \t\t\t'selectfiles'     : 'Dateien auswählen',","\t194: \t\t\t'selectffile'     : 'Erste Datei auswhählen',","\t195: \t\t\t'selectlfile'     : 'Letzte Datei auswählen',","\t204: \t\t\t'files'           : 'Dateien',","\t232: \t\t\t'dropFiles'       : 'Dateien hier ablegen',","\t233: \t\t\t'dropFilesBrowser': 'Verschieben oder Einfügen von Dateien aus dem Browser',","\t236: \t\t\t'moveFiles'       : 'Dateien verschieben',","\t237: \t\t\t'copyFiles'       : 'Dateien kopieren',","\t324: \t\t\t'kindVideoDV'     : 'DV Film',","\t325: \t\t\t'kindVideoMPEG'   : 'MPEG Film',","\t326: \t\t\t'kindVideoMPEG4'  : 'MPEG-4 Film',","\t327: \t\t\t'kindVideoAVI'    : 'AVI Film',","\t328: \t\t\t'kindVideoMOV'    : 'Quick Time Film',","\t329: \t\t\t'kindVideoWM'     : 'Windows Media Film',","\t330: \t\t\t'kindVideoFlash'  : 'Flash Film',","\t331: \t\t\t'kindVideoMKV'    : 'Matroska Film',","\t332: \t\t\t'kindVideoOGG'    : 'Ogg Film'","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.el.js:","\t3:  * use this file to create new translation","\t44: \t\t\t'errNotFile'           : 'Το αντικείμενο δεν είναι αρχείο.',","\t52: \t\t\t'errFileNotFound'      : 'Το αρχείο δε βρέθηκε.',","\t56: \t\t\t'errMkfile'            : 'Η δημιουργία του αρχείου \"$1\" δεν ήταν δυνατή.',","\t62: \t\t\t'errUploadNoFiles'     : 'Δεν βρέθηκαν αρχεία για upload.',","\t64: \t\t\t'errFileMaxSize'       : 'Το αρχείο υπερβαίνει το επιτρεπόμενο μέγιστο μέγεθος.',","\t97: \t\t\t'cmdgetfile'   : 'Επιλέξτε αρχεία',","\t102: \t\t\t'cmdmkfile'    : 'Νέο αρχείο κειμένου',","\t127: \t\t\t'ntffile'     : 'Άνοιγμα αρχείου',","\t130: \t\t\t'ntfmkfile'   : 'Δημιουργία αρχείων',","\t211: \t\t\t'selectfiles'     : 'Επιλογή αρχείων',","\t212: \t\t\t'selectffile'     : 'Επιλογή πρώτου αρχείου',","\t213: \t\t\t'selectlfile'     : 'Επιλογή τελευταίου αρχείου',","\t222: \t\t\t'files'           : 'Αρχεία',","\t250: \t\t\t'dropFiles'       : 'Κάντε drop τα αρχεία εδώ',","\t253: \t\t\t'moveFiles'       : 'Μετακίνηση αρχείων',","\t254: \t\t\t'copyFiles'       : 'Αντιγραφή αρχείων',","\t257: \t\t\t'untitled file.txt' : 'untitled file.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.en.js:","\t37: \t\t\t'errNotFile'           : 'Object is not a file.',","\t42: \t\t\t'errExists'            : 'File named \"$1\" already exists.',","\t43: \t\t\t'errInvName'           : 'Invalid file name.',","\t45: \t\t\t'errFileNotFound'      : 'File not found.',","\t47: \t\t\t'errPopup'             : 'Browser prevented opening popup window. To open file enable it in browser options.',","\t49: \t\t\t'errMkfile'            : 'Unable to create file \"$1\".',","\t51: \t\t\t'errCopyFrom'          : 'Copying files from volume \"$1\" not allowed.',","\t52: \t\t\t'errCopyTo'            : 'Copying files to volume \"$1\" not allowed.',","\t54: \t\t\t'errUploadFile'        : 'Unable to upload \"$1\".', // old name - errUpload","\t55: \t\t\t'errUploadNoFiles'     : 'No files found for upload.', ","\t57: \t\t\t'errUploadFileSize'    : 'File exceeds maximum allowed size.', //  old name - errFileMaxSize","\t58: \t\t\t'errUploadMime'        : 'File type not allowed.', ","\t67: \t\t\t'errRmSrc'             : 'Unable remove source file(s).',","\t68: \t\t\t'errExtract'           : 'Unable to extract files from \"$1\".',","\t71: \t\t\t'errNoArchive'         : 'File is not archive or has unsupported archive type.',","\t74: \t\t\t'errArcSymlinks'       : 'For security reason denied to unpack archives contains symlinks or files with not allowed names.', // edited 24.06.2012","\t75: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t81: \t\t\t'errUsupportType'      : 'Unsupported file type.',","\t82: \t\t\t'errNotUTF8Content'    : 'File \"$1\" is not in UTF-8 and cannot be edited.',  // added 9.11.2011","\t89: \t\t\t'errFtpDownloadFile'   : 'Unable to download file from FTP: \"$1\"',","\t90: \t\t\t'errFtpUploadFile'     : 'Unable to upload file to FTP: \"$1\"',","\t92: \t\t\t'errArchiveExec'       : 'Error while archiving files: \"$1\"',","\t93: \t\t\t'errExtractExec'       : 'Error while extracting files: \"$1\"',","\t102: \t\t\t'cmdedit'      : 'Edit file',","\t103: \t\t\t'cmdextract'   : 'Extract files from archive',","\t105: \t\t\t'cmdgetfile'   : 'Select files',","\t110: \t\t\t'cmdmkfile'    : 'New text file',","\t117: \t\t\t'cmdsearch'    : 'Find files',","\t119: \t\t\t'cmdupload'    : 'Upload files',","\t136: \t\t\t'ntffile'     : 'Open file',","\t139: \t\t\t'ntfmkfile'   : 'Creating files',","\t140: \t\t\t'ntfrm'       : 'Delete files',","\t141: \t\t\t'ntfcopy'     : 'Copy files',","\t142: \t\t\t'ntfmove'     : 'Move files',","\t143: \t\t\t'ntfprepare'  : 'Prepare to copy files',","\t144: \t\t\t'ntfrename'   : 'Rename files',","\t145: \t\t\t'ntfupload'   : 'Uploading files',","\t146: \t\t\t'ntfdownload' : 'Downloading files',","\t147: \t\t\t'ntfsave'     : 'Save files',","\t149: \t\t\t'ntfextract'  : 'Extracting files from archive',","\t150: \t\t\t'ntfsearch'   : 'Searching files',","\t183: \t\t\t'confirmRm'       : 'Are you sure you want to remove files?<br/>This cannot be undone!',","\t184: \t\t\t'confirmRepl'     : 'Replace old file with new one?',","\t196: \t\t\t'selectall'       : 'Select all files',","\t197: \t\t\t'selectfiles'     : 'Select file(s)',","\t198: \t\t\t'selectffile'     : 'Select first file',","\t199: \t\t\t'selectlfile'     : 'Select last file',","\t208: \t\t\t'files'           : 'Files',","\t219: \t\t\t'webfm'           : 'Web file manager',","\t236: \t\t\t'dropFiles'       : 'Drop files here',","\t238: \t\t\t'selectForUpload' : 'Select files to upload',","\t239: \t\t\t'moveFiles'       : 'Move files',","\t240: \t\t\t'copyFiles'       : 'Copy files',","\t274: \t\t\t'kindTorrent'     : 'Bittorrent file',","\t281: \t\t\t'kindJAR'         : 'Java JAR file',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.es.js:","\t36: \t\t\t'errNotFile'           : 'El objeto no es un archivo.',","\t44: \t\t\t'errFileNotFound'      : 'Archivo no encontrado.',","\t48: \t\t\t'errMkfile'            : 'No se puede crear el archivo \"$1\".',","\t54: \t\t\t'errUploadNoFiles'     : 'No hay archivos para subir.',","\t56: \t\t\t'errFileMaxSize'       : 'El tamaño del archivo excede el máximo permitido.',","\t75: \t\t\t'errFtpDownloadFile'   : 'No se ha podido descargar el archivo desde FTP: \"$1\"',","\t76: \t\t\t'errFtpUploadFile'     : 'No se ha podido cargar el archivo a FTP: \"$1\"',","\t86: \t\t\t'errUploadFile'        : 'No se ha podido cargar \"$1\".',","\t98: \t\t\t'cmdgetfile'   : 'Seleccionar archivos',","\t103: \t\t\t'cmdmkfile'    : 'Nuevo archivo de texto',","\t125: \t\t\t'ntffile'     : 'Abrir archivo',","\t128: \t\t\t'ntfmkfile'   : 'Creando archivos',","\t176: \t\t\t'selectfiles'     : 'Seleccionar archivo(s)',","\t177: \t\t\t'selectffile'     : 'Seleccionar primer archivo',","\t178: \t\t\t'selectlfile'     : 'Seleccionar último archivo',","\t187: \t\t\t'files'           : 'Archivos',","\t215: \t\t\t'dropFiles'       : 'Arrastre archivos aquí',","\t218: \t\t\t'moveFiles'       : 'Mover archivos',","\t219: \t\t\t'copyFiles'       : 'Copiar archivos',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.fa.js:","\t36: \t\t\t'errNotFile'           : 'شی به صورت فایل نمی باشد .',","\t44: \t\t\t'errFileNotFound'      : 'فایل مورد نظر شما یافت نشد .',","\t48: \t\t\t'errMkfile'            : 'قادر به ابجاد نمودن فایلی با نبم \"$1\" نمی باشد .',","\t54: \t\t\t'errUploadNoFiles'     : '��یچ فایلی برای بارگذاری یافت نشد .',","\t56: \t\t\t'errFileMaxSize'       : 'حجم فایل بیشتر از حد مجاز تعیین شده است .',","\t85: \t\t\t'cmdgetfile'   : 'انتخاب فایل ها',","\t90: \t\t\t'cmdmkfile'    : 'فایل متنی جدید',","\t115: \t\t\t'ntffile'     : 'باز نمدن فایل',","\t118: \t\t\t'ntfmkfile'   : 'ساختن فایل',","\t201: \t\t\t'selectfiles'     : 'انتخاب یکی یا همه فایل ها',","\t202: \t\t\t'selectffile'     : 'انتخاب اولین فایل',","\t203: \t\t\t'selectlfile'     : 'انتخاب آخرین فایل',","\t212: \t\t\t'files'           : 'فایل ها',","\t240: \t\t\t'dropFiles'       : 'فایل های خود را در این محل رها نمایید .',","\t243: \t\t\t'moveFiles'       : 'انتقال فایل ها',","\t244: \t\t\t'copyFiles'       : 'کپی فایل ها',","\t247: \t\t\t'untitled file.txt' : 'فایل متنی بدون نام',","\t275: \t\t\t'kindTorrent'     : 'Bittorrent file',","\t282: \t\t\t'kindJAR'         : 'Java JAR file',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.fr.js:","\t37: \t\t\t'errNotFile'           : 'Cet objet n\\'est pas un fichier.',","\t45: \t\t\t'errFileNotFound'      : 'Fichier non trouvé.',","\t49: \t\t\t'errMkfile'            : 'impossible de créer le fichier \"$1\".',","\t54: \t\t\t'errUploadFile'        : 'Impossible d\\'envoyer \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : 'Aucun fichier à envoyer.',","\t57: \t\t\t'errUploadFileSize'    : 'Le fichier dépasse la taille maximale allouée.',","\t83: \t\t\t'errFtpDownloadFile'   : 'Impossible de télécharger le file depuis l\\'accès FTP : \"$1\"',","\t84: \t\t\t'errFtpUploadFile'     : 'Impossible d\\'envoyer le fichier vers l\\'accès FTP : \"$1\"',","\t88: \t\t\t'errUploadFile'        : 'Envoi impossible de \"$1\"',","\t100: \t\t\t'cmdgetfile'   : 'Sélectionner les fichiers',","\t105: \t\t\t'cmdmkfile'    : 'Nouveau fichier texte',","\t131: \t\t\t'ntffile'     : 'Ouvrir le fichier',","\t134: \t\t\t'ntfmkfile'   : 'Création des fichiers',","\t189: \t\t\t'selectfiles'     : 'Sélectionner le(s) fichier(s)',","\t190: \t\t\t'selectffile'     : 'Sélectionner le premier fichier',","\t191: \t\t\t'selectlfile'     : 'Sélectionner le dernier fichier',","\t200: \t\t\t'files'           : 'Fichiers',","\t228: \t\t\t'dropFiles'       : 'Déposez les fichiers ici',","\t231: \t\t\t'moveFiles'       : 'Déplacer les fichiers',","\t232: \t\t\t'copyFiles'       : 'Copier les fich"]},{"start":{"row":2678,"column":45},"end":{"row":3840,"column":39},"action":"insert","lines":["iers',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.hu.js:","\t35: \t\t\t'errNotFile'           : 'Object is not a file.',","\t40: \t\t\t'errExists'            : 'File named \"$1\" already exists.',","\t41: \t\t\t'errInvName'           : 'Invalid file name.',","\t43: \t\t\t'errFileNotFound'      : 'File not found.',","\t45: \t\t\t'errPopup'             : 'Browser prevented opening popup window. To open file enable it in browser options.',","\t47: \t\t\t'errMkfile'            : 'Unable to create file \"$1\".',","\t49: \t\t\t'errCopyFrom'          : 'Copying files from volume \"$1\" not allowed.',","\t50: \t\t\t'errCopyTo'            : 'Copying files to volume \"$1\" not allowed.',","\t53: \t\t\t'errUploadNoFiles'     : 'No files found for upload.',","\t55: \t\t\t'errFileMaxSize'       : 'File exceeds maximum allowed size.',","\t56: \t\t\t'errUploadMime'        : 'File type not allowed.',","\t63: \t\t\t'errExtract'           : 'Unable to extract files from \"$1\".',","\t66: \t\t\t'errNoArchive'         : 'File is not archive or has unsupported archive type.',","\t79: \t\t\t'cmdgetfile'   : 'Fájlok kijelölése',","\t84: \t\t\t'cmdmkfile'    : 'Új szöveges dokumentum',","\t106: \t\t\t'ntffile'     : 'Fájl megnyitás',","\t109: \t\t\t'ntfmkfile'   : 'Creating files',","\t113: \t\t\t'ntfprepare'  : 'Prepare to copy files',","\t143: \t\t\t'confirmRepl'     : 'Replace old file with new one?',","\t156: \t\t\t'selectfiles'     : 'Fájlok kijelölése',","\t157: \t\t\t'selectffile'     : 'Első fájl kijelölése',","\t158: \t\t\t'selectlfile'     : 'Utolsó fájl kijelölése',","\t167: \t\t\t'files'           : 'Fájlok',","\t178: \t\t\t'webfm'           : 'Web file manager',","\t195: \t\t\t'dropFiles'       : 'Fájlok dobása ide',","\t198: \t\t\t'moveFiles'       : 'Fájlok áthelyezése',","\t199: \t\t\t'copyFiles'       : 'Fájlok másolása',","\t268: \t\t\t'kindVideo'       : 'Film',","\t269: \t\t\t'kindVideoDV'     : 'DV film',","\t270: \t\t\t'kindVideoMPEG'   : 'MPEG film',","\t271: \t\t\t'kindVideoMPEG4'  : 'MPEG-4 film',","\t272: \t\t\t'kindVideoAVI'    : 'AVI film',","\t273: \t\t\t'kindVideoMOV'    : 'Quick Time film',","\t274: \t\t\t'kindVideoWM'     : 'Windows Media film',","\t275: \t\t\t'kindVideoFlash'  : 'Flash film',","\t276: \t\t\t'kindVideoMKV'    : 'Matroska film',","\t277: \t\t\t'kindVideoOGG'    : 'Ogg film'","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.it.js:","\t37: \t\t\t'errNotFile'           : 'L\\'oggetto non è un file.',","\t42: \t\t\t'errExists'            : 'Il file \"$1\" è già esistente.',","\t43: \t\t\t'errInvName'           : 'Nome file non valido.',","\t45: \t\t\t'errFileNotFound'      : 'File non trovato.',","\t47: \t\t\t'errPopup'             : 'Il tuo Browser non consente di aprire finestre di pop-up. Per aprire il file abilita questa opzione nelle impostazioni del tuo Browser.',","\t49: \t\t\t'errMkfile'            : 'Impossibile creare il file \"$1\".',","\t51: \t\t\t'errCopyFrom'          : 'Non è possibile copiare file da \"$1\".',","\t52: \t\t\t'errCopyTo'            : 'Non è possibile copiare file in \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : 'Non sono stati specificati file da caricare.',","\t56: \t\t\t'errMaxSize'           : 'La dimensione totale dei file supera il limite massimo consentito.',","\t57: \t\t\t'errFileMaxSize'       : 'Le dimensioni del file superano il massimo consentito.',","\t58: \t\t\t'errUploadMime'        : 'FileType non consentito.',","\t59: \t\t\t'errUploadTransfer'    : 'Trasferimento errato del file \"$1\".', ","\t65: \t\t\t'errExtract'           : 'Impossibile estrarre file da \"$1\".',","\t68: \t\t\t'errNoArchive'         : 'Il file non è un archivio o contiene file non supportati.',","\t74: \t\t\t'errUsupportType'      : 'FileType non supportato.',","\t83: \t\t\t'cmdedit'      : 'Modifica File',","\t86: \t\t\t'cmdgetfile'   : 'Seleziona File',","\t91: \t\t\t'cmdmkfile'    : 'Nuovo file di testo',","\t98: \t\t\t'cmdsearch'    : 'Ricerca file',","\t100: \t\t\t'cmdupload'    : 'Carica File',","\t116: \t\t\t'ntffile'     : 'Apri file',","\t119: \t\t\t'ntfmkfile'   : 'Creazione dei files in corso',","\t120: \t\t\t'ntfrm'       : 'Cancellazione files in corso',","\t121: \t\t\t'ntfcopy'     : 'Copia file in corso',","\t122: \t\t\t'ntfmove'     : 'Spostamento file in corso',","\t123: \t\t\t'ntfprepare'  : 'Inizializzando la copia dei file.',","\t124: \t\t\t'ntfrename'   : 'Sto rinominando i file',","\t125: \t\t\t'ntfupload'   : 'Caricamento file in corso',","\t126: \t\t\t'ntfdownload' : 'Downloading file in corso',","\t127: \t\t\t'ntfsave'     : 'Salvataggio file in corso',","\t129: \t\t\t'ntfextract'  : 'Estrazione file dall\\'archivio in corso',","\t130: \t\t\t'ntfsearch'   : 'Ricerca files in corso',","\t188: \t\t\t'confirmRm'       : 'Sei sicuro di voler rimuovere i file?<br />L\\'operazione non è reversibile!',","\t189: \t\t\t'confirmRepl'     : 'Sostituire i file ?',","\t201: \t\t\t'selectall'       : 'Seleziona tutti i file',","\t202: \t\t\t'selectfiles'     : 'Seleziona file',","\t203: \t\t\t'selectffile'     : 'Seleziona il primo file',","\t204: \t\t\t'selectlfile'     : 'Seleziona l\\'ultimo file',","\t213: \t\t\t'files'           : 'File',","\t224: \t\t\t'webfm'           : 'Web file manager',","\t241: \t\t\t'dropFiles'       : 'Trascina i file qui',","\t243: \t\t\t'selectForUpload' : 'Seleziona file da caricare',","\t244: \t\t\t'moveFiles'       : 'Sposta file',","\t245: \t\t\t'copyFiles'       : 'Copia file',","\t248: \t\t\t'untitled file.txt' : 'file senza titolo.txt',","\t276: \t\t\t'kindTorrent'     : 'File Bittorrent',","\t283: \t\t\t'kindJAR'         : 'File Java JAR',","\t290: \t\t\t'kindPHP'         : 'File PHP',","\t291: \t\t\t'kindCSS'         : 'File CSS (Cascading Style Sheet)',","\t293: \t\t\t'kindJS'          : 'File Javascript',","\t294: \t\t\t'kindRTF'         : 'File RTF (Rich Text Format)',","\t295: \t\t\t'kindC'           : 'File C',","\t296: \t\t\t'kindCHeader'     : 'File C (header)',","\t297: \t\t\t'kindCPP'         : 'File C++',","\t298: \t\t\t'kindCPPHeader'   : 'File C++ (header)',","\t300: \t\t\t'kindPython'      : 'File Python',","\t301: \t\t\t'kindJava'        : 'File Java',","\t302: \t\t\t'kindRuby'        : 'File Ruby',","\t303: \t\t\t'kindPerl'        : 'File Perl',","\t304: \t\t\t'kindSQL'         : 'File SQL',","\t305: \t\t\t'kindXML'         : 'File XML',","\t306: \t\t\t'kindAWK'         : 'File AWK',","\t307: \t\t\t'kindCSV'         : 'File CSV (Comma separated values)',","\t308: \t\t\t'kindDOCBOOK'     : 'File Docbook XML',","\t321: \t\t\t'kindAudio'       : 'File Audio',","\t328: \t\t\t'kindVideo'       : 'File Video',","\t329: \t\t\t'kindVideoDV'     : 'Filmato DV',","\t330: \t\t\t'kindVideoMPEG'   : 'Filmato MPEG',","\t331: \t\t\t'kindVideoMPEG4'  : 'Filmato MPEG-4',","\t332: \t\t\t'kindVideoAVI'    : 'Filmato AVI',","\t333: \t\t\t'kindVideoMOV'    : 'Filmato Quick Time',","\t334: \t\t\t'kindVideoWM'     : 'Filmato Windows Media',","\t335: \t\t\t'kindVideoFlash'  : 'Filmato Flash',","\t336: \t\t\t'kindVideoMKV'    : 'Filmato Matroska',","\t337: \t\t\t'kindVideoOGG'    : 'Filmato Ogg'","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.jp.js:","\t38: \t\t\t'errNotFile'           : 'オブジェクトがファイルではありません',","\t46: \t\t\t'errFileNotFound'      : 'ファイルが見つかりません',","\t50: \t\t\t'errMkfile'            : '\"$1\"ファイルを作成することができません',","\t55: \t\t\t'errUploadFile'        : '\"$1\"がアップロードできません', // old name - errUpload","\t56: \t\t\t'errUploadNoFiles'     : 'アップロードされたファイルがありません',","\t58: \t\t\t'errUploadFileSize'    : 'ファイルが許容サイズを超えています', //  old name - errFileMaxSize","\t68: \t\t\t'errRmSrc'             : 'Unable remove source file(s).',","\t90: \t\t\t'errFtpDownloadFile'   : 'FTP からファイルをダウンロードできません：\"$1\"',","\t91: \t\t\t'errFtpUploadFile'     : 'FTP へファイルをアップロードできません：\"$1\"',","\t106: \t\t\t'cmdgetfile'   : 'ファイル選択',","\t111: \t\t\t'cmdmkfile'    : '新規テキストファイル',","\t137: \t\t\t'ntffile'     : 'ファイルを開いています',","\t140: \t\t\t'ntfmkfile'   : 'ファイルを作成しています',","\t198: \t\t\t'selectfiles'     : 'ファイル選択',","\t199: \t\t\t'selectffile'     : '最初のファイルを選択',","\t200: \t\t\t'selectlfile'     : '最後のファイルを選択',","\t209: \t\t\t'files'           : 'ファイル',","\t237: \t\t\t'dropFiles'       : 'ここにファイルをドロップ',","\t240: \t\t\t'moveFiles'       : 'ファイルを移動',","\t241: \t\t\t'copyFiles'       : 'ファイルをコピー',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.ko.js:","\t37: \t\t\t'errNotFile'           : '파일이 아닙니다',","\t45: \t\t\t'errFileNotFound'      : '파일을 찾을 수 없습니다',","\t49: \t\t\t'errMkfile'            : ' \"$1\" 파일을 생성할 수 없습니다',","\t55: \t\t\t'errUploadNoFiles'     : '업로드할 파일이 없습니다',","\t57: \t\t\t'errFileMaxSize'       : '파일이 허용된 최대크기를 초과하였습니다',","\t86: \t\t\t'cmdgetfile'   : '선택',","\t91: \t\t\t'cmdmkfile'    : '새 텍스트파일',","\t116: \t\t\t'ntffile'     : '파일 열기',","\t119: \t\t\t'ntfmkfile'   : '파일 생성',","\t202: \t\t\t'selectfiles'     : '파일 선택',","\t203: \t\t\t'selectffile'     : '첫번째 파일 선택',","\t204: \t\t\t'selectlfile'     : '마지막 파일 선택',","\t213: \t\t\t'files'           : '파일',","\t241: \t\t\t'dropFiles'       : '여기로 이동하기',","\t244: \t\t\t'moveFiles'       : '파일 이동',","\t245: \t\t\t'copyFiles'       : '파일 복사',","\t248: \t\t\t'untitled file.txt' : '새 텍스트.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.LANG.js:","\t3:  * use this file to create new translation","\t44: \t\t\t'errNotFile'           : 'Object is not a file.',","\t49: \t\t\t'errExists'            : 'File named \"$1\" already exists.',","\t50: \t\t\t'errInvName'           : 'Invalid file name.',","\t52: \t\t\t'errFileNotFound'      : 'File not found.',","\t54: \t\t\t'errPopup'             : 'Browser prevented opening popup window. To open file enable it in browser options.',","\t56: \t\t\t'errMkfile'            : 'Unable to create file \"$1\".',","\t58: \t\t\t'errCopyFrom'          : 'Copying files from volume \"$1\" not allowed.',","\t59: \t\t\t'errCopyTo'            : 'Copying files to volume \"$1\" not allowed.',","\t62: \t\t\t'errUploadNoFiles'     : 'No files found for upload.',","\t64: \t\t\t'errFileMaxSize'       : 'File exceeds maximum allowed size.',","\t65: \t\t\t'errUploadMime'        : 'File type not allowed.',","\t72: \t\t\t'errExtract'           : 'Unable to extract files from \"$1\".',","\t75: \t\t\t'errNoArchive'         : 'File is not archive or has unsupported archive type.',","\t78: \t\t\t'errArcSymlinks'       : 'For security reason denied to unpack archives contains symlinks or files with not allowed names.', // edited 24.06.2012","\t79: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t81: \t\t\t'errUsupportType'      : 'Unsupported file type.',","\t82: \t\t\t'errNotUTF8Content'    : 'File \"$1\" is not in UTF-8 and cannot be edited.',  // added 9.11.2011","\t94: \t\t\t'cmdedit'      : 'Edit file',","\t95: \t\t\t'cmdextract'   : 'Extract files from archive',","\t97: \t\t\t'cmdgetfile'   : 'Select files',","\t102: \t\t\t'cmdmkfile'    : 'New text file',","\t109: \t\t\t'cmdsearch'    : 'Find files',","\t111: \t\t\t'cmdupload'    : 'Upload files',","\t127: \t\t\t'ntffile'     : 'Open file',","\t130: \t\t\t'ntfmkfile'   : 'Creating files',","\t131: \t\t\t'ntfrm'       : 'Delete files',","\t132: \t\t\t'ntfcopy'     : 'Copy files',","\t133: \t\t\t'ntfmove'     : 'Move files',","\t134: \t\t\t'ntfprepare'  : 'Prepare to copy files',","\t135: \t\t\t'ntfrename'   : 'Rename files',","\t136: \t\t\t'ntfupload'   : 'Uploading files',","\t137: \t\t\t'ntfdownload' : 'Downloading files',","\t138: \t\t\t'ntfsave'     : 'Save files',","\t140: \t\t\t'ntfextract'  : 'Extracting files from archive',","\t141: \t\t\t'ntfsearch'   : 'Searching files',","\t197: \t\t\t'confirmRm'       : 'Are you sure you want to remove files?<br/>This cannot be undone!',","\t198: \t\t\t'confirmRepl'     : 'Replace old file with new one?',","\t210: \t\t\t'selectall'       : 'Select all files',","\t211: \t\t\t'selectfiles'     : 'Select file(s)',","\t212: \t\t\t'selectffile'     : 'Select first file',","\t213: \t\t\t'selectlfile'     : 'Select last file',","\t222: \t\t\t'files'           : 'Files',","\t233: \t\t\t'webfm'           : 'Web file manager',","\t250: \t\t\t'dropFiles'       : 'Drop files here',","\t252: \t\t\t'selectForUpload' : 'Select files to upload',","\t253: \t\t\t'moveFiles'       : 'Move files',","\t254: \t\t\t'copyFiles'       : 'Copy files',","\t257: \t\t\t'untitled file.txt' : 'untitled file.txt',","\t290: \t\t\t'kindTorrent'     : 'Bittorrent file',","\t297: \t\t\t'kindJAR'         : 'Java JAR file',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.nl.js:","\t37: \t\t\t'errNotFile'           : 'Object is geen bestand.',","\t45: \t\t\t'errFileNotFound'      : 'Bestand niet gevonden.',","\t49: \t\t\t'errMkfile'            : 'Kan bestand \"$1\" niet aanmaken.',","\t55: \t\t\t'errUploadNoFiles'     : 'Geen bestanden gevonden om te uploaden.',","\t57: \t\t\t'errFileMaxSize'       : 'Bestand overschrijdt de maximale grootte.',","\t82: \t\t\t'errFtpDownloadFile'   : 'Kan het bestand niet downloaden vanaf FTP: \"$1\"',","\t83: \t\t\t'errFtpUploadFile'     : 'Kan het bestand niet uploaden naar FTP: \"$1\"',","\t87: \t\t\t'errUploadFile'        : 'Kan \"$1\" niet uploaden',","\t99: \t\t\t'cmdgetfile'   : 'Kies bestanden',","\t104: \t\t\t'cmdmkfile'    : 'Nieuw tekstbestand',","\t131: \t\t\t'ntffile'     : 'Bezig met openen bestand',","\t134: \t\t\t'ntfmkfile'   : 'Bezig met Bestanden maken',","\t216: \t\t\t'selectfiles'     : 'Selecteer bestand(en)',","\t217: \t\t\t'selectffile'     : 'Selecteer eerste bestand',","\t218: \t\t\t'selectlfile'     : 'Selecteer laatste bestand',","\t227: \t\t\t'files'           : 'Bestanden',","\t255: \t\t\t'dropFiles'       : 'Sleep hier uw bestanden heen',","\t258: \t\t\t'moveFiles'       : 'Verplaats bestanden',","\t259: \t\t\t'copyFiles'       : 'Kopieer bestanden',","\t262: \t\t\t'untitled file.txt' : 'nieuw bestand.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.no.js:","\t35: \t\t\t'errNotFile'           : 'Objektet er ikke en fil.',","\t40: \t\t\t'errExists'            : 'Filen \"$1\" finnes allerede.',","\t41: \t\t\t'errInvName'           : 'Ugyldig filnavn.',","\t43: \t\t\t'errFileNotFound'      : 'Filen finnes ikke.',","\t45: \t\t\t'errPopup'             : 'Nettleseren din blokkerte et pop-up vindu. For å åpne filen må du aktivere pop-up i din nettlesers innstillinger.',","\t47: \t\t\t'errMkfile'            : 'Kunne ikke opprette filen \"$1\".',","\t49: \t\t\t'errCopyFrom'          : 'Kopiere filer fra \"$1\" er ikke tillatt.',","\t50: \t\t\t'errCopyTo'            : 'Kopiere filer til \"$1\" er ikke tillatt.',","\t53: \t\t\t'errUploadNoFiles'     : 'Ingen filer funnet til opplasting.',","\t55: \t\t\t'errFileMaxSize'       : 'Filen vergår maksimum tillatt størrelse.',","\t56: \t\t\t'errUploadMime'        : 'Filtypen ikke tillatt.',","\t63: \t\t\t'errExtract'           : 'Kunne ikke pakke ut filer fra \"$1\".',","\t66: \t\t\t'errNoArchive'         : 'Filen er ikke et arkiv eller et arkiv som ikke er støttet.',","\t76: \t\t\t'cmdedit'      : 'Rediger fil',","\t77: \t\t\t'cmdextract'   : 'Pakk ut filer fra arkiv',","\t79: \t\t\t'cmdgetfile'   : 'Velg filer',","\t84: \t\t\t'cmdmkfile'    : 'Ny tekst-fil',","\t91: \t\t\t'cmdsearch'    : 'Find filer',","\t93: \t\t\t'cmdupload'    : 'Last opp filer',","\t106: \t\t\t'ntffile'     : 'Åpne fil',","\t109: \t\t\t'ntfmkfile'   : 'Oppretter filer',","\t110: \t\t\t'ntfrm'       : 'Sletter filer',","\t111: \t\t\t'ntfcopy'     : 'Kopierer filer',","\t112: \t\t\t'ntfmove'     : 'Flytter filer',","\t113: \t\t\t'ntfprepare'  : 'Gjør klar til kopiering av filer',","\t114: \t\t\t'ntfrename'   : 'Gir nytt navn til filer',","\t115: \t\t\t'ntfupload'   : 'Laster opp filer',","\t116: \t\t\t'ntfdownload' : 'Laster ned filer',","\t117: \t\t\t'ntfsave'     : 'Lagrer filer',","\t119: \t\t\t'ntfextract'  : 'Pakker ut filer fra arkiv',","\t120: \t\t\t'ntfsearch'   : 'Søker i filer',","\t142: \t\t\t'confirmRm'       : 'Er du sikker på at du ønsker å slette filene?',","\t143: \t\t\t'confirmRepl'     : 'Erstatt fil?',","\t155: \t\t\t'selectall'       : 'Velg alle filene',","\t156: \t\t\t'selectfiles'     : 'Velg fil(er)',","\t157: \t\t\t'selectffile'     : 'Velg første fil',","\t158: \t\t\t'selectlfile'     : 'Velg siste fil',","\t167: \t\t\t'files'           : 'Filer',","\t174: \t\t\t'selected'        : 'valgte filer',","\t178: \t\t\t'webfm'           : 'Web-filbehandler',","\t195: \t\t\t'dropFiles'       : 'Slipp filer her',","\t197: \t\t\t'selectForUpload' : 'Velg filer til opplasting',","\t198: \t\t\t'moveFiles'       : 'Flytt filer',","\t199: \t\t\t'copyFiles'       : 'Kopier filer',","\t207: \t\t\t'kindApp'         : 'Programfil',","\t216: \t\t\t'kindTorrent'     : 'Bittorrent file',","\t223: \t\t\t'kindJAR'         : 'Java JAR file',","\t269: \t\t\t'kindVideoDV'     : 'DV film',","\t270: \t\t\t'kindVideoMPEG'   : 'MPEG film',","\t271: \t\t\t'kindVideoMPEG4'  : 'MPEG-4 film',","\t272: \t\t\t'kindVideoAVI'    : 'AVI film',","\t273: \t\t\t'kindVideoMOV'    : 'Quick Time film',","\t274: \t\t\t'kindVideoWM'     : 'Windows Media film',","\t275: \t\t\t'kindVideoFlash'  : 'Flash film',","\t276: \t\t\t'kindVideoMKV'    : 'Matroska film',","\t277: \t\t\t'kindVideoOGG'    : 'Ogg film'","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.pl.js:","\t38: \t\t\t'errNotFile'           : 'Obiekt nie jest plikiem.',","\t46: \t\t\t'errFileNotFound'      : 'Plik nie został znaleziony.',","\t50: \t\t\t'errMkfile'            : 'Nie można utworzyć pliku \"$1\".',","\t56: \t\t\t'errUploadNoFiles'     : 'Nie znaleziono plików do wysłania.',","\t58: \t\t\t'errFileMaxSize'       : 'Plik przekracza dopuszczalny rozmiar.',","\t87: \t\t\t'cmdgetfile'   : 'Wybierz pliki',","\t92: \t\t\t'cmdmkfile'    : 'Nowy plik tekstowy',","\t117: \t\t\t'ntffile'     : 'Otwórz plik',","\t120: \t\t\t'ntfmkfile'   : 'Tworzenie plików',","\t204: \t\t\t'selectfiles'     : 'Zaznacz plik(i)',","\t205: \t\t\t'selectffile'     : 'Zaznacz pierwszy plik',","\t206: \t\t\t'selectlfile'     : 'Zaznacz ostatni plik',","\t215: \t\t\t'files'           : 'Pliki',","\t243: \t\t\t'dropFiles'       : 'Upuść pliki tutaj',","\t246: \t\t\t'moveFiles'       : 'Przenieś pliki',","\t247: \t\t\t'copyFiles'       : 'Kopiuj pliki',","\t250: \t\t\t'untitled file.txt' : 'nowy plik.txt',","\t286: \t\t\t'kindJAR'         : 'Java JAR file',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.pt_BR.js:","\t37: \t\t\t'errNotFile'           : 'Objeto não é um arquivo.',","\t45: \t\t\t'errFileNotFound'      : 'Arquivo não encontrado.',","\t49: \t\t\t'errMkfile'            : 'Incapaz de criar o arquivo \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : 'Não foi encontrado nenhum arquivo para upload.',","\t57: \t\t\t'errFileMaxSize'       : 'Arquivo excede o tamanho máximo permitido.',","\t77: \t\t\t'errFtpDownloadFile'   : 'Não foi possível fazer o download do arquivo do FTP: \"$1\"',","\t78: \t\t\t'errFtpUploadFile'     : 'Não foi possível fazer o upload do arquivo para o FTP: \"$1\"',","\t88: \t\t\t'errUploadFile'        : 'Não foi possível fazer o upload \"$1\".',","\t100: \t\t\t'cmdgetfile'   : 'Selecionar arquivos',","\t105: \t\t\t'cmdmkfile'    : 'Novo arquivo de texto',","\t131: \t\t\t'ntffile'     : 'Abrir arquivo',","\t134: \t\t\t'ntfmkfile'   : 'Criar arquivos',","\t190: \t\t\t'selectfiles'     : 'Selecionar arquivo(s)',","\t191: \t\t\t'selectffile'     : 'Selecionar primeiro arquivo',","\t192: \t\t\t'selectlfile'     : 'Slecionar último arquivo',","\t201: \t\t\t'files'           : 'Arquivos',","\t229: \t\t\t'dropFiles'       : 'Solte os arquivos aqui',","\t232: \t\t\t'moveFiles'       : 'Mover arquivos',","\t233: \t\t\t'copyFiles'       : 'Copiar arquivos',","\t320: \t\t\t'kindVideoDV'     : 'DV filme',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.ru.js:","\t37: \t\t\t'errNotFile'           : 'Объект не является файлом.',","\t45: \t\t\t'errFileNotFound'      : 'Файл не найден.',","\t49: \t\t\t'errMkfile'            : 'Ошибка создания файла \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : 'Отсутствуют загруженые файлы.',","\t57: \t\t\t'errFileMaxSize'       : 'Размер файла превышает допустимый.',","\t82: \t\t\t'errFtpDownloadFile'   : 'Ошибка при скачивании файла с FTP: \"$1\"',","\t83: \t\t\t'errFtpUploadFile'     : 'Ошибка при загрузке файла на FTP: \"$1\"',","\t88: \t\t\t'errUploadFile'        : 'Невозможно загрузить файл \"$1\"',","\t101: \t\t\t'cmdgetfile'   : 'Выбрать',","\t106: \t\t\t'cmdmkfile'    : 'Новый файл',","\t131: \t\t\t'ntffile'     : 'Открытие файла',","\t134: \t\t\t'ntfmkfile'   : 'Создание файла',","\t215: \t\t\t'selectfiles'     : 'Выбрать файл(ы)',","\t216: \t\t\t'selectffile'     : 'Выбрать первый файл',","\t217: \t\t\t'selectlfile'     : 'Выбрать последний файл',","\t226: \t\t\t'files'           : 'Файлы',","\t254: \t\t\t'dropFiles'       : 'Бросить файлы',","\t257: \t\t\t'moveFiles'       : 'Перемещение файлов',","\t258: \t\t\t'copyFiles'       : 'Копирование файлов',","\t261: \t\t\t'untitled file.txt' : 'новый файл.txt',","\t355: \t\t\t,'volume_files' : 'Файлы '","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.sl.js:","\t37: \t\t\t'errNotFile'           : 'Objekt ni datoteka.',","\t45: \t\t\t'errFileNotFound'      : 'Datoteke nisem našel.',","\t49: \t\t\t'errMkfile'            : 'Ni možno dodati datoteke \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : 'Ni datotek za nalaganje (upload).',","\t57: \t\t\t'errFileMaxSize'       : 'Datoteka presega največjo dovoljeno velikost.',","\t86: \t\t\t'cmdgetfile'   : 'Izberi datoteke',","\t91: \t\t\t'cmdmkfile'    : 'Nova datoteka',","\t116: \t\t\t'ntffile'     : 'Odpri datoteko',","\t119: \t\t\t'ntfmkfile'   : 'Ustvarjam datoteke',","\t202: \t\t\t'selectfiles'     : 'Izberi datotek(o)e',","\t203: \t\t\t'selectffile'     : 'Izberi prvo datoteko',","\t204: \t\t\t'selectlfile'     : 'Izberi zadnjo datoteko',","\t213: \t\t\t'files'           : 'Datoteke',","\t241: \t\t\t'dropFiles'       : 'Datoteke spusti tukaj',","\t244: \t\t\t'moveFiles'       : 'Premakni datoteke',","\t245: \t\t\t'copyFiles'       : 'Kopiraj datoteke',","\t248: \t\t\t'untitled file.txt' : 'brez imena file.txt',","\t329: \t\t\t'kindVideoDV'     : 'DV film',","\t330: \t\t\t'kindVideoMPEG'   : 'MPEG film',","\t331: \t\t\t'kindVideoMPEG4'  : 'MPEG-4 film',","\t332: \t\t\t'kindVideoAVI'    : 'AVI film',","\t333: \t\t\t'kindVideoMOV'    : 'Quick Time film',","\t334: \t\t\t'kindVideoWM'     : 'Windows Media film',","\t335: \t\t\t'kindVideoFlash'  : 'Flash film',","\t336: \t\t\t'kindVideoMKV'    : 'Matroska film',","\t337: \t\t\t'kindVideoOGG'    : 'Ogg film'","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.sv.js:","\t37: \t\t\t'errNotFile'           : 'Objektet är inte en fil.',","\t42: \t\t\t'errExists'            : 'Fil med namn \"$1\" finns redan.',","\t43: \t\t\t'errInvName'           : 'Ogiltigt filnamn.',","\t45: \t\t\t'errFileNotFound'      : 'Filen hittades inte.',","\t47: \t\t\t'errPopup'             : 'Webbläsaren hindrade popup-fönstret att öppnas. Ändra i webbläsarens inställningar för att kunna öppna filen.',","\t49: \t\t\t'errMkfile'            : 'Kan inte skapa filen \"$1\".',","\t51: \t\t\t'errCopyFrom'          : 'Kopiera filer från volym \"$1\" tillåts inte.',","\t52: \t\t\t'errCopyTo'            : 'Kopiera filer till volym \"$1\" tillåts inte.',","\t55: \t\t\t'errUploadNoFiles'     : 'Inga filer hittades för uppladdning.',","\t57: \t\t\t'errFileMaxSize'       : 'Filen överskrider den högsta tillåtna storleken.',","\t58: \t\t\t'errUploadMime'        : 'Otillåten filtyp.',","\t65: \t\t\t'errExtract'           : 'Kan inte packa upp filen från \"$1\".',","\t68: \t\t\t'errNoArchive'         : 'Filen är inte av typen arkiv.',","\t71: \t\t\t'errArcSymlinks'       : 'Av säkerhetsskäl nekas arkivet att packas upp då det innehåller symboliska länkar eller filer med ej tillåtna namn.', // edited 24.06.2012","\t72: \t\t\t'errArcMaxSize'        : 'Arkivfiler överskrider största tillåtna storlek.',","\t74: \t\t\t'errUsupportType'      : 'Filtypen stöds inte.',","\t75: \t\t\t'errNotUTF8Content'    : 'Filen \"$1\" är inte i UTF-8 och kan inte redigeras.',  // added 9.11.2011","\t87: \t\t\t'cmdedit'      : 'Redigera fil',","\t88: \t\t\t'cmdextract'   : 'Extrahera filer från arkiv',","\t90: \t\t\t'cmdgetfile'   : 'Välj filer',","\t95: \t\t\t'cmdmkfile'    : 'Ny textfil',","\t102: \t\t\t'cmdsearch'    : 'Hitta filer',","\t104: \t\t\t'cmdupload'    : 'Ladda upp filer',","\t120: \t\t\t'ntffile'     : 'Öppnar fil',","\t123: \t\t\t'ntfmkfile'   : 'Skapar fil',","\t124: \t\t\t'ntfrm'       : 'Tar bort filer',","\t125: \t\t\t'ntfcopy'     : 'Kopierar filer',","\t126: \t\t\t'ntfmove'     : 'Flyttar filer',","\t127: \t\t\t'ntfprepare'  : 'Förbereder att flytta filer',","\t128: \t\t\t'ntfrename'   : 'Döper om filer',","\t129: \t\t\t'ntfupload'   : 'Laddar upp filer',","\t130: \t\t\t'ntfdownload' : 'Laddar ner filer',","\t131: \t\t\t'ntfsave'     : 'Sparar filer',","\t133: \t\t\t'ntfextract'  : 'Extraherar filer från arkiv',","\t134: \t\t\t'ntfsearch'   : 'Söker filer',","\t195: \t\t\t'confirmRm'       : 'Är du säker på att du vill ta bort filer? <br/> Detta kan inte ångras!',","\t196: \t\t\t'confirmRepl'     : 'Ersätt den gamla filen med en ny?',","\t208: \t\t\t'selectall'       : 'Välj alla filer',","\t209: \t\t\t'selectfiles'     : 'Välj fil(er)',","\t210: \t\t\t'selectffile'     : 'Välj första filen',","\t211: \t\t\t'selectlfile'     : 'Välj sista filen',","\t220: \t\t\t'files'           : 'Filer',","\t231: \t\t\t'webfm'           : 'Webbfilhanterare',","\t248: \t\t\t'dropFiles'       : 'Släpp filerna här',","\t250: \t\t\t'selectForUpload' : 'Välj filer att ladda upp',","\t251: \t\t\t'moveFiles'       : 'Flytta filer',","\t252: \t\t\t'copyFiles'       : 'Kopiera filer',","\t255: \t\t\t'untitled file.txt' : 'namnlös fil.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.tr.js:","\t37: \t\t\t'errNotFile'           : 'Obje Dosya değil.',","\t45: \t\t\t'errFileNotFound'      : 'Dosya bulunamadı.',","\t49: \t\t\t'errMkfile'            : '\"$1\" dosya oluşturulamadı.',","\t55: \t\t\t'errUploadNoFiles'     : 'Göndermek için dosya bulunamadı.',","\t57: \t\t\t'errFileMaxSize'       : 'Dosya izin verilen boyuttan büyük.',","\t86: \t\t\t'cmdgetfile'   : 'Dosyayı Seç',","\t91: \t\t\t'cmdmkfile'    : 'Yeni Boş Dosya',","\t116: \t\t\t'ntffile'     : 'Dosya Aç',","\t119: \t\t\t'ntfmkfile'   : 'Dosya Oluşturuluyor',","\t202: \t\t\t'selectfiles'     : 'Dosyaları Seç',","\t203: \t\t\t'selectffile'     : 'İlk Dosyayı Seç',","\t204: \t\t\t'selectlfile'     : 'Son Dosyayı Seç',","\t213: \t\t\t'files'           : 'Dosyalar',","\t241: \t\t\t'dropFiles'       : 'Dosyaları buraya sürükleyin',","\t244: \t\t\t'moveFiles'       : 'Dosyaları Taşı',","\t245: \t\t\t'copyFiles'       : 'Dosyaları Kopyala',","\t248: \t\t\t'untitled file.txt' : 'basliksiz_dosya.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.vi.js:","\t37:         'errNotFile'           : 'Object is not a file.',","\t42:         'errExists'            : 'File named \"$1\" already exists.',","\t43:         'errInvName'           : 'Invalid file name.',","\t45:         'errFileNotFound'      : 'File not found.',","\t47:         'errPopup'             : 'Browser prevented opening popup window. To open file enable it in browser options.',","\t49:         'errMkfile'            : 'Unable to create file \"$1\".',","\t51:         'errCopyFrom'          : 'Copying files from volume \"$1\" not allowed.',","\t52:         'errCopyTo'            : 'Copying files to volume \"$1\" not allowed.',","\t55:         'errUploadNoFiles'     : 'No files found for upload.',","\t57:         'errFileMaxSize'       : 'File exceeds maximum allowed size.',","\t58:         'errUploadMime'        : 'File type not allowed.',","\t65:         'errExtract'           : 'Unable to extract files from \"$1\".',","\t68:         'errNoArchive'         : 'File is not archive or has unsupported archive type.',","\t72:         'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t74:         'errUsupportType'      : 'Unsupported file type.',","\t86:         'cmdgetfile'   : 'Chọn tập tin',","\t91:         'cmdmkfile'    : 'Tạo tập tin Text',","\t116:         'ntffile'     : 'Mở tập tin',","\t119:         'ntfmkfile'   : 'Tạo tập tin',","\t188:         'confirmRm'       : 'Are you sure you want to remove files?<br/>This cannot be undone!',","\t189:         'confirmRepl'     : 'Replace old file with new one?',","\t201:         'selectall'       : 'Select all files',","\t202:         'selectfiles'     : 'Select file(s)',","\t203:         'selectffile'     : 'Select first file',","\t204:         'selectlfile'     : 'Select last file',","\t213:         'files'           : 'Files',","\t224:         'webfm'           : 'Web file manager',","\t241:         'dropFiles'       : 'Drop files here',","\t243:         'selectForUpload' : 'Select files to upload',","\t244:         'moveFiles'       : 'Move files',","\t245:         'copyFiles'       : 'Copy files',","\t248:         'untitled file.txt' : 'untitled file.txt',","\t276:         'kindTorrent'     : 'Bittorrent file',","\t283:         'kindJAR'         : 'Java JAR file',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.zh_CN.js:","\t38: \t\t\t'errNotFile'           : '对象不是文件.',","\t46: \t\t\t'errFileNotFound'      : '未找到文件.',","\t50: \t\t\t'errMkfile'            : '不能创建文件 \"$1\".',","\t55: \t\t\t'errUploadFile'        : '无法上传 \"$1\".',","\t56: \t\t\t'errUploadNoFiles'     : '未找到要上传的文件.',","\t58: \t\t\t'errUploadFileSize'    : '文件超过了允许的最大大小.',","\t94: \t\t\t'cmdgetfile'   : '选择文件',","\t99: \t\t\t'cmdmkfile'    : '新建文本文件',","\t125: \t\t\t'ntffile'     : '打开文件',","\t128: \t\t\t'ntfmkfile'   : '创建文件',","\t213: \t\t\t'selectfiles'     : '选择文件',","\t214: \t\t\t'selectffile'     : '选择第一个文件',","\t215: \t\t\t'selectlfile'     : '选择最后一个文件',","\t224: \t\t\t'files'           : '文件',","\t252: \t\t\t'dropFiles'       : '把文件拖到这里',","\t255: \t\t\t'moveFiles'       : '移动文件',","\t256: \t\t\t'copyFiles'       : '复制文件',","\t259: \t\t\t'untitled file.txt' : '未命名文件.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.zh_TW.js:","\t37: \t\t\t'errNotFile'           : '非檔案.',","\t45: \t\t\t'errFileNotFound'      : '未找到檔案.',","\t49: \t\t\t'errMkfile'            : '不能建立檔案 \"$1\".',","\t54: \t\t\t'errUploadFile'        : '無法上傳 \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : '未找到要上傳的檔案.',","\t57: \t\t\t'errUploadFileSize'    : '檔案超過了最大允許大小.',","\t93: \t\t\t'cmdgetfile'   : '選擇檔案',","\t98: \t\t\t'cmdmkfile'    : '建立文字檔案',","\t124: \t\t\t'ntffile'     : '打開檔案',","\t127: \t\t\t'ntfmkfile'   : '建立檔案',","\t212: \t\t\t'selectfiles'     : '選擇檔案',","\t213: \t\t\t'selectffile'     : '選擇第一個檔案',","\t214: \t\t\t'selectlfile'     : '選擇最後一個檔案',","\t223: \t\t\t'files'           : '檔案',","\t251: \t\t\t'dropFiles'       : '把檔案拖到此處',","\t254: \t\t\t'moveFiles'       : '移動檔案',","\t255: \t\t\t'copyFiles'       : '複製檔案',","\t258: \t\t\t'untitled file.txt' : '未命名檔案.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/proxy/elFinderSupportVer1.js:","\t62: \t\t\t\topts.data.current = fm.file(opts.data.target).phash;","\t66: \t\t\t\topts.data.current = fm.file(opts.data.target).phash;","\t70: \t\t\t\topts.data.current = fm.file(opts.data.targets[0]).phash;","\t75: \t\t\t\topts.data.current = fm.file(opts.data.target).phash;","\t81: \t\t\t\t\t$.ajax($.extend(_opts, {data : {cmd : 'duplicate', target : hash, current : fm.file(hash).phash}}))","\t98: \t\t\tcase 'mkfile':","\t143: \t// \t'File not found'                                   : 'File not found.',","\t144: \t// \t'Invalid name'                                     : 'Invalid file name.',","\t145: \t// \t'File or folder with the same name already exists' : 'File named \"$1\" already exists in this location.',","\t146: \t// \t'Not allowed file type'                            : 'Not allowed file type.',","\t147: \t// \t'File exceeds the maximum allowed filesize'        : 'File exceeds maximum allowed size.',","\t150: \t// \t'Unable to extract files from archive'             : 'Unable to extract files from \"$1\".'","\t155: \t\t\tfiles = {}, ","\t156: \t\t\tfilter = function(file) { return file && file.hash && file.name && file.mime ? file : null; },","\t183: \t\t\tphash = this.fm.file(data.target.hash).phash;","\t184: \t\t\treturn {changed : [this.normalizeFile(data.target, phash)]};","\t190: \t\t\t$.each(this.normalizeTree(data.tree), function(i, file) {","\t191: \t\t\t\tfiles[file.hash] = file;","\t195: \t\t$.each(data.cdc||[], function(i, file) {","\t196: \t\t\tvar hash = file.hash;","\t198: \t\t\tif (files[hash]) {","\t199: \t\t\t\tfiles[hash].date   = file.date;","\t200: \t\t\t\tfiles[hash].locked = file.hash == phash ? true : file.rm === void(0) ? false : !file.rm;","\t202: \t\t\t\tfiles[hash] = self.normalizeFile(file, phash, data.tmb);","\t207: \t\t\t$.each(this.fm.files(), function(hash, file) {","\t208: \t\t\t\tif (!files[hash] && file.phash != phash && file.mime == 'directory') {","\t209: \t\t\t\t\tfiles[hash] = file;","\t216: \t\t\t\t\tcwd     : files[phash] || this.normalizeFile(data.cwd),","\t217: \t\t\t\t\tfiles   : $.map(files, function(f) { return f }),","\t231: \t\t}, this.fm.diff($.map(files, filter)));","\t249: \t\t\t\t\tresult.push(self.normalizeFile(dir, phash))","\t260: \t * Convert file info from old api format into new one","\t262: \t * @param  Object  file","\t266: \tthis.normalizeFile = function(file, phash, tmb) {","\t267: \t\tvar mime = file.mime || 'directory',","\t268: \t\t\tsize = mime == 'directory' && !file.linkTo ? 0 : file.size,","\t270: \t\t\t\turl    : file.url,","\t271: \t\t\t\thash   : file.hash,","\t273: \t\t\t\tname   : file.name,","\t275: \t\t\t\tdate   : file.date || 'unknown',","\t277: \t\t\t\tread   : file.read,","\t278: \t\t\t\twrite  : file.write,","\t279: \t\t\t\tlocked : !phash ? true : file.rm === void(0) ? false : !file.rm","\t282: \t\tif (file.mime == 'application/x-empty') {","\t285: \t\tif (file.linkTo) {","\t286: \t\t\tinfo.alias = file.linkTo;","\t289: \t\tif (file.linkTo) {","\t290: \t\t\tinfo.linkTo = file.linkTo;","\t293: \t\tif (file.tmb) {","\t294: \t\t\tinfo.tmb = file.tmb;","\t300: \t\tif (file.dirs && file.dirs.length) {","\t303: \t\tif (file.dim) {","\t304: \t\t\tinfo.dim = file.dim;","\t306: \t\tif (file.resize) {","\t307: \t\t\tinfo.resize = file.resize;","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/cwd.js:","\t46: \t\t\t * File css class","\t50: \t\t\tclFile       = fm.res(c, 'cwdfile'),","\t57: \t\t\tfileSelector = '.'+clFile,","\t102: \t\t\t * Css class for temporary nodes (for mkdir/mkfile) commands","\t106: \t\t\tclTmp = clFile+'-tmp',","\t125: \t\t\t * File templates","\t130: \t\t\t\ticon : '<div id=\"{hash}\" class=\"'+clFile+' {permsclass} {dirclass} ui-corner-all\" title=\"{tooltip}\"><div class=\"elfinder-cwd-file-wrapper ui-corner-all\"><div class=\"elfinder-cwd-icon {mime} ui-corner-all\" unselectable=\"on\" {style}/>{marker}</div><div class=\"elfinder-cwd-filename\" title=\"{name}\">{name}</div></div>',","\t131: \t\t\t\trow  : '<tr id=\"{hash}\" class=\"'+clFile+' {permsclass} {dirclass}\" title=\"{tooltip}\"><td><div class=\"elfinder-cwd-file-wrapper\"><span class=\"elfinder-cwd-icon {mime}\"/>{marker}<span class=\"elfinder-cwd-filename\">{name}</span></div></td><td>{perms}</td><td>{date}</td><td>{size}</td><td>{kind}</td></tr>'","\t175: \t\t\t * Return file html","\t177: \t\t\t * @param  Object  file info","\t189: \t\t\t * Flag. Required for msie to avoid unselect files on dragstart","\t196: \t\t\t * Move selection to prev/next file","\t215: \t\t\t\t\ts = sel.filter(prev ? ':first' : ':last');","\t222: \t\t\t\t\t\t// find real prevoius file","\t225: \t\t\t\t\t\t// find up/down side file in icons view","\t246: \t\t\t\t\t\t\t// there is row before last one - select last file","\t257: \t\t\t\t\t// there are no selected file - select first/last one","\t263: \t\t\t\t\t\t// append new files to selected","\t266: \t\t\t\t\t\t// unselect selected files","\t269: \t\t\t\t\t// select file(s)","\t272: \t\t\t\t\tscrollToView(n.filter(prev ? ':first' : ':last'));","\t278: \t\t\tselectedFiles = [],","\t280: \t\t\tselectFile = function(hash) {","\t288: \t\t\t\tselectedFiles = $.map(fm.files(), function(f) { return f.phash == phash ? f.hash : null });","\t293: \t\t\t * Unselect all files","\t298: \t\t\t\tselectedFiles = [];","\t304: \t\t\t * Return selected files hashes list","\t309: \t\t\t\treturn selectedFiles;","\t313: \t\t\t * Fire elfinder \"select\" event and pass selected files to it","\t318: \t\t\t\tfm.trigger('select', {selected : selectedFiles});","\t322: \t\t\t * Scroll file to set it visible","\t324: \t\t\t * @param DOMElement  file/dir node","\t341: \t\t\t * Files we get from server but not show yet","\t350: \t\t\t * @param String  file hash","\t373: \t\t\t * Lazy load - append to cwd not shown files","\t385: \t\t\t\t\tfiles;","\t392: \t\t\t\t\t&& (files = buffer.splice(0, fm.options.showFiles)).length) {","\t394: \t\t\t\t\thtml = $.map(files, function(f) {","\t421: \t\t\t\tif (selectedFiles.length) {","\t425: \t\t\t\t\t\t$.inArray(id, selectedFiles) !== -1 && $(this).trigger(evtSelect);","\t433: \t\t\t * Do not add class on childs file over","\t440: \t\t\t\t\t$.each(ui.helper.data('files'), function(i, h) {","\t441: \t\t\t\t\t\tif (fm.file(h).phash == hash) {","\t461: \t\t\t * Preload required thumbnails and on load add css to files.","\t462: \t\t\t * Return false if required file is not visible yet (in buffer) -","\t465: \t\t\t * @param  Object  file hash -> thumbnail map","\t496: \t\t\t * @param  Array|Boolean  files hashes list for new api | true for old api","\t499: \t\t\tloadThumbnails = function(files) {","\t515: \t\t\t\ttmbs = tmbs = files.splice(0, tmbNum);","\t523: \t\t\t\t\t\t\tloadThumbnails(files);","\t530: \t\t\t * Add new files to cwd/buffer","\t532: \t\t\t * @param  Array  new files","\t535: \t\t\tadd = function(files) {","\t537: \t\t\t\t\tl        = files.length, ","\t541: \t\t\t\t\tfindNode = function(file) {","\t542: \t\t\t\t\t\tvar pointer = cwd.find('[id]:first'), file2;","\t545: \t\t\t\t\t\t\tfile2 = fm.file(pointer.attr('id'));","\t546: \t\t\t\t\t\t\tif (!pointer.is('.elfinder-cwd-parent') && file2 && fm.compare(file, file2) < 0) {","\t552: \t\t\t\t\tfindIndex = function(file) {","\t556: \t\t\t\t\t\t\tif (fm.compare(file, buffer[i]) < 0) {","\t562: \t\t\t\t\tfile, hash, node, ndx;","\t566: \t\t\t\t\tfile = files[l];","\t567: \t\t\t\t\thash = file.hash;","\t573: \t\t\t\t\tif ((node = findNode(file)) && node.length) {","\t574: \t\t\t\t\t\tnode.before(itemhtml(file)); ","\t575: \t\t\t\t\t} else if ((ndx = findIndex(file)) >= 0) {","\t576: \t\t\t\t\t\tbuffer.splice(ndx, 0, file);","\t578: \t\t\t\t\t\tplace.append(itemhtml(file));","\t582: \t\t\t\t\t\tif (file.mime == 'directory') {","\t584: \t\t\t\t\t\t} else if (file.tmb) {","\t585: \t\t\t\t\t\t\tfile.tmb === 1 ? ltmb.push(hash) : (atmb[hash] = file.tmb);","\t596: \t\t\t * Remove files from cwd/buffer","\t598: \t\t\t * @param  Array  files hashes","\t601: \t\t\tremove = function(files) {","\t602: \t\t\t\tvar l = files.length, hash, n, ndx;","\t605: \t\t\t\t\thash = files[l];","\t629: \t\t\t * @param  Array  files","\t632: \t\t\tcontent = function(files, any) {","\t634: \t\t\t\t// console.log(files)","\t640: \t\t\t\t\tcwd.children('table,'+fileSelector).remove();","\t652: \t\t\t\tbuffer = $.map(files, function(f) { return any || f.phash == phash ? f : null; });","\t654: \t\t\t\tbuffer = fm.sortFiles(buffer);","\t661: \t\t\t\t\tvar parent = $.extend(true, {}, fm.file(phash), {name : '..', mime : 'directory'});","\t686: \t\t\t\t.delegate(fileSelector, 'click.'+fm.namespace, function(e) {","\t709: \t\t\t\t.delegate(fileSelector, 'dblclick.'+fm.namespace, function(e) {","\t710: \t\t\t\t\tfm.dblclick({file : this.id});","\t713: \t\t\t\t.delegate(fileSelector, 'mouseenter.'+fm.namespace, function(e) {","\t721: \t\t\t\t// add hover class to selected file","\t722: \t\t\t\t.delegate(fileSelector, evtSelect, function(e) {","\t728: \t\t\t\t\t\tif ($.inArray(id, selectedFiles) === -1) {","\t729: \t\t\t\t\t\t\tselectedFiles.push(id);","\t733: \t\t\t\t// remove hover class from unselected file","\t734: \t\t\t\t.delegate(fileSelector, evtUnselect, function(e) {","\t741: \t\t\t\t\t\tndx = $.inArray(id, selectedFiles);","\t743: \t\t\t\t\t\t\tselectedFiles.splice(ndx, 1);","\t748: \t\t\t\t// disable files wich removing or moving","\t749: \t\t\t\t.delegate(fileSelector, evtDisable, function() {","\t757: \t\t\t\t// if any files was not removed/moved - unlock its","\t758: \t\t\t\t.delegate(fileSelector, evtEnable, function() {","\t765: \t\t\t\t.delegate(fileSelector, 'scrolltoview', function() {","\t768: \t\t\t\t.delegate(fileSelector, 'hover', function(e) {","\t772: \t\t\t\t\tvar file = $(e.target).closest('.'+clFile);","\t774: \t\t\t\t\tif (file.length) {","\t777: \t\t\t\t\t\tif (!file.is('.'+clDisabled)) {","\t778: \t\t\t\t\t\t\tif (!file.is('.'+clSelected)) {","\t781: \t\t\t\t\t\t\t\tfile.trigger(evtSelect);","\t785: \t\t\t\t\t\t\t\t'type'    : 'files',","\t799: \t\t\t\t// make files selectable","\t801: \t\t\t\t\tfilter     : fileSelector,","\t808: \t\t\t\t// prepend fake file/dir","\t809: \t\t\t\t.bind('create.'+fm.namespace, function(e, file) {","\t812: \t\t\t\t\t\tfile = $(itemhtml(file)).addClass(clTmp);","\t817: \t\t\t\t\t\tp.after(file);","\t819: \t\t\t\t\t\tparent.prepend(file);","\t824: \t\t\t\t// unselect all selected files","\t826: \t\t\t\t.bind('selectfile', function(e, id) {","\t882: \t\t\t\te.dataTransfer && e.dataTransfer.files &&  e.dataTransfer.files.length && fm.exec('upload', {files : e.dataTransfer.files})//fm.upload({files : e.dataTransfer.files});","\t888: \t\t\t\tcontent(e.data.files);","\t891: \t\t\t\tlastSearch = e.data.files;","\t898: \t\t\t\t\tcontent(fm.files());","\t905: \t\t\t\tcontent(query ? lastSearch : fm.files(), !!query);","\t913: \t\t\t\t\tcontent(fm.files());","\t916: \t\t\t\t\t\tselectFile(h);","\t924: \t\t\t\t\tfiles = query","\t928: \t\t\t\tadd(files);","\t933: \t\t\t\t\tfiles;","\t936: \t\t\t\t\t$.each(e.data.changed || [], function(i, file) {","\t937: \t\t\t\t\t\tremove([file.hash]);","\t938: \t\t\t\t\t\tif (file.name.indexOf(query) !== -1) {","\t939: \t\t\t\t\t\t\tadd([file]);","\t940: \t\t\t\t\t\t\t$.inArray(file.hash, sel) !== -1 && selectFile(file.hash);","\t944: \t\t\t\t\t$.each($.map(e.data.changed || [], function(f) { return f.phash == phash ? f : null; }), function(i, file) {","\t945: \t\t\t\t\t\tremove([file.hash]);","\t946: \t\t\t\t\t\tadd([file]);","\t947: \t\t\t\t\t\t$.inArray(file.hash, sel) !== -1 && selectFile(file.hash);","\t965: \t\t\t// select dragged file if no selected, disable selectable","\t970: \t\t\t\tif (target.is(fileSelector)) {","\t988: \t\t\t.bind('lockfiles unlockfiles', function(e) {","\t989: \t\t\t\tvar event = e.type == 'lockfiles' ? evtDisable : evtEnable,","\t990: \t\t\t\t\tfiles = e.data.files || [], ","\t991: \t\t\t\t\tl     = files.length;","\t994: \t\t\t\t\tcwd.find('#'+files[l]).trigger(event);","\t998: \t\t\t// select new files after some actions","\t999: \t\t\t.bind('mkdir mkfile duplicate upload rename archive extract', function(e) {","\t1000: \t\t\t\tvar phash = fm.cwd().hash, files;","\t1004: \t\t\t\t$.each(e.data.added || [], function(i, file) { ","\t1005: \t\t\t\t\tfile && file.phash == phash && selectFile(file.hash);","\t1016: \t\t\t\tdescription : 'selectfiles',","\t1022: \t\t\t\tdescription : 'selectffile',","\t1031: \t\t\t\tdescription : 'selectlfile',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/dialog.js:","\t26: \tthis.filter(':not(.ui-dialog-content)').each(function() {","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/overlay.js:","\t4: \tthis.filter(':not(.elfinder-overlay)').each(function() {","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/path.js:","\t24: \t\t\t\t\tdirs.push('<a href=\"#'+hash+'\">'+fm.escape(fm.file(hash).name)+'</a>');","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/places.js:","\t194: \t\t\t\t\taccept     : '.elfinder-cwd-file-wrapper,.elfinder-tree-dir,.elfinder-cwd-file',","\t199: \t\t\t\t\t\t$.each(ui.helper.data('files'), function(i, hash) {","\t200: \t\t\t\t\t\t\tvar dir = fm.file(hash);","\t214: \t\t// on fm load - show places and load files from backend","\t233: \t\t\t\t\t$.each(data.files, function(i, file) {","\t234: \t\t\t\t\t\tfile.mime == 'directory' && add(file);","\t254: \t\t\t\t$.each(e.data.changed, function(i, file) {","\t255: \t\t\t\t\tif ($.inArray(file.hash, dirs) !== -1) {","\t256: \t\t\t\t\t\tremove(file.hash);","\t257: \t\t\t\t\t\tfile.mime == 'directory' && add(file);","\t271: \t\t\t\t\t\t$.each(data.files || [], function(i, file) {","\t272: \t\t\t\t\t\t\tif ($.inArray(file.hash, dirs) === -1) {","\t273: \t\t\t\t\t\t\t\tremove(file.hash);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/sortbutton.js:","\t42: \t\t\t\t\t.filter('[rel=\"'+fm.sortType+'\"]')","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/stat.js:","\t4:  * Display number of files/selected files and its size in statusbar","\t15: \t\t\tsetstat    = function(files, cwd) {","\t19: \t\t\t\t$.each(files, function(i, file) {","\t20: \t\t\t\t\tif (!cwd || file.phash == cwd) {","\t22: \t\t\t\t\t\ts += parseInt(file.size)||0;","\t32: \t\t\tsetstat(fm.files(), fm.cwd().hash)","\t35: \t\t\tsetstat(e.data.files);","\t40: \t\t\t\tfiles = fm.selectedFiles();","\t42: \t\t\tif (files.length == 1) {","\t43: \t\t\t\ts = files[0].size;","\t44: \t\t\t\tsel.html(fm.escape(files[0].name)+(s > 0 ? ', '+fm.formatSize(s) : ''));","\t49: \t\t\t$.each(files, function(i, file) {","\t51: \t\t\t\ts += parseInt(file.size)||0;","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/tree.js:","\t196: \t\t\t * Return only dirs from files list","\t198: \t\t\t * @param  Array  files list","\t201: \t\t\tfilter = function(files) {","\t202: \t\t\t\treturn $.map(files||[], function(f) { return f.mime == 'directory' ? f : null });","\t228: \t\t\t\t\tinfo = fm.file(fm.navId2Hash(node.children('[id]').attr('id')));","\t230: \t\t\t\t\tif ((info = fm.file(fm.navId2Hash(node.children('[id]').attr('id')))) ","\t307: \t\t\t\t\t\treturn current.parentsUntil('.'+root).filter('.'+subtree).show().prev('.'+navdir).addClass(expanded);","\t310: \t\t\t\t\t\tdir = fm.file(cwd);","\t320: \t\t\t\t\t\t\tvar dirs = filter(data.tree);","\t357: \t\t\t\t\t\t.filter(function() { return $(this).next('.'+subtree).children().length > 0 })","\t388: \t\t\t\t\t\tfile = fm.file(hash);","\t393: \t\t\t\t\t\tfm.exec('open', file.thash || hash);","\t415: \t\t\t\t\t\t\t\tupdateTree(filter(data.tree)); ","\t446: \t\t\t\tdirs = filter(data.files);","\t458: \t\t\tvar dirs = filter(e.data.added);","\t467: \t\t\tvar dirs = filter(e.data.changed),","\t527: \t\t.bind('lockfiles unlockfiles', function(e) {","\t528: \t\t\tvar lock = e.type == 'lockfiles',","\t530: \t\t\t\tdirs = $.map(e.data.files||[], function(h) {  ","\t531: \t\t\t\t\tvar dir = fm.file(h);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/uploadButton.js:","\t3:  * @class  elFinder toolbar's button tor upload file","\t12: \t\t\tinput = $('<input type=\"file\" multiple=\"true\"/>')","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/chars-test.php:","\t12: $path = '../../../files/tmp/';","\t15: \texit('unable to create file');","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/connector.minimal.php:","\t5: include_once dirname(__FILE__).DIRECTORY_SEPARATOR.'elFinderConnector.class.php';","\t6: include_once dirname(__FILE__).DIRECTORY_SEPARATOR.'elFinder.class.php';","\t7: include_once dirname(__FILE__).DIRECTORY_SEPARATOR.'elFinderVolumeDriver.class.php';","\t8: include_once dirname(__FILE__).DIRECTORY_SEPARATOR.'elFinderVolumeLocalFileSystem.class.php';","\t10: // include_once dirname(__FILE__).DIRECTORY_SEPARATOR.'elFinderVolumeMySQL.class.php';","\t12: // include_once dirname(__FILE__).DIRECTORY_SEPARATOR.'elFinderVolumeFTP.class.php';","\t16:  * Simple function to demonstrate how to control file access using \"accessControl\" callback.","\t17:  * This method will disable accessing files/folders starting from '.' (dot)","\t20:  * @param  string  $path  file path relative to volume root directory started with directory separator","\t24: \treturn strpos(basename($path), '.') === 0       // if file/folder begins with '.' (dot)","\t36: \t\t\t'driver'        => 'LocalFileSystem',   // driver for accessing file system (REQUIRED)","\t37: \t\t\t'path'          => '../files/',         // path to files (REQUIRED)","\t38: \t\t\t'URL'           => dirname($_SERVER['PHP_SELF']) . '/../files/', // URL to files (REQUIRED)","\t39: \t\t\t'accessControl' => 'access'             // disable and hide dot starting files (OPTIONAL)","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/elFinder.class.php:","\t4:  * elFinder - file manager for web.","\t56: \t\t'file'      => array('target' => true, 'download' => false),","\t59: \t\t'mkfile'    => array('target' => true, 'name' => true, 'mimes' => false),","\t64: \t\t'upload'    => array('target' => true, 'FILES' => true, 'mimes' => false, 'html' => false),","\t132: \tconst ERROR_FILE_NOT_FOUND    = 'errFileNotFound';     // 'File not found.'","\t135: \tconst ERROR_NOT_FILE          = 'errNotFile';","\t138: \tconst ERROR_EXISTS            = 'errExists';        // 'File named \"$1\" already exists.'","\t139: \tconst ERROR_INVALID_NAME      = 'errInvName';       // 'Invalid file name.'","\t141: \tconst ERROR_MKFILE            = 'errMkfile';","\t150: \tconst ERROR_RM_SRC            = 'errRmSrc';            // 'Unable remove source file(s)'","\t152: \tconst ERROR_UPLOAD_FILE       = 'errUploadFile';       // 'Unable to upload \"$1\".'","\t153: \tconst ERROR_UPLOAD_NO_FILES   = 'errUploadNoFiles';    // 'No files found for upload.'","\t155: \tconst ERROR_UPLOAD_FILE_SIZE  = 'errUploadFileSize';   // 'File exceeds maximum allowed size.'","\t156: \tconst ERROR_UPLOAD_FILE_MIME  = 'errUploadMime';       // 'File type not allowed.'","\t177: \tconst ERROR_FTP_DOWNLOAD_FILE \t= 'errFtpDownloadFile';","\t178: \tconst ERROR_FTP_UPLOAD_FILE \t= 'errFtpUploadFile';","\t225: \t\t\t\t\t// unique volume id (ends on \"_\") - used as prefix to files hash","\t373: \t\t\t\t$this->volumes[$id]->setMimesFilter($args['mimes']);","\t396: \t\t// replace removed files info with removed files hashes","\t399: \t\t\tforeach ($result['removed'] as $file) {","\t400: \t\t\t\t$removed[] = $file['hash'];","\t404: \t\t// remove hidden files and filter files by mimetypes","\t406: \t\t\t$result['added'] = $this->filter($result['added']);","\t408: \t\t// remove hidden files and filter files by mimetypes","\t410: \t\t\t$result['changed'] = $this->filter($result['changed']);","\t437: \t * Return file real path","\t439: \t * @param  string  $hash  file hash","\t540: \t *  - files        - opened dir content [and dirs tree if $args[tree]]","\t572: \t\t$files = array();","\t578: \t\t\t\t\t$files = array_merge($files, $tree);","\t583: \t\t// get current working directory files list and add to $files if not exists in it","\t588: \t\tforeach ($ls as $file) {","\t589: \t\t\tif (!in_array($file, $files)) {","\t590: \t\t\t\t$files[] = $file;","\t597: \t\t\t'files'   => $files","\t602: \t\t\t$result['uplMaxSize'] = ini_get('upload_max_filesize');","\t610: \t * Return dir files names list","\t684: \t * Required to output file in browser when volume URL is not set ","\t685: \t * Return array contains opened file pointer, root itself and required headers","\t691: \tprotected function file($args) {","\t698: \t\t\treturn array('error' => 'File not found', 'header' => $h404, 'raw' => true);","\t701: \t\tif (($file = $volume->file($target)) == false) {","\t702: \t\t\treturn array('error' => 'File not found', 'header' => $h404, 'raw' => true);","\t705: \t\tif (!$file['read']) {","\t710: \t\t\treturn array('error' => 'File not found', 'header' => $h404, 'raw' => true);","\t717: \t\t\t$disp  = preg_match('/^(image|text)/i', $file['mime']) || $file['mime'] == 'application/x-shockwave-flash' ","\t720: \t\t\t$mime = $file['mime'];","\t723: \t\t$filenameEncoded = rawurlencode($file['name']);","\t724: \t\tif (strpos($filenameEncoded, '%') === false) { // ASCII only","\t725: \t\t\t$filename = 'filename=\"'.$file['name'].'\"';","\t729: \t\t\t\t$filename = 'filename=\"'.$filenameEncoded.'\"';","\t731: \t\t\t\t$filename = 'filename=\"'.str_replace('\"', '', $file['name']).'\"';","\t733: \t\t\t\t$filename = 'filename*=UTF-8\\'\\''.$filenameEncoded;","\t740: \t\t\t'info'    => $file,","\t743: \t\t\t\t'Content-Disposition: '.$disp.'; '.$filename,","\t744: \t\t\t\t'Content-Location: '.$file['name'],","\t746: \t\t\t\t'Content-Length: '.$file['size'],","\t754: \t * Count total files size","\t765: \t\t\t|| ($file = $volume->file($target)) == false","\t766: \t\t\t|| !$file['read']) {","\t796: \t * Create empty file","\t802: \tprotected function mkfile($args) {","\t807: \t\t\treturn array('error' => $this->error(self::ERROR_MKFILE, $name, self::ERROR_TRGDIR_NOT_FOUND, '#'.$target));","\t810: \t\treturn ($file = $volume->mkfile($target, $args['name'])) == false","\t811: \t\t\t? array('error' => $this->error(self::ERROR_MKFILE, $name, $volume->error()))","\t812: \t\t\t: array('added' => array($file));","\t816: \t * Rename file","\t827: \t\t||  ($rm  = $volume->file($target)) == false) {","\t828: \t\t\treturn array('error' => $this->error(self::ERROR_RENAME, '#'.$target, self::ERROR_FILE_NOT_FOUND));","\t832: \t\treturn ($file = $volume->rename($target, $name)) == false","\t834: \t\t\t: array('added' => array($file), 'removed' => array($rm));","\t838: \t * Duplicate file - create copy with \"copy %d\" suffix","\t851: \t\t\t|| ($src = $volume->file($target)) == false) {","\t852: \t\t\t\t$result['warning'] = $this->error(self::ERROR_COPY, '#'.$target, self::ERROR_FILE_NOT_FOUND);","\t856: \t\t\tif (($file = $volume->duplicate($target, $suffix)) == false) {","\t861: \t\t\t$result['added'][] = $file;","\t868: \t * Remove dirs/files","\t880: \t\t\t\t$result['warning'] = $this->error(self::ERROR_RM, '#'.$target, self::ERROR_FILE_NOT_FOUND);","\t893: \t * Save uploaded files","\t902: \t\t$files  = isset($args['FILES']['upload']) && is_array($args['FILES']['upload']) ? $args['FILES']['upload'] : array();","\t905: \t\tif (empty($files)) {","\t906: \t\t\treturn array('error' => $this->error(self::ERROR_UPLOAD, self::ERROR_UPLOAD_NO_FILES), 'header' => $header);","\t913: \t\tforeach ($files['name'] as $i => $name) {","\t914: \t\t\tif (($error = $files['error'][$i]) > 0) {\t\t\t\t","\t915: \t\t\t\t$result['warning'] = $this->error(self::ERROR_UPLOAD_FILE, $name, $error == UPLOAD_ERR_INI_SIZE || $error == UPLOAD_ERR_FORM_SIZE ? self::ERROR_UPLOAD_FILE_SIZE : self::ERROR_UPLOAD_TRANSFER);","\t920: \t\t\t$tmpname = $files['tmp_name'][$i];","\t923: \t\t\t\t$result['warning'] = $this->error(self::ERROR_UPLOAD_FILE, $name, self::ERROR_UPLOAD_TRANSFER);","\t924: \t\t\t\t$this->uploadDebug = 'Upload error: unable open tmp file';","\t928: \t\t\tif (($file = $volume->upload($fp, $target, $name, $tmpname)) === false) {","\t929: \t\t\t\t$result['warning'] = $this->error(self::ERROR_UPLOAD_FILE, $name, $volume->error());","\t935: \t\t\t$result['added'][] = $file;","\t942: \t * Copy/move files into new destination","\t961: \t\t\t\t$result['warning'] = $this->error($error, '#'.$target, self::ERROR_FILE_NOT_FOUND);","\t965: \t\t\tif (($file = $dstVolume->paste($srcVolume, $target, $dst, $cut)) == false) {","\t970: \t\t\t$result['added'][] = $file;","\t976: \t * Return file content","\t986: \t\tif (!$volume || ($file = $volume->file($target)) == false) {","\t987: \t\t\treturn array('error' => $this->error(self::ERROR_OPEN, '#'.$target, self::ERROR_FILE_NOT_FOUND));","\t1004: \t * Save content into text file","\t1013: \t\t|| ($file = $volume->file($target)) == false) {","\t1014: \t\t\treturn array('error' => $this->error(self::ERROR_SAVE, '#'.$target, self::ERROR_FILE_NOT_FOUND));","\t1017: \t\tif (($file = $volume->putContents($target, $args['content'])) == false) {","\t1021: \t\treturn array('changed' => array($file));","\t1025: \t * Extract files from archive","\t1038: \t\t|| ($file = $volume->file($target)) == false) {","\t1039: \t\t\treturn array('error' => $this->error(self::ERROR_EXTRACT, '#'.$target, self::ERROR_FILE_NOT_FOUND));","\t1042: \t\treturn ($file = $volume->extract($target))","\t1043: \t\t\t? array('added' => array($file))","\t1063: \t\treturn ($file = $volume->archive($targets, $args['type']))","\t1064: \t\t\t? array('added' => array($file))","\t1069: \t * Search files","\t1084: \t\treturn array('files' => $result);","\t1088: \t * Return file info (used by client \"places\" ui)","\t1095: \t\t$files = array();","\t1099: \t\t\t&& ($info = $volume->file($hash)) != false) {","\t1100: \t\t\t\t$files[] = $info;","\t1104: \t\treturn array('files' => $files);","\t1143: \t\t|| ($file = $volume->file($target)) == false) {","\t1144: \t\t\treturn array('error' => $this->error(self::ERROR_RESIZE, '#'.$target, self::ERROR_FILE_NOT_FOUND));","\t1147: \t\treturn ($file = $volume->resize($target, $width, $height, $x, $y, $mode, $bg, $degree))","\t1148: \t\t\t? array('changed' => array($file))","\t1157: \t * Return root - file's owner","\t1159: \t * @param  string  file hash","\t1173: \t * Return files info array ","\t1175: \t * @param  array  $data  one file info or files info","\t1184: \t * Return fils hashes list","\t1186: \t * @param  array  $files  files info","\t1190: \tprotected function hashes($files) {","\t1192: \t\tforeach ($files as $file) {","\t1193: \t\t\t$ret[] = $file['hash'];","\t1199: \t * Remove from files list hidden files and files with required mime types","\t1201: \t * @param  array  $files  files info","\t1205: \tprotected function filter($files) {","\t1206: \t\tforeach ($files as $i => $file) {","\t1207: \t\t\tif (!empty($file['hidden']) || !$this->default->mimeAccepted($file['mime'])) {","\t1208: \t\t\t\tunset($files[$i]);","\t1211: \t\treturn array_merge($files, array());","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/elFinderConnector.class.php:","\t78: \t\t\t$arg = $name == 'FILES' ","\t79: \t\t\t\t? $_FILES ","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/elFinderVolumeDriver.class.php:","\t26: \t * Volume id - used as prefix for files hashes","\t104: \t * Library to crypt files name","\t161: \t\t// root url, not set to disable sending URL to client (replacement for old \"fileURL\" option)","\t165: \t\t// library to crypt/uncrypt files names (not implemented)","\t167: \t\t// how to detect files mimetypes. (auto/internal/finfo/mime_content_type)","\t169: \t\t// mime.types file path (for mimeDetect==internal)","\t170: \t\t'mimefile'        => '',","\t185: \t\t// on paste file -  if true - old file will be replaced with new one, if false new file get name - original_name-number.ext","\t189: \t\t// on upload -  if true - old file will be replaced with new one, if false new file get name - original_name-number.ext","\t197: \t\t// maximum upload file size. NOTE - this is size for every uploaded files","\t199: \t\t// files dates format","\t201: \t\t// files time format","\t211: \t\t// regexp or function name to validate new file name","\t213: \t\t// function/class method to control files permissions","\t222: \t\t// files attributes","\t283: \t * Maximum allowed upload file size.","\t298: \t * Flag - mimetypes from externail file was loaded","\t456: \t * Store files moved or overwrited files info","\t502: \t\t\tif (!file_exists($path)) {","\t588: \t\t// default file attribute","\t602: \t\t// set files attributes","\t672: \t\t\t$tmpFileInfo = @explode(';', @finfo_file(finfo_open(FILEINFO_MIME), __FILE__));","\t674: \t\t\t$tmpFileInfo = false;","\t677: \t\tif ($tmpFileInfo && preg_match($regexp, array_shift($tmpFileInfo))) {","\t679: \t\t\t$this->finfo = finfo_open(FILEINFO_MIME);","\t682: \t\t&& preg_match($regexp, array_shift(explode(';', mime_content_type(__FILE__))))) {","\t689: \t\t// load mimes from external file for mimeDetect == 'internal'","\t691: \t\t// file must be in file directory or in parent one ","\t695: \t\t\t$file = false;","\t696: \t\t\tif (!empty($this->options['mimefile']) && file_exists($this->options['mimefile'])) {","\t697: \t\t\t\t$file = $this->options['mimefile'];","\t698: \t\t\t} elseif (file_exists(dirname(__FILE__).DIRECTORY_SEPARATOR.'mime.types')) {","\t699: \t\t\t\t$file = dirname(__FILE__).DIRECTORY_SEPARATOR.'mime.types';","\t700: \t\t\t} elseif (file_exists(dirname(dirname(__FILE__)).DIRECTORY_SEPARATOR.'mime.types')) {","\t701: \t\t\t\t$file = dirname(dirname(__FILE__)).DIRECTORY_SEPARATOR.'mime.types';","\t704: \t\t\tif ($file && file_exists($file)) {","\t705: \t\t\t\t$mimecf = file($file);","\t840: \tpublic function setMimesFilter($mimes) {","\t944: \t * Return file path related to root","\t946: \t * @param  string   $hash  file hash","\t955: \t * Return file real path if file exists","\t957: \t * @param  string  $hash  file hash","\t967: \t * Return list of moved/overwrited files","\t977: \t * Clean removed files list","\t987: \t * Return file/dir hash or first founded child hash with required attr == $val","\t989: \t * @param  string   $hash  file hash","\t1000: \t * Return file info or false on error","\t1002: \t * @param  string   $hash      file hash","\t1003: \t * @param  bool     $realpath  add realpath field to file info","\t1007: \tpublic function file($hash) {","\t1010: \t\treturn ($file = $this->stat($path)) ? $file : $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1012: \t\tif (($file = $this->stat($path)) != false) {","\t1014: \t\t\t\t$file['realpath'] = $path;","\t1016: \t\t\treturn $file;","\t1018: \t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1025: \t * @param  bool     $hidden  return hidden file info","\t1030: \t\tif (($dir = $this->file($hash)) == false) {","\t1035: \t\t\t$dir = $this->file($dir['thash']);","\t1046: \t * @param  string   $hash   file hash","\t1061: \t * Return dir files names list","\t1063: \t * @param  string  $hash   file hash","\t1141: \t * Create thumbnail for required file and return its name of false on failed","\t1157: \t * Return file size / total directory size","\t1159: \t * @param  string   file hash","\t1168: \t * Open file for reading and return file pointer","\t1170: \t * @param  string   file hash","\t1175: \t\tif (($file = $this->file($hash)) == false","\t1176: \t\t|| $file['mime'] == 'directory') {","\t1184: \t * Close file pointer","\t1186: \t * @param  Resource  $fp   file pointer","\t1187: \t * @param  string    $hash file hash","\t1231: \t * Create empty file and return its info","\t1234: \t * @param  string   $name file name","\t1238: \tpublic function mkfile($dst, $name) {","\t1239: \t\tif ($this->commandDisabled('mkfile')) {","\t1262: \t\treturn ($path = $this->_mkfile($path, $name)) ? $this->stat($path) : false;","\t1266: \t * Rename file and return file info","\t1268: \t * @param  string  $hash  file hash","\t1269: \t * @param  string  $name  new file name","\t1282: \t\tif (!($file = $this->file($hash))) {","\t1283: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1286: \t\tif ($name == $file['name']) {","\t1287: \t\t\treturn $file;","\t1290: \t\tif (!empty($file['locked'])) {","\t1291: \t\t\treturn $this->setError(elFinder::ERROR_LOCKED, $file['name']);","\t1305: \t\t$this->rmTmb($file); // remove old name tmbs, we cannot do this after dir move","\t1316: \t * Create file copy with suffix \"copy number\" and return its info","\t1318: \t * @param  string   $hash    file hash","\t1319: \t * @param  string   $suffix  suffix to add to file name","\t1328: \t\tif (($file = $this->file($hash)) == false) {","\t1329: \t\t\treturn $this->setError(elFinder::ERROR_COPY, elFinder::ERROR_FILE_NOT_FOUND);","\t1346: \t * Save uploaded file. ","\t1347: \t * On success return array with new file stat and with removed file hash (if existed file was replaced)","\t1349: \t * @param  Resource $fp      file pointer","\t1351: \t * @param  string   $src     file name","\t1352: \t * @param  string   $tmpname file tmp name - required to detect mime type","\t1394: \t\t\treturn $this->setError(elFinder::ERROR_UPLOAD_FILE_MIME);","\t1397: \t\tif ($this->uploadMaxSize > 0 && filesize($tmpname) > $this->uploadMaxSize) {","\t1398: \t\t\treturn $this->setError(elFinder::ERROR_UPLOAD_FILE_SIZE);","\t1404: \t\t$file = $this->stat($test);","\t1407: \t\tif ($file) { // file exists","\t1409: \t\t\t\tif (!$file['write']) {","\t1411: \t\t\t\t} elseif ($file['mime'] == 'directory') {","\t1424: \t\t\t'size'   => filesize($tmpname));","\t1442: \t * Paste files","\t1445: \t * @param  string  $source  file hash","\t1458: \t\tif (($file = $volume->file($src, $rmSrc)) == false) {","\t1459: \t\t\treturn $this->setError($err, '#'.$src, elFinder::ERROR_FILE_NOT_FOUND);","\t1462: \t\t$name = $file['name'];","\t1469: \t\tif (!$dir['write'] || !$file['read']) {","\t1486: \t\t\t\t// do not replace file with dir or dir with file","\t1487: \t\t\t\tif (!$this->isSameType($file['mime'], $stat['mime'])) {","\t1490: \t\t\t\t// existed file is not writable","\t1494: \t\t\t\t// existed file locked or has locked child","\t1498: \t\t\t\t// target is entity file of alias","\t1499: \t\t\t\tif ($volume == $this && ($test == @$file['target'] || $test == $this->decode($src))) {","\t1502: \t\t\t\t// remove existed file","\t1533: \t\t\t\t$this->removed[] = $file;","\t1542: \t * Return file contents","\t1544: \t * @param  string  $hash  file hash","\t1549: \t\t$file = $this->file($hash);","\t1551: \t\tif (!$file) {","\t1552: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1555: \t\tif ($file['mime'] == 'directory') {","\t1556: \t\t\treturn $this->setError(elFinder::ERROR_NOT_FILE);","\t1559: \t\tif (!$file['read']) {","\t1567: \t * Put content in text file and return file info.","\t1569: \t * @param  string  $hash     file hash","\t1570: \t * @param  string  $content  new file content","\t1581: \t\tif (!($file = $this->file($hash))) {","\t1582: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1585: \t\tif (!$file['write']) {","\t1589: \t\treturn $this->_filePutContents($path, $content) ? $this->stat($path) : false;","\t1593: \t * Extract files from archive","\t1605: \t\tif (($file = $this->file($hash)) == false) {","\t1606: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1609: \t\t$archiver = isset($this->archivers['extract'][$file['mime']])","\t1610: \t\t\t? $this->archivers['extract'][$file['mime']]","\t1620: \t\tif (!$file['read'] || !$parent['write']) {","\t1628: \t * Add files to archive","\t1645: \t\t$files = array();","\t1648: \t\t\tif (($file = $this->file($hash)) == false) {","\t1649: \t\t\t\treturn $this->error(elFinder::ERROR_FILE_NOT_FOUND, '#'+$hash);","\t1651: \t\t\tif (!$file['read']) {","\t1663: \t\t\t$files[] = $this->_basename($path);","\t1666: \t\t$name = (count($files) == 1 ? $files[0] : 'Archive').'.'.$archiver['ext'];","\t1669: \t\treturn ($path = $this->_archive($dir, $files, $name, $archiver)) ? $this->stat($path) : false;","\t1675: \t * @param  string   $hash    image file","\t1692: \t\tif (($file = $this->file($hash)) == false) {","\t1693: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1696: \t\tif (!$file['write'] || !$file['read']) {","\t1702: \t\tif (!$this->canResize($path, $file)) {","\t1730: \t\t\t$this->rmTmb($file);","\t1739: \t * Remove file/dir","\t1741: \t * @param  string  $hash  file hash","\t1752: \t * Search files","\t1766: \t * @param  string  $hash  file hash","\t1771: \t\tif (($file = $this->file($hash)) == false) {","\t1775: \t\treturn $this->_dimensions($this->decode($hash), $file['mime']);","\t1810: \t * @param  string  file path","\t1840: \t * @param  string  file hash","\t1883: \t * Validate file name based on $this->options['acceptedName'] regexp","\t1885: \t * @param  string  $name  file name","\t1902: \t * Return new unique name based on file name and suffix","\t1904: \t * @param  string  $path    file path","\t1938: \t/*********************** file stat *********************/","\t1941: \t * Check file attribute","\t1943: \t * @param  string  $path  file path","\t1945: \t * @param  bool    $val   attribute value returned by file system","\t1985: \t * Return true if file with given name can be created in given folder.","\t1988: \t * @param string $name new file name","\t2017: \t * Return fileinfo ","\t2019: \t * @param  string  $path  file cache","\t2033: \t * Put file stat in cache and return it","\t2035: \t * @param  string  $path   file path","\t2036: \t * @param  array   $stat   file stat","\t2125: \t\t\t\t// for files - check for thumbnails","\t2171: \t * Return file mimetype","\t2173: \t * @param  string  $path  file path","\t2181: \t\t\tif ($type = @finfo_file($this->finfo, $path)) {","\t2200: \t\t\t// finfo return this mime for empty files","\t2214: \t * Detect file mimetype using \"internal\" method","\t2216: \t * @param  string  $path  file path","\t2228: \t * Return file/total directory size","\t2230: \t * @param  string  $path  file path","\t2261: \t * Return true if all mimes is directory or files","\t2273: \t * If file has required attr == $val - return file path,","\t2276: \t * @param  string   $path  file path","\t2303: \t * @param  string   $path  file path","\t2321: \t * Return required dir's files info.","\t2322: \t * If onlyMimes is set - return"]},{"start":{"row":3840,"column":39},"end":{"row":4383,"column":0},"action":"insert","lines":[" only dirs and files of required mimes","\t2329: \t\t$files = array();","\t2335: \t\t\t\t$files[] = $stat;","\t2339: \t\treturn $files;","\t2371: \t * Recursive files search","\t2414: \t * Copy file/recursive copy dir only in current volume.","\t2415: \t * Return new file path or false.","\t2419: \t * @param  string  $name  new file name (optionaly)","\t2464: \t * Move file","\t2465: \t * Return new file path or false.","\t2469: \t * @param  string  $name  new file name ","\t2489: \t * Copy file from another volume.","\t2490: \t * Return new file path or false.","\t2493: \t * @param  string  $src          source file hash","\t2495: \t * @param  string  $name         file name","\t2501: \t\tif (($source = $volume->file($src)) == false) {","\t2551: \t * Remove file/ recursive remove dir","\t2553: \t * @param  string  $path   file path","\t2554: \t * @param  bool    $force  try to remove even if file locked","\t2562: \t\t\treturn $this->setError(elFinder::ERROR_RM, $this->_path($path), elFinder::ERROR_FILE_NOT_FOUND);","\t2598: \t * Return thumbnail file name for required file","\t2600: \t * @param  array  $stat  file stat","\t2611: \t * @param  string  $path file path","\t2612: \t * @param  array   $stat file stat","\t2618: \t\t\t// file itself thumnbnail","\t2624: \t\t\tif (file_exists($this->tmbPath.DIRECTORY_SEPARATOR.$name)) {","\t2632: \t * Return true if thumnbnail for required file can be created","\t2635: \t * @param  array   $stat  file stat","\t2648: \t * Return true if required file can be resized.","\t2652: \t * @param  array   $stat  file stat","\t2663: \t * @param  string  $path  file path","\t2664: \t * @param  string  $mime  file mime type","\t2676: \t\t// copy image into tmbPath so some drivers does not store files on local fs","\t2737: \t * @param  string   $path               image file","\t2797: \t\t\t\t$img->resizeImage($size_w, $size_h, Imagick::FILTER_LANCZOS, true);","\t2833: \t * @param  string   $path               image file","\t2904: \t * @param  string   $path               image file","\t2971: \t * @param  string   $path               image file","\t3065: \t * @param  string  $stat  file stat","\t3079: \t\t\tfile_exists($tmb) && @unlink($tmb);","\t3087: \t * @param string $path image file","\t3109: \t * Output gd image to file","\t3112: \t * @param string $filename The path to save the file to.","\t3113: \t * @param string $destformat The Image type to use for $filename","\t3116: \tprotected function gdImage($image, $filename, $destformat, $mime ){","\t3119: \t\t\treturn imagejpeg($image, $filename, 100);","\t3123: \t\t\treturn imagegif($image, $filename, 7);","\t3126: \t\treturn imagepng($image, $filename, 7);","\t3146: \t\timagefill($image, 0, 0, $bgcolor1);","\t3154: \t * @param  int     $ts  file timestamp","\t3195: \t * @param  string  $path  file path","\t3202: \t * Return file name","\t3204: \t * @param  string  $path  file path","\t3211: \t * Join dir name and file name and return full path.","\t3215: \t * @param  string  $name  file name","\t3224: \t * @param  string  $path  file path","\t3231: \t * Return file path related to root dir","\t3233: \t * @param  string  $path  file path","\t3242: \t * @param  string  $path  rel file path","\t3252: \t * @param  string  $path  file path","\t3271: \t * - (int)    size    file size in b. required","\t3272: \t * - (int)    ts      file modification time in unix time. required","\t3281: \t * If file does not exists - returns empty array or false.","\t3283: \t * @param  string  $path    file path ","\t3290: \t/***************** file stat ********************/","\t3306: \t * @param  string  $path  file path","\t3307: \t * @param  string  $mime  file mime type","\t3313: \t/******************** file/dir content *********************/","\t3316: \t * Return files list in directory","\t3325: \t * Open file and return file pointer","\t3327: \t * @param  string  $path  file path","\t3328: \t * @param  bool    $write open file for writing","\t3335: \t * Close opened file","\t3337: \t * @param  resource  $fp    file pointer","\t3338: \t * @param  string    $path  file path","\t3344: \t/********************  file/dir manipulations *************************/","\t3357: \t * Create file and return it's path or false on failed","\t3360: \t * @param string  $name  new file name","\t3364: \tabstract protected function _mkfile($path, $name);","\t3369: \t * @param  string  $source     file to link to","\t3378: \t * Copy file into another file (only inside one volume)","\t3380: \t * @param  string  $source  source file path","\t3382: \t * @param  string  $name    file name","\t3389: \t * Move file into another parent dir.","\t3390: \t * Return new file path or false.","\t3392: \t * @param  string  $source  source file path","\t3394: \t * @param  string  $name    file name","\t3401: \t * Remove file","\t3403: \t * @param  string  $path  file path","\t3419: \t * Create new file and write into it from file pointer.","\t3420: \t * Return new file path or false on error.","\t3422: \t * @param  resource  $fp   file pointer","\t3424: \t * @param  string    $name file name","\t3425: \t * @param  array     $stat file stat (required by some virtual fs)","\t3432: \t * Get file contents","\t3434: \t * @param  string  $path  file path","\t3441: \t * Write a string to a file","\t3443: \t * @param  string  $path     file path","\t3444: \t * @param  string  $content  new file content","\t3448: \tabstract protected function _filePutContents($path, $content);","\t3451: \t * Extract files from archive","\t3453: \t * @param  string  $path file path","\t3465: \t * @param  array   $files  files names list","\t3472: \tabstract protected function _archive($dir, $files, $name, $arc);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/elFinderVolumeFTP.class.php:","\t37: \t * Directory for tmp files","\t86: \t\t\t'fileMode'      => 0644","\t160: \t\t\t$this->disabled[] = 'mkfile';","\t232: \t * Parse line from ftp_rawlist() output and return file stat (array)","\t336: \t\t\t\t\t// $files[] = $stat;","\t347: \t\t\t\t\t// $files[] = $stat;","\t355: \t * Return ftp transfer mode for file","\t357: \t * @param  string  $path  file path","\t370: \t * @param  string  $path  file path","\t379: \t * Return file name","\t381: \t * @param  string  $path  file path","\t390: \t * Join dir name and file name and retur full path","\t455: \t * Return file path related to root dir","\t457: \t * @param  string  $path  file path","\t468: \t * @param  string  $path  file path","\t479: \t * @param  string  $path  file path","\t499: \t/***************** file stat ********************/","\t503: \t * - (int)    size    file size in b. required","\t504: \t * - (int)    ts      file modification time in unix time. required","\t513: \t * If file does not exists - returns empty array or false.","\t515: \t * @param  string  $path    file path ","\t652: \t * @param  string  $path  file path","\t653: \t * @param  string  $mime  file mime type","\t661: \t/******************** file/dir content *********************/","\t664: \t * Return files list in directory.","\t672: \t\t$files = array();","\t676: \t\t\t\t$files[] = $path.DIRECTORY_SEPARATOR.$stat['name'];","\t680: \t\treturn $files;","\t684: \t * Open file and return file pointer","\t686: \t * @param  string  $path  file path","\t687: \t * @param  bool    $write open file for writing","\t705: \t * Close opened file","\t707: \t * @param  resource  $fp  file pointer","\t718: \t/********************  file/dir manipulations *************************/","\t739: \t * Create file and return it's path or false on failed","\t742: \t * @param string  $name  new file name","\t746: \tprotected function _mkfile($path, $name) {","\t770: \t * Copy file into another file","\t772: \t * @param  string  $source     source file path","\t774: \t * @param  string  $name       new file name","\t796: \t * Move file into another parent dir.","\t797: \t * Return new file path or false.","\t799: \t * @param  string  $source  source file path","\t801: \t * @param  string  $name    file name","\t811: \t * Remove file","\t813: \t * @param  string  $path  file path","\t833: \t * Create new file and write into it from file pointer.","\t834: \t * Return new file path or false on error.","\t836: \t * @param  resource  $fp   file pointer","\t838: \t * @param  string    $name file name","\t839: \t * @param  array     $stat file stat (required by some virtual fs)","\t851: \t * Get file contents","\t853: \t * @param  string  $path  file path","\t870: \t * Write a string to a file","\t872: \t * @param  string  $path     file path","\t873: \t * @param  string  $content  new file content","\t877: \tprotected function _filePutContents($path, $content) {","\t883: \t\t\tif (@file_put_contents($local, $content, LOCK_EX) !== false","\t889: \t\t\tfile_exists($local) && @unlink($local);","\t923: \t * @param  string  $path  file/dir path","\t941: \t\t\t\t\t} elseif (is_file($p)) {","\t942: \t\t\t\t\t\t$this->archiveSize += filesize($p);","\t947: \t\t\t$this->archiveSize += filesize($path);","\t954: \t * Extract files from archive","\t992: \t\t$filesToProcess = elFinderVolumeFTP::listFilesInDirectory($tmpDir, true);","\t993: \t\tif(!$filesToProcess) {","\t998: \t\tif (count($filesToProcess) > 1) {","\t1000: \t\t\t// for several files - create new directory","\t1015: \t\t\tforeach ($filesToProcess as $filename) {","\t1019: \t\t\t\t$targetPath = $newPath . DIRECTORY_SEPARATOR . $filename;","\t1020: \t\t\t\tif (is_dir($filename)) {","\t1021: \t\t\t\t\t$success = $this->_mkdir($newPath, $filename);","\t1023: \t\t\t\t\t$success = ftp_put($this->connect, $targetPath, $filename, FTP_BINARY);","\t1026: \t\t\tunset($filename);","\t1029: \t\t\t$filename = $filesToProcess[0];","\t1030: \t\t\t$newPath = $remoteDirectory . DIRECTORY_SEPARATOR . $filename;","\t1031: \t\t\t$success = ftp_put($this->connect, $newPath, $filename, FTP_BINARY);","\t1043: \t\t\t$this->setError(elFinder::ERROR_FTP_UPLOAD_FILE, $newPath);","\t1054: \t * @param  array   $files  files names list","\t1061: \tprotected function _archive($dir, $files, $name, $arc)","\t1072: \t\tif (!$this->ftp_download_files($dir, $files, $tmpDir)) {","\t1084: \t\t$file_names_string = \"\";","\t1085: \t\tforeach (scandir($tmpDir) as $filename) {","\t1086: \t\t\tif ('.' == $filename) {","\t1089: \t\t\tif ('..' == $filename) {","\t1092: \t\t\t$file_names_string = $file_names_string . '\"' . $filename . '\" ';","\t1094: \t\t$command = escapeshellcmd($arc['cmd'] . ' ' . $arc['argc'] . ' \"' . $name . '\" ' . $file_names_string);","\t1103: \t\t$remoteArchiveFile = $dir . DIRECTORY_SEPARATOR . $name;","\t1106: \t\tif (!ftp_put($this->connect, $remoteArchiveFile, $path, FTP_BINARY)) {","\t1107: \t\t\t$this->setError(elFinder::ERROR_FTP_UPLOAD_FILE, $remoteArchiveFile);","\t1120: \t\treturn $remoteArchiveFile;","\t1148: \t * Gets in a single FTP request an array of absolute remote FTP paths of files and","\t1150: \t * @param $remote_directory string remote FTP path to scan for file and folders recursively","\t1154: \t * <li>$item['type'] - either 'f' for file or 'd' for directory</li>","\t1183: \t\t\t\t\t$remote_file_path = $remote_directory . DIRECTORY_SEPARATOR . $info[8];","\t1185: \t\t\t\t\t$item['path'] = $remote_file_path;","\t1186: \t\t\t\t\t$item['type'] = 'f'; // normal file","\t1194: \t * Downloads specified files from remote directory","\t1195: \t * if there is a directory among files it is downloaded recursively (omitting symbolic links).","\t1197: \t * @param array $files list of files to download from remote directory.","\t1198: \t * @param $dest_local_directory string destination folder to store downloaded files.","\t1201: \tprivate function ftp_download_files($remote_directory, array $files, $dest_local_directory)","\t1205: \t\t\t$this->setError(elFinder::ERROR_FTP_DOWNLOAD_FILE, $remote_directory);","\t1210: \t\t\tforeach ($files as $file) {","\t1211: \t\t\t\tif ($remote_directory . DIRECTORY_SEPARATOR . $file == $item['path'] || strstr($item['path'], $remote_directory . DIRECTORY_SEPARATOR . $file . DIRECTORY_SEPARATOR)) {","\t1230: \t\t\t\t$this->setError(elFinder::ERROR_FTP_DOWNLOAD_FILE, $remote_directory);","\t1248: \t\t\tforeach (array_reverse(elFinderVolumeFTP::listFilesInDirectory($dirPath, false)) as $path) {","\t1273: \t * Returns array of strings containing all files and folders in the specified local directory.","\t1277: \t * @return array array of files and folders names relative to the $path","\t1282: \tprivate static function listFilesInDirectory($dir, $omitSymlinks, $prefix = '')","\t1289: \t\t$files = scandir($dir);","\t1290: \t\tif(!$files) {","\t1293: \t\tforeach($files as $file) {","\t1294: \t\t\tif(!in_array($file, $excludes)) {","\t1295: \t\t\t\t$path = $dir.DIRECTORY_SEPARATOR.$file;","\t1300: \t\t\t\t\t\t$result[] = $prefix.$file;","\t1303: \t\t\t\t\t$result[] = $prefix.$file.DIRECTORY_SEPARATOR;","\t1304: \t\t\t\t\t$subs = elFinderVolumeFTP::listFilesInDirectory($path, $omitSymlinks, $prefix.$file.DIRECTORY_SEPARATOR);","\t1310: \t\t\t\t\t$result[] = $prefix.$file;","\t1334: \t\tif (($file = $this->file($hash)) == false) {","\t1335: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1338: \t\tif (!$file['write'] || !$file['read']) {","\t1353: \t\t\t$this->setError(elFinder::ERROR_FTP_DOWNLOAD_FILE, $remote_directory);","\t1357: \t\tif (!$this->canResize($path, $file)) {","\t1386: \t\t\t// upload to FTP and clear temp local file","\t1389: \t\t\t\t$this->setError(elFinder::ERROR_FTP_UPLOAD_FILE, $path);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/elFinderVolumeLocalFileSystem.class.php:","\t4:  * elFinder driver for local filesystem.","\t9: class elFinderVolumeLocalFileSystem extends elFinderVolumeDriver {","\t21: \t * Required to count total archive files size","\t44: \t\t$this->options['fileMode'] = 0644;            // new files mode","\t46: \t\t$this->options['maxArcFilesSize'] = 0;        // max allowed archive files size (0 - no limit)","\t117: \t * @param  string  $path  file path","\t126: \t * Return file name","\t128: \t * @param  string  $path  file path","\t137: \t * Join dir name and file name and retur full path","\t199: \t * Return file path related to root dir","\t201: \t * @param  string  $path  file path","\t212: \t * @param  string  $path  file path","\t223: \t * @param  string  $path  file path","\t245: \t/***************** file stat ********************/","\t250: \t * - (int)    size    file size in b. required","\t251: \t * - (int)    ts      file modification time in unix time. required","\t260: \t * If file does not exists - returns empty array or false.","\t262: \t * @param  string  $path    file path ","\t269: \t\tif (!file_exists($path)) {","\t297: \t\t\t$size = @filesize($path);","\t303: \t\t$stat['ts']    = filemtime($path);","\t341: \t * @param  string  $path  file path","\t342: \t * @param  string  $mime  file mime type","\t352: \t/******************** file/dir content *********************/","\t355: \t * Return symlink target file","\t387: \t * Return files list in directory.","\t394: \t\t$files = array();","\t398: \t\t\t\t$files[] = $path.DIRECTORY_SEPARATOR.$name;","\t401: \t\treturn $files;","\t405: \t * Open file and return file pointer","\t407: \t * @param  string  $path  file path","\t408: \t * @param  bool    $write open file for writing","\t417: \t * Close opened file","\t419: \t * @param  resource  $fp  file pointer","\t427: \t/********************  file/dir manipulations *************************/","\t449: \t * Create file and return it's path or false on failed","\t452: \t * @param string  $name  new file name","\t456: \tprotected function _mkfile($path, $name) {","\t461: \t\t\t@chmod($path, $this->options['fileMode']);","\t470: \t * @param  string  $source     file to link to","\t481: \t * Copy file into another file","\t483: \t * @param  string  $source     source file path","\t485: \t * @param  string  $name       new file name","\t494: \t * Move file into another parent dir.","\t495: \t * Return new file path or false.","\t497: \t * @param  string  $source  source file path","\t499: \t * @param  string  $name    file name","\t509: \t * Remove file","\t511: \t * @param  string  $path  file path","\t531: \t * Create new file and write into it from file pointer.","\t532: \t * Return new file path or false on error.","\t534: \t * @param  resource  $fp   file pointer","\t536: \t * @param  string    $name file name","\t537: \t * @param  array     $stat file stat (required by some virtual fs)","\t552: \t\t@chmod($path, $this->options['fileMode']);","\t558: \t * Get file contents","\t560: \t * @param  string  $path  file path","\t565: \t\treturn file_get_contents($path);","\t569: \t * Write a string to a file","\t571: \t * @param  string  $path     file path","\t572: \t * @param  string  $content  new file content","\t576: \tprotected function _filePutContents($path, $content) {","\t577: \t\tif (@file_put_contents($path, $content, LOCK_EX) !== false) {","\t703: \t * @param  string  $path  file/dir path","\t721: \t\t\t\t\t} elseif (is_file($p)) {","\t722: \t\t\t\t\t\t$this->archiveSize += filesize($p);","\t728: \t\t\t$this->archiveSize += filesize($path);","\t735: \t * Extract files from archive","\t764: \t\t\t// get files list","\t772: \t\t\t// no files - extract error ?","\t788: \t\t\t// check max files size","\t789: \t\t\tif ($this->options['maxArcFilesSize'] > 0 && $this->options['maxArcFilesSize'] < $this->archiveSize) {","\t802: \t\t\t\t// for several files - create new directory","\t809: \t\t\t\tif (file_exists($test) || is_link($test)) {","\t824: \t\t\treturn file_exists($result) ? $result : false;","\t832: \t * @param  array   $files  files names list","\t839: \tprotected function _archive($dir, $files, $name, $arc) {","\t843: \t\t$files = array_map('escapeshellarg', $files);","\t845: \t\t$cmd = $arc['cmd'].' '.$arc['argc'].' '.escapeshellarg($name).' '.implode(' ', $files);","\t850: \t\treturn file_exists($path) ? $path : false;","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/elFinderVolumeMySQL.class.php:","\t27: \t * Tables to store files","\t34: \t * Directory for tmp files","\t70: \t\t\t'files_table'   => 'elfinder_file',","\t96: \t\t||  !$this->options['files_table']) {","\t110: \t\t\t\tif ($row[0] == $this->options['files_table']) {","\t111: \t\t\t\t\t$this->tbf = $this->options['files_table'];","\t138: \t\t\tif (!file_exists($tmp)) {","\t213: \t * Search files","\t260: \t * Return temporary file path for required file","\t262: \t * @param  string  $path   file path","\t273: \t * @param  string   $hash    image file","\t286: \t\tif (($file = $this->file($hash)) == false) {","\t287: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t290: \t\tif (!$file['write'] || !$file['read']) {","\t296: \t\tif (!$this->canResize($path, $file)) {","\t337: \t\t\t$sql = sprintf('UPDATE %s SET content=LOAD_FILE(\"%s\"), mtime=UNIX_TIMESTAMP() WHERE id=%d', $this->tbf, $this->loadFilePath($img), $path);","\t340: \t\t\t\t$content = file_get_contents($img);","\t348: \t\t\t$this->rmTmb($file);","\t410: \t * @param  int   $path  file path (id)","\t418: \t\t\tif ($file = $this->stat($path)) {","\t420: \t\t\t\t$path = isset($file['phash']) ? $this->decode($file['phash']) : false;","\t431: \t * Return correct file path for LOAD_FILE method","\t433: \t * @param  string $path  file path (id)","\t437: \tprotected function loadFilePath($path) {","\t446: \t * Recursive files search","\t464: \t * @param  string  $path  file path","\t473: \t * Return file name","\t475: \t * @param  string  $path  file path","\t484: \t * Join dir name and file name and return full path","\t513: \t * Return file path related to root dir","\t515: \t * @param  string  $path  file path","\t526: \t * @param  string  $path  file path","\t537: \t * @param  string  $path  file path","\t542: \t\tif (($file = $this->stat($path)) == false) {","\t552: \t\treturn $path.$file['name'];","\t569: \t/***************** file stat ********************/","\t573: \t * - (int)    size    file size in b. required","\t574: \t * - (int)    ts      file modification time in unix time. required","\t583: \t * If file does not exists - returns empty array or false.","\t585: \t * @param  string  $path    file path ","\t633: \t * @param  string  $path  file path","\t634: \t * @param  string  $mime  file mime type","\t642: \t/******************** file/dir content *********************/","\t645: \t * Return files list in directory.","\t658: \t * Open file and return file pointer","\t660: \t * @param  string  $path  file path","\t661: \t * @param  string  $mode  open file mode (ignored in this driver)","\t668: \t\t\t: @tmpfile();","\t686: \t * Close opened file","\t688: \t * @param  resource  $fp  file pointer","\t699: \t/********************  file/dir manipulations *************************/","\t714: \t * Create file and return it's path or false on failed","\t717: \t * @param string  $name  new file name","\t721: \tprotected function _mkfile($path, $name) {","\t738: \t * Copy file into another file","\t740: \t * @param  string  $source     source file path","\t742: \t * @param  string  $name       new file name","\t758: \t * Move file into another parent dir.","\t759: \t * Return new file path or false.","\t761: \t * @param  string  $source  source file path","\t763: \t * @param  string  $name    file name","\t774: \t * Remove file","\t776: \t * @param  string  $path  file path","\t810: \t * Create new file and write into it from file pointer.","\t811: \t * Return new file path or false on error.","\t813: \t * @param  resource  $fp   file pointer","\t815: \t * @param  string    $name file name","\t816: \t * @param  array     $stat file stat (required by some virtual fs)","\t832: \t\tif (($tmpfile = tempnam($this->tmpPath, $this->id))) {","\t833: \t\t\tif (($trgfp = fopen($tmpfile, 'wb')) == false) {","\t834: \t\t\t\tunlink($tmpfile);","\t842: \t\t\t\t\t? 'REPLACE INTO %s (id, parent_id, name, content, size, mtime, mime, width, height) VALUES ('.$id.', %d, \"%s\", LOAD_FILE(\"%s\"), %d, %d, \"%s\", %d, %d)'","\t843: \t\t\t\t\t: 'INSERT INTO %s (parent_id, name, content, size, mtime, mime, width, height) VALUES (%d, \"%s\", LOAD_FILE(\"%s\"), %d, %d, \"%s\", %d, %d)';","\t844: \t\t\t\t$sql = sprintf($sql, $this->tbf, $dir, $this->db->real_escape_string($name), $this->loadFilePath($tmpfile), $size, time(), $mime, $w, $h);","\t847: \t\t\t\tunlink($tmpfile);","\t877: \t * Get file contents","\t879: \t * @param  string  $path  file path","\t888: \t * Write a string to a file","\t890: \t * @param  string  $path     file path","\t891: \t * @param  string  $content  new file content","\t895: \tprotected function _filePutContents($path, $content) {","\t924: \t * @param  string  $path  file/dir path","\t933: \t * Extract files from archive","\t949: \t * @param  array   $files  files names list","\t956: \tprotected function _archive($dir, $files, $name, $arc) {","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/mime.types:","\t1: # This file controls what Internet media types are sent to the client for","\t2: # given file extension(s).  Sending the correct media type to the client","\t3: # is important so they know how to handle the content of the file.","\t109: application/x-class-file","\t235: application/x-profile","\t446: text/x-makefile","\t498: application/x-java-jnlp-file      jnlp","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/MySQLStorage.sql:","\t1: DROP TABLE IF EXISTS `elfinder_file`;","\t2: CREATE TABLE IF NOT EXISTS `elfinder_file` (","\t21: INSERT INTO `elfinder_file`","","/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/example.html:","\t4: <link type=\"text/css\" rel=\"stylesheet\" href=\"jquery.fileManager.css\" />","\t11: <script type=\"text/javascript\" src=\"jquery.fileManager.js\"></script>","\t15: <h1>jQuery.fileManager</h1>","\t19: <div id=\"filemanager\"></div>","\t23: \t$('#filemanager').fileManager({ajaxPath:'fileManager.php'});","\t28: <div id=\"filemanager_upload\"></div>","\t30: \t$('#filemanager_upload').fileManager({ajaxPath:'fileManager.php',upload:true});","\t35: <div id=\"filemanager_events\"></div>","\t37: \t$('#filemanager_events').fileManager({","\t38: \t\tajaxPath:'fileManager.php',","","/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/fileManager.php:","\t3: * File Manager","\t27: * allow managing of files outside of this path.","\t30: * ajax features of the File Manager.  Including callbacks for deleting","\t31: * or renaming files.","\t35: jqFileManager::ProcessAjax(  dirname(__FILE__).'/uploads'  );","\t38: class jqFileManager {","\t57: \t\treturn self::GetRelativePath(dirname(__FILE__)).DIRECTORY_SEPARATOR;","\t60: \t\treturn self::GetRelativePath(__FILE__);","\t63: \t\treturn self::GetPathFolder().'jquery.fileManager.js';","\t66: \t\treturn self::GetPathFolder().'jquery.fileManager.css';","\t84: \t\tif (!file_exists($path)) mkdir($path,octdec('0777'),true);","\t86: \t\tif (isset($_FILES['file'])) return self::ProcessUpload($path);","\t94: \t\t\tif (!file_exists($from)) {","\t95: \t\t\t\techo 'alert(\"File or Folder no longer exists\");';","\t114: \t\t\tif (file_exists($to)) {","\t131: \t\t$files = array_merge(array_filter($glob, 'is_dir'),array_filter($glob, 'is_file'));","\t132: \t\tforeach ($files as $file) {","\t133: \t\t\t$filename = basename($file);","\t134: \t\t\tif ($filename === '..' || $filename === '.') continue;","\t135: \t\t\tif (!is_dir($file) && array_key_exists('filter',$_POST) && !preg_match('/'.$_POST['filter'].'/i',$filename)) continue;","\t136: \t\t\t$icon = (is_callable($iconCallback)) ? call_user_func($iconCallback,$file) : '';","\t137: \t\t\tself::AddIcon($filename,$filename,is_dir($file)?1:0,$icon);","\t140: \t\t// uPath is full path less rootpath less filename","\t144: \t\techo json_encode(array('rootPath'=>self::GetRelativePath($rootPath),'path'=>$uPath,'files'=>self::$data));","\t161: \t\t$cleanupTargetDir = false; // Remove old files","\t162: \t\t$maxFileAge = 60 * 60; // Temp file age in seconds","\t171: \t\t$fileName = array_key_exists('name',$_REQUEST) ? $_REQUEST[\"name\"] : '';","\t173: \t\t// Clean the fileName for security reasons","\t174: \t\t$fileName = preg_replace('/[^\\w\\._]+/', '', $fileName);","\t175: \t\tif (is_dir($targetDir . DIRECTORY_SEPARATOR . $fileName)) {","\t180: \t\tif (!file_exists($targetDir)) {","\t185: \t\t// Remove old temp files","\t187: \t\t\twhile (($file = readdir($dir)) !== false) {","\t188: \t\t\t\t$filePath = $targetDir . DIRECTORY_SEPARATOR . $file;","\t190: \t\t\t\t// Remove temp files if they are older than the max age","\t191: \t\t\t\tif (preg_match('/\\\\.tmp$/', $file) && (filemtime($filePath) < time() - $maxFileAge))","\t192: \t\t\t\t\tunlink($filePath);","\t209: \t\t\tif (isset($_FILES['file']['tmp_name']) && is_uploaded_file($_FILES['file']['tmp_name'])) {","\t210: \t\t\t\t// Open temp file","\t211: \t\t\t\t$out = fopen($targetDir . DIRECTORY_SEPARATOR . $fileName, $chunk == 0 ? \"wb\" : \"ab\");","\t213: \t\t\t\t\t// Read binary input stream and append it to temp file","\t214: \t\t\t\t\t$in = fopen($_FILES['file']['tmp_name'], \"rb\");","\t224: \t\t\t\t\tunlink($_FILES['file']['tmp_name']);","\t229: \t\t\t\techo '{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 103, \"message\": \"Failed to move uploaded file.\"}, \"id\" : \"id\"}';","\t232: \t\t\t// Open temp file","\t233: \t\t\t$out = fopen($targetDir . DIRECTORY_SEPARATOR . $fileName, $chunk == 0 ? \"wb\" : \"ab\");","\t235: \t\t\t\t// Read binary input stream and append it to temp file","","/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/jquery.fileManager.css:","\t2: \tbackground-image:url(images/file64.png); background-repeat:no-repeat; background-position:top left;","","/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/jquery.fileManager.js:","\t2: * File Manager","\t37: \t$.fn.fileManager = function(settings, pluploadOptions) {","\t67: \t\t\t\tif ($(data.files).length == 0) {","\t68: \t\t\t\t  $sel.append('<div style=\"font-size:1.3em;padding:0.5em\">No files in this folder.</div>');","\t70: \t\t\t\t$(data.files).each(function () {","\t78: \t\t\t\t\t$sel.append($('<div>Upload Files</div>').button().bind('click',{container:ul},UploadFiles));","\t88: \t\t\tfunction UploadFiles(event) {","\t92: \t\t\t\t\topts.init = $.extend({},opts.init,{FileUploaded:function (uploader,file,response) { if (uploader.total.queued == 0) RefreshView($sel); }});","\t109: \t\tfunction FileDropped(event,ui) {","\t141: \t\t\ttarget.fileManager($.extend({},mbOptions,{path:path}),pluploadOptions);","\t144: \t\tvar ICONTYPE_FILE = 0;","\t165: \t\t\t\t\ticon.droppable({tolerance:'intersect',accept:'.'+mbOptions.baseClass,drop:FileDropped,hoverClass:mbOptions.hoverClass,activeClass:mbOptions.highlightClass});","\t167: \t\t\t\t\ticon.draggable({stack:'files',revert:true,zIndex:1000,opacity:0.5,scroll:false});","\t170: \t\t\tif (item.type == ICONTYPE_FILE && item.path.search(/.jpeg|.jpg|.png|.gif|.tif|.tiff/i) > -1) {","","/clouddrive/clouddrive/myapp/templates/static/styles/bootstrap.css:","\t1177: input[type=\"file\"],","\t1188: input[type=\"file\"] {","\t1210: input[type=\"file\"]:focus,","\t2344: .icon-film {","\t2396: .icon-file {","\t2863: .icon-filter {","\t2970:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff0088cc', endColorstr='#ff0077b3', GradientType=0);","\t2986:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff0088cc', endColorstr='#ff0077b3', GradientType=0);","\t3001:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3178:   filter: alpha(opacity=20);","\t3187:   filter: alpha(opacity=40);","\t3227:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#ffe6e6e6', GradientType=0);","\t3228:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3286:   filter: alpha(opacity=65);","\t3373:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff0088cc', endColorstr='#ff0044cc', GradientType=0);","\t3374:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3406:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffbb450', endColorstr='#fff89406', GradientType=0);","\t3407:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3439:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffee5f5b', endColorstr='#ffbd362f', GradientType=0);","\t3440:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3472:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff62c462', endColorstr='#ff51a351', GradientType=0);","\t3473:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3505:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de', endColorstr='#ff2f96b4', GradientType=0);","\t3506:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3538:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff444444', endColorstr='#ff222222', GradientType=0);","\t3539:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t4222:   filter: alpha(opacity=100);","\t4387:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#fff2f2f2', GradientType=0);","\t4661:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff2f2f2', endColorstr='#ffe5e5e5', GradientType=0);","\t4662:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t4802:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff222222', endColorstr='#ff111111', GradientType=0);","\t4929:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff151515', endColorstr='#ff040404', GradientType=0);","\t4930:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t5196:   filter: alpha(opacity=80);","\t5305:   filter: alpha(opacity=0);","\t5311:   filter: alpha(opacity=80);","\t5793:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff5f5f5', endColorstr='#fff9f9f9', GradientType=0);","\t5814:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff149bdf', endColorstr='#ff0480be', GradientType=0);","\t5863:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffee5f5b', endColorstr='#ffc43c35', GradientType=0);","\t5885:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff62c462', endColorstr='#ff57a957', GradientType=0);","\t5907:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de', endColorstr='#ff339bb9', GradientType=0);","\t5929:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffbb450', endColorstr='#fff89406', GradientType=0);","\t6055:   filter: alpha(opacity=50);","\t6068:   filter: alpha(opacity=90);","","Found 5076 matches in 148 files ",""]},{"start":{"row":4383,"column":0},"end":{"row":4384,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":35},"end":{"row":0,"column":69},"action":"insert","lines":[" (Found 5076 matches in 148 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":4384,"column":0},"action":"remove","lines":["Searching for \u0001fil\u0001 in\u0001/clouddrive\u0001 (Found 5076 matches in 148 files)","","/clouddrive/settings.py:","\t7: of this software and associated documentation files (the \"Software\"), to deal","\t31: BASE_DIR = Path(__file__).resolve().parent.parent","\t42: #         'NAME': 'clouddrivedb',                      # Or path to database file if using sqlite3.","\t89: # Absolute filesystem path to the directory that will hold user-uploaded files.","\t102: # Absolute path to the directory static files should be collected to.","\t103: # Don't put anything in this directory yourself; store your static files","\t104: # in apps' \"static/\" subdirectories and in STATICFILES_DIRS.","\t108: # URL prefix for static files.","\t112: # Additional locations of static files","\t113: STATICFILES_DIRS = [","\t122: # List of finder classes that know how to find static files in","\t124: STATICFILES_FINDERS = (","\t125:     'django.contrib.staticfiles.finders.FileSystemFinder',","\t126:     'django.contrib.staticfiles.finders.AppDirectoriesFinder',","\t127: #    'django.contrib.staticfiles.finders.DefaultStorageFinder',","\t135:     'django.template.loaders.filesystem.Loader',","\t182:     #os.path.join(os.path.realpath(__file__), '../templates'),","\t192:     'django.contrib.staticfiles',","","/clouddrive/urls.py:","\t7: of this software and associated documentation files (the \"Software\"), to deal","\t35: #     url(r'^profile/$', 'myapp.views.profile_view'),","\t37: #     url(r'^delete/(?P<filename>[\\w\\. ]+)$', 'myapp.views.delete_view'),","\t54: #     path(r'^profile/$', views.profile_view, name=\"profile_view\"),","\t56: #     path(r'^delete/(?P<filename>[\\w\\. ]+)$', views.delete_view, name=\"elete_view\"),","","/clouddrive/wsgi.py:","\t25: # file. This includes Django's development server, if the WSGI_APPLICATION","","/clouddrive/clouddrive/lab8_updated (2).pdf:","\t13: <</Filter/FlateDecode/Length 4423>>","\t72: <</Type/FontDescriptor/FontName/TimesNewRomanPSMT/Flags 32/ItalicAngle 0/Ascent 891/Descent -216/CapHeight 693/AvgWidth 401/MaxWidth 2614/FontWeight 400/XHeight 250/Leading 42/StemV 40/FontBBox[ -568 -216 2046 693] /FontFile2 102 0 R>>","\t93: <</Type/FontDescriptor/FontName/SymbolMT/Flags 32/ItalicAngle 0/Ascent 1005/Descent -216/CapHeight 693/AvgWidth 600/MaxWidth 1113/FontWeight 400/XHeight 250/StemV 60/FontBBox[ 0 -216 1113 693] /FontFile2 106 0 R>>","\t105: <</Type/FontDescriptor/FontName/BCDEEE+CourierNewPSMT/Flags 32/ItalicAngle 0/Ascent 833/Descent -188/CapHeight 613/AvgWidth 600/MaxWidth 744/FontWeight 400/XHeight 250/StemV 60/FontBBox[ -122 -188 623 613] /FontFile2 110 0 R>>","\t117: <</Type/FontDescriptor/FontName/BCDFEE+Consolas/Flags 32/ItalicAngle 0/Ascent 743/Descent -257/CapHeight 743/AvgWidth 550/MaxWidth 1109/FontWeight 400/XHeight 250/StemV 55/FontBBox[ -432 -257 677 743] /FontFile2 113 0 R>>","\t132: <</Type/FontDescriptor/FontName/BCDGEE+Consolas/Flags 32/ItalicAngle 0/Ascent 743/Descent -257/CapHeight 743/AvgWidth 550/MaxWidth 1109/FontWeight 400/XHeight 250/StemV 55/FontBBox[ -432 -257 677 743] /FontFile2 113 0 R>>","\t138: <</Filter/FlateDecode/Length 865>>","\t149: <</Type/XObject/Subtype/Image/Width 485/Height 319/ColorSpace/DeviceRGB/BitsPerComponent 8/Interpolate false/Filter/FlateDecode/Length 21502>>","\t224: <</Type/ObjStm/N 55/First 419/Filter/FlateDecode/Length 1030>>","\t248: <</Filter/FlateDecode/Length 339>>","\t256: <</Filter/FlateDecode/Length 50357/Length1 105912>>","\t457: <</Filter/FlateDecode/Length 226>>","\t464: <</Filter/FlateDecode/Length 6033/Length1 11088>>","\t505: <</Filter/FlateDecode/Length 18868/Length1 44088>>","\t596: <</Filter/FlateDecode/Length 226>>","\t603: <</Filter/FlateDecode/Length 23034/Length1 52144>>","\t757: <</Type/XRef/Size 118/W[ 1 4 2] /Root 1 0 R/Info 39 0 R/ID[<A1FFD79CC8844B42B1E3C20E16E7FECF><A1FFD79CC8844B42B1E3C20E16E7FECF>] /Filter/FlateDecode/Length 324>>","","/clouddrive/clouddrive/clouddrive/settings.py:","\t7: of this software and associated documentation files (the \"Software\"), to deal","\t31: BASE_DIR = Path(__file__).resolve().parent.parent","\t42: #         'NAME': 'clouddrivedb',                      # Or path to database file if using sqlite3.","\t89: # Absolute filesystem path to the directory that will hold user-uploaded files.","\t102: # Absolute path to the directory static files should be collected to.","\t103: # Don't put anything in this directory yourself; store your static files","\t104: # in apps' \"static/\" subdirectories and in STATICFILES_DIRS.","\t108: # URL prefix for static files.","\t112: # Additional locations of static files","\t113: STATICFILES_DIRS = [","\t122: # List of finder classes that know how to find static files in","\t124: STATICFILES_FINDERS = (","\t125:     'django.contrib.staticfiles.finders.FileSystemFinder',","\t126:     'django.contrib.staticfiles.finders.AppDirectoriesFinder',","\t127: #    'django.contrib.staticfiles.finders.DefaultStorageFinder',","\t135:     'django.template.loaders.filesystem.Loader',","\t182:     #os.path.join(os.path.realpath(__file__), '../templates'),","\t192:     'django.contrib.staticfiles',","","/clouddrive/clouddrive/clouddrive/urls.py:","\t7: of this software and associated documentation files (the \"Software\"), to deal","\t35: #     url(r'^profile/$', 'myapp.views.profile_view'),","\t37: #     url(r'^delete/(?P<filename>[\\w\\. ]+)$', 'myapp.views.delete_view'),","\t54: #     path(r'^profile/$', views.profile_view, name=\"profile_view\"),","\t56: #     path(r'^delete/(?P<filename>[\\w\\. ]+)$', views.delete_view, name=\"elete_view\"),","","/clouddrive/clouddrive/clouddrive/wsgi.py:","\t25: # file. This includes Django's development server, if the WSGI_APPLICATION","","/clouddrive/clouddrive/myapp/forms.py:","\t7: of this software and associated documentation files (the \"Software\"), to deal","\t31: class UploadFileForm(forms.Form):","\t32:     myfilefield  = forms.FileField()","","/clouddrive/clouddrive/myapp/s3upload.py:","\t7: of this software and associated documentation files (the \"Software\"), to deal","\t36: def upload_to_s3_bucket_path(bucketname, path, filename):","\t38: \tfullkeyname=os.path.join(path,filename)","\t40: \t# key.set_contents_from_filename(filename, cb=percent_cb, num_cb=10)","\t41: \tconn.Object(bucketname, fullkeyname).put(Body=open(filename, 'rb'))","\t44: def upload_to_s3_bucket_root(bucketname, filename):","\t46: \tkey = mybucket.new_key(filename)","\t47: \tkey.set_contents_from_filename(filename, cb=percent_cb, num_cb=10)","\t49: def getuserfiles(bucketname,username):","\t53: \tuserfiles = {}","\t57: \t\tfilename = key.key","\t58: \t\tfilename=filename.replace(username+'/media/','') #this does not appear to change the filename","\t62: \t\tuserfiles[filename]=value","\t65: \treturn userfiles,totalsize","\t67: def delete_from_s3(bucketname, username,filename):","\t69: \tmybucket.delete_key(username+'/media/'+filename)","","/clouddrive/clouddrive/myapp/tests.py:","\t2: This file demonstrates writing tests using the unittest module. These will pass","","/clouddrive/clouddrive/myapp/urls.py:","\t10:     path('profile/', views.profile_view, name=\"profile_view\"),","\t12:     path('delete/(?P<filename>[\\. ]+)$', views.delete_view, name=\"delete_view\"),","","/clouddrive/clouddrive/myapp/views.py:","\t7: of this software and associated documentation files (the \"Software\"), to deal","\t29: from .forms import LoginForm, UploadFileForm","\t45: def profile_view(request):","\t57: \treturn render(request, 'profile.html',{'form': form, 'username': username, 'email': email, 'fname':fname, 'lname': lname})","\t69: def handle_uploaded_file(f,username):","\t70: \tuploadfilename=f.name","\t71: \twith open(uploadfilename, 'wb+') as destination:","\t75: \tupload_to_s3_bucket_path('seng4620bucket', username, uploadfilename)","\t76: \treturn uploadfilename","\t80: def delete_view(request,filename):","\t82: \tdelete_from_s3('seng4620bucket', username,filename)","\t83: \tuserfiles,totalsize = getuserfiles('seng4620bucket', username)","\t86: \treturn render(request, 'index.html',{'username':username,'userfiles': userfiles,'totalsize':totalsize,'limit':limit,'percentused':percentused})","\t92: \t\tform = UploadFileForm(request.POST, request.FILES)","\t95: \t\t\toutputfilename = handle_uploaded_file(request.FILES['myfilefield'],username)","\t96: \t\t\tuserfiles,totalsize = getuserfiles('seng4620bucket', username)","\t99: \t\t\treturn render(request,'index.html',{'username':username,'userfiles': userfiles,'totalsize':totalsize,'limit':limit,'percentused':percentused})","\t101: \t\tform = UploadFileForm() ","\t115: \t\t\t\tuserfiles,totalsize = getuserfiles('seng4620bucket', username)","\t118: \t\t\t\treturn render(request,'index.html',{'username':username,'userfiles': userfiles,'totalsize':totalsize,'limit':limit,'percentused':percentused})","\t122: \t\t\tuserfiles,totalsize = getuserfiles('seng4620bucket', username)","\t125: \t\t\treturn render(request,'index.html',{'username':username,'userfiles': userfiles,'totalsize':totalsize,'limit':limit,'percentused':percentused})","\t131: \treturn render(request,'filemanager.html', {})","","/clouddrive/clouddrive/myapp/templates/filemanager.html:","\t72: \t<script src=\"/static/elFinder/js/commands/getfile.js\"></script>","\t74: \t<script src=\"/static/elFinder/js/commands/mkfile.js\"></script>","\t161: \t\t\t\t\tgetFileCallback : function(files, fm) {","\t162: \t\t\t\t\t\tconsole.log(files);","\t165: \t\t\t\t\t\tgetfile : {","\t199: <a href='/profile'>View/Edit Profile</a> | ","","/clouddrive/clouddrive/myapp/templates/index.html:","\t31: <td width=\"500\"><h5>File</h5></td>","\t37: {% for key,val in userfiles.items %}","\t48: <a href='/upload'>Upload File</a>|","\t49: <a href='/profile'>View/Edit Profile</a> | ","","/clouddrive/clouddrive/myapp/templates/index1.html:","\t29: <a href='/profile'>View/Edit Profile</a> | ","","/clouddrive/clouddrive/myapp/templates/jobstatus.html:","\t49: <h4>Click <a href=\"http://mi_raw_data.s3.amazonaws.com/{{outputfilename}}\">here</a> to download transcoded video.</h4>","","/clouddrive/clouddrive/myapp/templates/list.html:","\t5: \t\t<title>Minimal Django File Upload Example</title>\t","\t13: \t\t\t\t<li><a href=\"{{ document.docfile.url }}\">{{ document.docfile.name }}</a></li>","\t24: \t\t\t<p>{{ form.docfile.label_tag }} {{ form.docfile.help_text }}</p>","\t26: \t\t\t\t{{ form.docfile.errors }}","\t27: \t\t\t\t{{ form.docfile }}","","/clouddrive/clouddrive/myapp/templates/process.html:","\t33: <h4>Image filter has been successfully applied. </h4>","\t36: <img src = '/static/output/{{outputfilename}}' width='800px' >","","/clouddrive/clouddrive/myapp/templates/profile.html:","\t25: <h3>Profile</h3>","\t62: <a href='/upload'>Upload File</a>|","\t63: <a href='/profile'>View/Edit Profile</a> | ","","/clouddrive/clouddrive/myapp/templates/upload.html:","\t34:             \t{{ form.myfilefield.errors }}","\t35:                 {{ form.myfilefield }}","\t42: <a href='/upload'>Upload File</a>|","\t43: <a href='/profile'>View/Edit Profile</a> | ","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/README.rst:","\t5: jQuery-based file browser.","\t8: underlying file system. django-elfinder uses Django models to store the","\t9: files and directories.","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/docs/conf.py:","\t3: # django-elfinder documentation build configuration file, created by","\t6: # This file is execfile()d with the current directory set to its containing dir.","\t9: # autogenerated file.","\t33: # The suffix of source filenames.","\t36: # The encoding of source files.","\t65: # List of patterns, relative to source directory, that match files and","\t66: # directories to ignore when looking for source files.","\t111: # The name of an image file (relative to this directory) to place at the top","\t115: # The name of an image file (within the static path) to use as favicon of the","\t116: # docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32","\t120: # Add any paths that contain custom static files (such as style sheets) here,","\t121: # relative to this directory. They are copied after the builtin static files,","\t122: # so a file named \"default.css\" will overwrite the builtin \"default.css\".","\t158: # If true, an OpenSearch description file will be output, and all pages will","\t163: # This is the file name suffix for HTML files (e.g. \".xhtml\").","\t164: #html_file_suffix = None","\t166: # Output file base name for HTML help builder.","\t178: # Grouping the document tree into LaTeX files. List of tuples","\t179: # (source start file, target name, title, author, documentclass [howto/manual]).","\t185: # The name of an image file (relative to this directory) to place at the top of","\t212: # (source start file, name, description, authors, manual section).","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/docs/index.rst:","\t5: jQuery-based file browser.","\t8: underlying file system. django-elfinder uses Django models to store the","\t9: files and directories.","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/docs/Makefile:","\t1: # Makefile for Sphinx documentation","\t19: \t@echo \"  html       to make standalone HTML files\"","\t20: \t@echo \"  dirhtml    to make HTML files named index.html in directories\"","\t21: \t@echo \"  singlehtml to make a single large HTML file\"","\t22: \t@echo \"  pickle     to make pickle files\"","\t23: \t@echo \"  json       to make JSON files\"","\t24: \t@echo \"  htmlhelp   to make HTML files and a HTML help project\"","\t25: \t@echo \"  qthelp     to make HTML files and a qthelp project\"","\t26: \t@echo \"  devhelp    to make HTML files and a Devhelp project\"","\t28: \t@echo \"  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter\"","\t29: \t@echo \"  latexpdf   to make LaTeX files and run them through pdflatex\"","\t30: \t@echo \"  text       to make text files\"","\t57: \t@echo \"Build finished; now you can process the pickle files.\"","\t62: \t@echo \"Build finished; now you can process the JSON files.\"","\t68: \t      \".hhp project file in $(BUILDDIR)/htmlhelp.\"","\t74: \t      \".qhcp project file in $(BUILDDIR)/qthelp, like this:\"","\t76: \t@echo \"To view the help file:\"","\t77: \t@echo \"# assistant -collectionFile $(BUILDDIR)/qthelp/django-elfinder.qhc\"","\t83: \t@echo \"To view the help file:\"","\t91: \t@echo \"Build finished. The epub file is in $(BUILDDIR)/epub.\"","\t96: \t@echo \"Build finished; the LaTeX files are in $(BUILDDIR)/latex.\"","\t102: \t@echo \"Running LaTeX files through pdflatex...\"","\t104: \t@echo \"pdflatex finished; the PDF files are in $(BUILDDIR)/latex.\"","\t109: \t@echo \"Build finished. The text files are in $(BUILDDIR)/text.\"","\t119: \t@echo \"The overview file is in $(BUILDDIR)/changes.\"","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/admin.py:","\t3: from .models import File, Directory, FileCollection","\t6: admin.site.register(FileCollection)","\t7: admin.site.register(File)","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/connector.py:","\t2: from elfinder.models import FileCollection, Directory, File","\t13:     create files in other people's file collections, or delete files they","\t49:                 'file': ('__file', {'target': True}),","\t52:                 'mkfile': ('__mkfile', {'target': True, 'name': True}),","\t85:         \"\"\" Returns the volume which contains the file/dir represented by the","\t203:     def __file(self):","\t204:         \"\"\" Handles the 'file' command.","\t206:             Sets return_view, which will cause read_file_view to be rendered","\t207:             as the response. A custom read_file_view can be given when","\t213:         # A file was requested, so set return_view to the read_file view.","\t214:         #self.return_view = self.read_file_view(self.request, volume, target)","\t215:         self.return_view = volume.read_file_view(self.request, target)","\t220:             Sets response['files'] and response['cwd'].","\t222:             If 'tree' is requested, 'files' contains information about all","\t223:             ancestors, siblings and children of the target. Otherwise, 'files'","\t252:                 self.response['files'] = volume.get_tree('',","\t260:             self.response['files'] = volume.get_tree(target,","\t274:     def __mkfile(self):","\t277:         self.response['added'] = [volume.mkfile(self.data['name'], target)]","\t312:         self.response.update(volume.upload(self.request.FILES, parent))","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/models.py:","\t7: class FileCollectionChildMixin:","\t8:     \"\"\" Provides common methods for Files/Directories.","\t20: class Directory(MPTTModel, FileCollectionChildMixin):","\t21:     \"\"\" A Directory in the file structure of a FileCollection. May contain","\t22:         child Directory and File objects.","\t29:     collection = models.ForeignKey('FileCollection')","\t66: class FileCollection(models.Model):","\t67:     \"\"\" A collection of Directory and File objects.","\t69:         # TODO delete files/dirs when deleting file collection","\t76:         \"\"\" Creates a Directory (root node) when the FileCollection is first","\t80:         super(FileCollection, self).save(*args, **kwargs)","\t93: class File(models.Model, FileCollectionChildMixin):","\t94:     \"\"\" A File in a FileCollection.","\t98:                             related_name='files')","\t100:     collection = models.ForeignKey('FileCollection')","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/tests.py:","\t3: from elfinder.models import FileCollection, Directory, File","\t5: import tempfile","\t24:         self.collection = FileCollection.objects.get(pk=1)","\t32: class elFinderFileCollectionTest(TestCase):","\t33:     \"\"\" Tests functions related to creating/editing FileCollection objects.","\t39:     def test_new_filecollection(self):","\t40:         new_coll = FileCollection(name='test')","\t60:         self.collection = FileCollection.objects.get(pk=1)","\t162: class elFinderMkfileCmd(elFinderCmdTest):","\t168:     def test_valid_mkfile(self):","\t169:         vars = ({'cmd': 'mkfile',","\t171:                  'name': 'test file.txt'})","\t174:     def test_duplicate_filename(self):","\t175:         \"\"\" Try to create two files with the same name and ensure it fails.","\t177:         vars = ({'cmd': 'mkfile',","\t179:                  'name': 'dupe_filename_test'})","\t183:                          'File with this Name and Parent already exists.')","\t284:         # Create a temporary directory to use for uploading test files.","\t286:         self.tmp_dir = tempfile.mkdtemp()","\t291:     def get_file(self, name, content):","\t292:         \"\"\" Creates and writes to a new file. Returns the open file handle.","\t299:         fh = self.get_file('new_file.txt', 'testing')","\t305:         self.assertEqual(response.json['added'][0]['name'], 'new_file.txt')","\t307:     def test_dupe_filename_upload(self):","\t308:         # The 'Dickens, Charles' directory already has a file with this name.","\t309:         fh = self.get_file('A Tale of Two Cities', 'testing')","\t316:                          'File with this Name and Parent already exists.')","\t319: class elFinderFileCmd(elFinderCmdTest):","\t321:         super(elFinderFileCmd, self).setUp()","\t322:         self.file = File.objects.get(pk=1)","\t324:     def test_valid_file(self):","\t325:         vars = {'cmd': 'file',","\t329:         self.assertTemplateUsed(response, 'read_file.html')","\t330:         self.assertEqual(response.context['file'], self.file)","\t332:     def test_invalid_file(self):","\t333:         vars = ({'cmd': 'file',","\t340:             vars = {'cmd': 'file',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/views.py:","\t7: from elfinder.models import FileCollection","\t12:     \"\"\" Displays the elFinder file browser template for the specified","\t13:         FileCollection.","\t15:     collection = FileCollection.objects.get(pk=coll_id)","\t30:     # Some commands (e.g. read file) will return a Django View - if it","\t45: def read_file(request, volume, file_hash, template=\"read_file.html\"):","\t46:     \"\"\" Default view for responding to \"open file\" requests.","\t48:         coll: FileCollection this File belongs to","\t49:         file: The requested File object","\t52:                               {'file': file_hash},","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/fixtures/testdata.json:","\t1: [{\"pk\": 1, \"model\": \"elfinder.directory\", \"fields\": {\"rght\": 12, \"name\": \"Books\", \"parent\": null, \"level\": 0, \"collection\": 1, \"lft\": 1, \"tree_id\": 1}}, {\"pk\": 2, \"model\": \"elfinder.directory\", \"fields\": {\"rght\": 7, \"name\": \"D\", \"parent\": 1, \"level\": 1, \"collection\": 1, \"lft\": 2, \"tree_id\": 1}}, {\"pk\": 4, \"model\": \"elfinder.directory\", \"fields\": {\"rght\": 4, \"name\": \"Dickens, Charles\", \"parent\": 2, \"level\": 2, \"collection\": 1, \"lft\": 3, \"tree_id\": 1}}, {\"pk\": 5, \"model\": \"elfinder.directory\", \"fields\": {\"rght\": 6, \"name\": \"Doyle, Arthur Conan\", \"parent\": 2, \"level\": 2, \"collection\": 1, \"lft\": 5, \"tree_id\": 1}}, {\"pk\": 3, \"model\": \"elfinder.directory\", \"fields\": {\"rght\": 11, \"name\": \"S\", \"parent\": 1, \"level\": 1, \"collection\": 1, \"lft\": 8, \"tree_id\": 1}}, {\"pk\": 6, \"model\": \"elfinder.directory\", \"fields\": {\"rght\": 10, \"name\": \"Stevenson, Robert Louis\", \"parent\": 3, \"level\": 2, \"collection\": 1, \"lft\": 9, \"tree_id\": 1}}, {\"pk\": 1, \"model\": \"elfinder.filecollection\", \"fields\": {\"name\": \"Books\"}}, {\"pk\": 1, \"model\": \"elfinder.file\", \"fields\": {\"content\": \"To Sherlock Holmes she is always the woman. I have seldom heard him mention her under any other name. In his eyes she eclipses and predominates the whole of her sex. It was not that he felt any emotion akin to love for Irene Adler. All emotions, and that one particularly, were abhorrent to his cold, precise but admirably balanced mind. He was, I take it, the most perfect reasoning and observing machine that the world has seen, but as a lover he would have placed himself in a false position. He never spoke of the softer passions, save with a gibe and a sneer. They were admirable things for the observer\\u2014excellent for drawing the veil from men\\u2019s motives and actions. But for the trained reasoner to admit such intrusions into his own delicate and finely adjusted temperament was to introduce a distracting factor which might throw a doubt upon all his mental results. Grit in a sensitive instrument, or a crack in one of his own high-power lenses, would not be more disturbing than a strong emotion in a nature such as his. And yet there was but one woman to him, and that woman was the late Irene Adler, of dubious and questionable memory.\", \"name\": \"The Adventures of Sherlock Holmes\", \"parent\": 5, \"collection\": 1}}, {\"pk\": 2, \"model\": \"elfinder.file\", \"fields\": {\"content\": \"Marley was dead: to begin with. There is no doubt whatever about that. The register of his burial was signed by the clergyman, the clerk, the undertaker, and the chief mourner. Scrooge signed it: and Scrooge\\u2019s name was good upon \\u2019Change, for anything he chose to put his hand to. Old Marley was as dead as a door-nail.\\r\\n\\r\\nMind! I don\\u2019t mean to say that I know, of my own knowledge, what there is particularly dead about a door-nail. I might have been inclined, myself, to regard a coffin-nail as the deadest piece of ironmongery in the trade. But the wisdom of our ancestors is in the simile; and my unhallowed hands shall not disturb it, or the Country\\u2019s done for. You will therefore permit me to repeat, emphatically, that Marley was as dead as a door-nail.\", \"name\": \"A Christmas Carol\", \"parent\": 4, \"collection\": 1}}, {\"pk\": 3, \"model\": \"elfinder.file\", \"fields\": {\"content\": \"Book the First\\u2014Recalled to Life\\r\\n\\r\\nI. The Period\\r\\n\\r\\nIt was the best of times,\\r\\nit was the worst of times,\\r\\nit was the age of wisdom,\\r\\nit was the age of foolishness,\\r\\nit was the epoch of belief,\\r\\nit was the epoch of incredulity,\\r\\nit was the season of Light,\\r\\nit was the season of Darkness,\\r\\nit was the spring of hope,\\r\\nit was the winter of despair,\\r\\nwe had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way\\u2014 in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only.\", \"name\": \"A Tale of Two Cities\", \"parent\": 4, \"collection\": 1}}, {\"pk\": 4, \"model\": \"elfinder.file\", \"fields\": {\"content\": \"SQUIRE TRELAWNEY, Dr. Livesey, and the rest of these gentlemen having asked me to write down the whole particulars about Treasure Island, from the beginning to the end, keeping nothing back but the bearings of the island, and that only because there is still treasure not yet lifted, I take up my pen in the year of grace 17__ and go back to the time when my father kept the Admiral Benbow inn and the brown old seaman with the sabre cut first took up his lodging under our roof.\\r\\n\\r\\nI remember him as if it were yesterday, as he came plodding to the inn door, his sea-chest following behind him in a hand-barrow\\u2014a tall, strong, heavy, nut-brown man, his tarry pigtail falling over the shoulder of his soiled blue coat, his hands ragged and scarred, with black, broken nails, and the sabre cut across one cheek, a dirty, livid white. I remember him looking round the cover and whistling to himself as he did so, and then breaking out in that old sea-song that he sang so often afterwards:\\r\\n\\r\\n          \\\"Fifteen men on the dead man's chest\\u2014\\r\\n             Yo-ho-ho, and a bottle of rum!\\\"\", \"name\": \"Treasure Island\", \"parent\": 6, \"collection\": 1}}]","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/css/elfinder.full.css:","\t2:  * elFinder - file manager for web","\t10: /* File: /root/tmp/elFinder/css/commands.css */","\t161: /* edit text file textarea */","\t162: .elfinder-file-edit {","\t258: /* File: /root/tmp/elFinder/css/common.css */","\t276: /* dir/file permissions and symlink markers */","\t320: /* files num in drag helper */","\t342: .elfinder-overlay { opacity: 0; filter:Alpha(Opacity=0); }","\t356: /* File: /root/tmp/elFinder/css/contexmenu.css */","\t427: /* File: /root/tmp/elFinder/css/cwd.css */","\t463: /* file container */","\t464: .elfinder-cwd-view-icons .elfinder-cwd-file {","\t474: .elfinder-ltr .elfinder-cwd-view-icons .elfinder-cwd-file { float:left;  margin:0 3px 12px 0; }","\t475: .elfinder-rtl .elfinder-cwd-view-icons .elfinder-cwd-file { float:right; margin:0 0 5px 3px; }","\t478: .elfinder-cwd-view-icons .elfinder-cwd-file .ui-state-hover { border:0 solid; }","\t481: .elfinder-cwd-view-icons .elfinder-cwd-file-wrapper {","\t489: /* file name place */","\t490: .elfinder-cwd-view-icons .elfinder-cwd-filename {","\t606: /* filename container */","\t607: .elfinder-cwd-view-list .elfinder-cwd-file-wrapper { width:97%; position:relative; }","\t608: /* filename container in ltr/rtl enviroment */","\t609: .elfinder-ltr .elfinder-cwd-view-list .elfinder-cwd-file-wrapper { padding-left:23px;  }","\t610: .elfinder-rtl .elfinder-cwd-view-list .elfinder-cwd-file-wrapper { padding-right:23px; }","\t619: /* file icon */","\t634: /* File: /root/tmp/elFinder/css/dialog.css */","\t753: .elfinder-dialog-icon-file        { background-position: 0 -225px; }","\t756: .elfinder-dialog-icon-mkfile      { background-position: 0 -96px; }","\t777: /*********************** FILE INFO DIALOG **************************/","\t839: \topacity: 0; filter:Alpha(Opacity=0);","\t875: /* File: /root/tmp/elFinder/css/navbar.css */","\t1013: \topacity: .5; filter:Alpha(Opacity=50);","\t1026: /* File: /root/tmp/elFinder/css/places.css */","\t1028: /* File: /root/tmp/elFinder/css/quicklook.css */","\t1114: /* wrapper for file info/icon */","\t1123: /* file info */","\t1128: /* file name in info */","\t1143: /* file icon */","\t1207: /* prev file icon */","\t1212: /* next file icon */","\t1232: /* text files preview wrapper */","\t1297: /* File: /root/tmp/elFinder/css/statusbar.css */","\t1326: /* File: /root/tmp/elFinder/css/toolbar.css */","\t1395: .elfinder .elfinder-button.ui-state-disabled { opacity:1; filter:Alpha(Opacity=100);}","\t1396: .elfinder .elfinder-button.ui-state-disabled .elfinder-button-icon { opacity:.4; filter:Alpha(Opacity=40);}","\t1417: .elfinder-button-icon-mkfile    { background-position: 0 -208px; }","\t1422: .elfinder-button-icon-getfile   { background-position: 0 -288px; }","\t1483: \topacity: 0; filter:Alpha(Opacity=0);","\t1528: \tfilter:Alpha(Opacity=60);","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/css/elfinder.min.css:","\t2:  * elFinder - file manager for web","\t9: .elfinder-resize-control{padding-top:1em}.elfinder-resize-control input[type=text]{border:1px solid #aaa}.elfinder-resize-preview{width:400px;height:400px;padding:10px;background:#fff;border:1px solid #aaa;float:right;position:relative;overflow:auto}.elfinder-resize-handle{position:relative}.elfinder-resize-handle-hline,.elfinder-resize-handle-vline{position:absolute;background-image:url(\"../img/crop.gif\")}.elfinder-resize-handle-hline{width:100%;height:1px!important;background-repeat:repeat-x}.elfinder-resize-handle-vline{width:1px!important;height:100%;background-repeat:repeat-y}.elfinder-resize-handle-hline-top{top:0;left:0}.elfinder-resize-handle-hline-bottom{bottom:0;left:0}.elfinder-resize-handle-vline-left{top:0;left:0}.elfinder-resize-handle-vline-right{top:0;right:0}.elfinder-resize-handle-point{position:absolute;width:8px;height:8px;border:1px solid #777;background:0 0}.elfinder-resize-handle-point-e{top:50%;right:0;margin-top:-5px;margin-right:-5px}.elfinder-resize-handle-point-se{bottom:0;right:0;margin-bottom:-5px;margin-right:-5px}.elfinder-resize-handle-point-s{bottom:0;left:50%;margin-bottom:-5px;margin-left:-5px}.elfinder-resize-spinner{position:absolute;width:200px;height:30px;top:50%;margin-top:-25px;left:50%;margin-left:-100px;text-align:center;background:url(../img/progress.gif) center bottom repeat-x}.elfinder-resize-row{margin-bottom:7px;position:relative}.elfinder-resize-label{float:left;width:80px}.elfinder-resize-reset{width:16px;height:16px;position:absolute;margin-top:-8px}.elfinder-dialog-resize .ui-resizable-e{height:100%;width:10px}.elfinder-dialog-resize .ui-resizable-s{width:100%;height:10px}.elfinder-dialog-resize .ui-resizable-se{background:0 0;bottom:0;right:0;margin-right:-7px;margin-bottom:-7px}.elfinder-dialog-resize .ui-icon-grip-solid-vertical{position:absolute;top:50%;right:0;margin-top:-8px;margin-right:-11px}.elfinder-dialog-resize .ui-icon-grip-solid-horizontal{position:absolute;left:50%;bottom:0;margin-left:-8px;margin-bottom:-11px}.elfinder-file-edit{width:99%;height:99%;margin:0;padding:2px;border:1px solid #ccc}.elfinder-help{margin-bottom:.5em}.elfinder-help .ui-tabs-panel{padding:.5em}.elfinder-dialog .ui-tabs .ui-tabs-nav li a{padding:.2em 1em}.elfinder-help-shortcuts{height:300px;padding:1em;margin:.5em 0;overflow:auto}.elfinder-help-shortcut{white-space:nowrap;clear:both}.elfinder-help-shortcut-pattern{float:left;width:160px}.elfinder-help-logo{width:100px;height:96px;float:left;margin-right:1em;background:url('../img/logo.png') center center no-repeat}.elfinder-help h3{font-size:1.5em;margin:.2em 0 .3em}.elfinder-help-separator{clear:both;padding:.5em}.elfinder-help-link{padding:2px}.elfinder-help .ui-priority-secondary{font-size:.9em}.elfinder-help .ui-priority-primary{margin-bottom:7px}.elfinder-help-team{clear:both;text-align:right;border-bottom:1px solid #ccc;margin:.5em 0;font-size:.9em}.elfinder-help-team div{float:left}.elfinder-help-license{font-size:.9em}.elfinder-help-disabled{font-weight:700;text-align:center;margin:90px 0}.elfinder-help .elfinder-dont-panic{display:block;border:1px solid transparent;width:200px;height:200px;margin:30px auto;text-decoration:none;text-align:center;position:relative;background:#d90004;-moz-box-shadow:5px 5px 9px #111;-webkit-box-shadow:5px 5px 9px #111;box-shadow:5px 5px 9px #111;background:-moz-radial-gradient(80px 80px,circle farthest-corner,#d90004 35%,#960004 100%);background:-webkit-gradient(radial,80 80,60,80 80,120,from(#d90004),to(#960004));-moz-border-radius:100px;-webkit-border-radius:100px;border-radius:100px;outline:none}.elfinder-help .elfinder-dont-panic span{font-size:3em;font-weight:700;text-align:center;color:#fff;position:absolute;left:0;top:45px}.elfinder{padding:0;position:relative;display:block}.elfinder-rtl{text-align:right;direction:rtl}.elfinder-workzone{padding:0;position:relative;overflow:hidden}.elfinder-perms,.elfinder-symlink{position:absolute;width:16px;height:16px;background-image:url(../img/toolbar.png);background-repeat:no-repeat;background-position:0 -528px}.elfinder-na .elfinder-perms{background-position:0 -96px}.elfinder-ro .elfinder-perms{background-position:0 -64px}.elfinder-wo .elfinder-perms{background-position:0 -80px}.elfinder-drag-helper{width:60px;height:50px;padding:0 0 0 25px;z-index:100000}.elfinder-drag-helper-icon-plus{position:absolute;width:16px;height:16px;left:43px;top:55px;background:url('../img/toolbar.png') 0 -544px no-repeat;display:none}.elfinder-drag-helper-plus .elfinder-drag-helper-icon-plus{display:block}.elfinder-drag-num{position:absolute;top:0;left:0;width:16px;height:14px;text-align:center;padding-top:2px;font-size:12px;font-weight:700;color:#fff;background-color:red;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}.elfinder-drag-helper .elfinder-cwd-icon{margin:0 0 0 -24px;float:left}.elfinder-overlay{opacity:0;filter:Alpha(Opacity=0)}.elfinder .elfinder-panel{position:relative;background-image:none;padding:7px 12px}.elfinder-contextmenu,.elfinder-contextmenu-sub{display:none;position:absolute;border:1px solid #aaa;background:#fff;color:#555;padding:4px 0}.elfinder-contextmenu-sub{top:5px}.elfinder-contextmenu-ltr .elfinder-contextmenu-sub{margin-left:-5px}.elfinder-contextmenu-rtl .elfinder-contextmenu-sub{margin-right:-5px}.elfinder-contextmenu-item{position:relative;display:block;padding:4px 30px;text-decoration:none;white-space:nowrap;cursor:default}.elfinder-contextmenu .elfinder-contextmenu-item span{font-size:.76em;display:block}.elfinder-contextmenu-ltr .elfinder-contextmenu-item{text-align:left}.elfinder-contextmenu-rtl .elfinder-contextmenu-item{text-align:right}.elfinder-contextmenu-ltr .elfinder-contextmenu-sub .elfinder-contextmenu-item{padding-left:12px}.elfinder-contextmenu-rtl .elfinder-contextmenu-sub .elfinder-contextmenu-item{padding-right:12px}.elfinder-contextmenu-arrow,.elfinder-contextmenu-icon{position:absolute;top:50%;margin-top:-8px}.elfinder-contextmenu-ltr .elfinder-contextmenu-icon{left:8px}.elfinder-contextmenu-rtl .elfinder-contextmenu-icon{right:8px}.elfinder-contextmenu-arrow{width:16px;height:16px;background:url('../img/arrows-normal.png') 5px 4px no-repeat}.elfinder-contextmenu-ltr .elfinder-contextmenu-arrow{right:5px}.elfinder-contextmenu-rtl .elfinder-contextmenu-arrow{left:5px;background-position:0 -10px}.elfinder-contextmenu .ui-state-hover{border:0 solid;background-image:none}.elfinder-contextmenu-separator{height:0;border-top:1px solid #ccc;margin:0 1px}.elfinder-cwd-wrapper{overflow:auto;position:relative;padding:2px;margin:0}.elfinder-cwd-wrapper-list{padding:0}.elfinder-cwd{position:relative;font-size:.7em;cursor:default;padding:0;margin:0;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;user-select:none}.elfinder .elfinder-cwd-wrapper.elfinder-droppable-active{padding:0;border:2px solid #8cafed}.elfinder-cwd-view-icons .elfinder-cwd-file{width:120px;height:80px;padding-bottom:2px;cursor:default;overflow:hidden}.elfinder-ltr .elfinder-cwd-view-icons .elfinder-cwd-file{float:left;margin:0 3px 12px 0}.elfinder-rtl .elfinder-cwd-view-icons .elfinder-cwd-file{float:right;margin:0 0 5px 3px}.elfinder-cwd-view-icons .elfinder-cwd-file .ui-state-hover{border:0 solid}.elfinder-cwd-view-icons .elfinder-cwd-file-wrapper{width:52px;height:52px;margin:1px auto;padding:2px;position:relative}.elfinder-cwd-view-icons .elfinder-cwd-filename{text-align:center;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;-o-text-overflow:ellipsis;margin:3px 1px 0;padding:1px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}.elfinder-cwd-view-icons .elfinder-perms{bottom:4px;right:2px}.elfinder-cwd-view-icons .elfinder-symlink{bottom:6px;left:0}.elfinder-cwd-icon{display:block;width:48px;height:48px;margin:0 auto;background:url('../img/icons-big.png') 0 0 no-repeat;-moz-background-clip:padding;-webkit-background-clip:padding-box;background-clip:padding-box}.elfinder-cwd .elfinder-droppable-active .elfinder-cwd-icon{background-position:0 -100px}.elfinder-cwd-icon-directory{background-position:0 -50px}.elfinder-cwd-icon-application{background-position:0 -150px}.elfinder-cwd-icon-x-empty,.elfinder-cwd-icon-text{background-position:0 -200px}.elfinder-cwd-icon-image,.elfinder-cwd-icon-vnd-adobe-photoshop,.elfinder-cwd-icon-postscript{background-position:0 -250px}.elfinder-cwd-icon-audio{background-position:0 -300px}.elfinder-cwd-icon-video,.elfinder-cwd-icon-flash-video{background-position:0 -350px}.elfinder-cwd-icon-rtf,.elfinder-cwd-icon-rtfd{background-position:0 -401px}.elfinder-cwd-icon-pdf{background-position:0 -450px}.elfinder-cwd-icon-vnd-ms-office,.elfinder-cwd-icon-msword,.elfinder-cwd-icon-vnd-ms-word,.elfinder-cwd-icon-vnd-oasis-opendocument-text,.elfinder-cwd-icon-ms-excel,.elfinder-cwd-icon-vnd-ms-excel,.elfinder-cwd-icon-vnd-oasis-opendocument-spreadsheet,.elfinder-cwd-icon-vnd-ms-powerpoint,.elfinder-cwd-icon-vnd-oasis-opendocument-presentation{background-position:0 -500px}.elfinder-cwd-icon-html{background-position:0 -550px}.elfinder-cwd-icon-css{background-position:0 -600px}.elfinder-cwd-icon-javascript,.elfinder-cwd-icon-x-javascript{background-position:0 -650px}.elfinder-cwd-icon-x-perl{background-position:0 -700px}.elfinder-cwd-icon-x-python{background-position:0 -750px}.elfinder-cwd-icon-x-ruby{background-position:0 -800px}.elfinder-cwd-icon-x-sh,.elfinder-cwd-icon-x-shellscript{background-position:0 -850px}.elfinder-cwd-icon-x-c,.elfinder-cwd-icon-x-csrc,.elfinder-cwd-icon-x-chdr,.elfinder-cwd-icon-x-c--,.elfinder-cwd-icon-x-c--src,.elfinder-cwd-icon-x-c--hdr,.elfinder-cwd-icon-x-java,.elfinder-cwd-icon-x-java-source{background-position:0 -900px}.elfinder-cwd-icon-x-php{background-position:0 -950px}.elfinder-cwd-icon-xml{background-position:0 -1000px}.elfinder-cwd-icon-zip,.elfinder-cwd-icon-x-7z-compressed{background-position:0 -1050px}.elfinder-cwd-icon-x-gzip,.elfinder-cwd-icon-x-tar{background-position:0 -1100px}.elfinder-cwd-icon-x-bzip,.elfinder-cwd-icon-x-bzip2{background-position:0 -1150px}.elfinder-cwd-icon-x-rar,.elfinder-cwd-icon-x-rar-compressed{background-position:0 -1200px}.elfinder-cwd-icon-x-shockwave-flash{background-position:0 -1250px}.elfinder-cwd-icon-group{background-position:0 -1300px}.elfinder-cwd input{width:100%;border:0 solid;margin:0;padding:0}.elfinder-cwd-view-icons input,.elfinder-cwd-view-icons{text-align:center}.elfinder-cwd table{width:100%;border-collapse:collapse;border:0 solid;margin:0 0 10px}.elfinder .elfinder-cwd table thead tr{border-left:0 solid;border-top:0 solid;border-right:0 solid}.elfinder .elfinder-cwd table thead td{font-size:.9em}.elfinder .elfinder-cwd table td{padding:3px 12px;white-space:nowrap;overflow:hidden;text-align:right;cursor:default;border:0 solid}.elfinder-ltr .elfinder-cwd table td{text-align:right}.elfinder-ltr .elfinder-cwd table td:first-child,.elfinder-rtl .elfinder-cwd table td{text-align:left}.elfinder-rtl .elfinder-cwd table td:first-child{text-align:right}.elfinder-odd-row{background:#eee}.elfinder-cwd-view-list .elfinder-cwd-file-wrapper{width:97%;position:relative}.elfinder-ltr .elfinder-cwd-view-list .elfinder-cwd-file-wrapper{padding-left:23px}.elfinder-rtl .elfinder-cwd-view-list .elfinder-cwd-file-wrapper{padding-right:23px}.elfinder-cwd-view-list .elfinder-perms,.elfinder-cwd-view-list .elfinder-symlink{top:50%;margin-top:-6px}.elfinder-ltr .elfinder-cwd-view-list .elfinder-perms{left:7px}.elfinder-ltr .elfinder-cwd-view-list .elfinder-symlink{left:-7px}.elfinder-cwd-view-list td .elfinder-cwd-icon{width:16px;height:16px;position:absolute;top:50%;margin-top:-8px;background-image:url(../img/icons-small.png)}.elfinder-ltr .elfinder-cwd-view-list .elfinder-cwd-icon{left:0}.elfinder-rtl .elfinder-cwd-view-list .elfinder-cwd-icon{right:0}.std42-dialog{padding:0}.std42-dialog .ui-dialog-titlebar{border-left:0 solid transparent;border-top:0 solid transparent;border-right:0 solid transparent;-moz-border-radius-bottomleft:0;-webkit-border-bottom-left-radius:0;border-bottom-left-radius:0;-moz-border-radius-bottomright:0;-webkit-border-bottom-right-radius:0;border-bottom-right-radius:0;font-size:.82em;font-weight:400;padding:.2em 1em}.std42-dialog .ui-dialog-titlebar-close,.std42-dialog .ui-dialog-titlebar-close:hover{padding:1px}.elfinder-rtl .elfinder-dialog .ui-dialog-titlebar{text-align:right}.elfinder-rtl .elfinder-dialog .ui-dialog-titlebar .ui-dialog-titlebar-close{right:auto;left:.3em}.std42-dialog .ui-dialog-content{padding:.3em .5em;font-size:.72em}.std42-dialog .ui-dialog-buttonpane{border:0 solid;margin:0;padding:.5em .7em;font-size:.76em}.std42-dialog .ui-dialog-buttonpane button{margin:0 0 0 .4em;padding:0;outline:0 solid}.std42-dialog .ui-dialog-buttonpane button span{padding:2px 9px}.elfinder-dialog .ui-resizable-e,.elfinder-dialog .ui-resizable-s{width:0;height:0}.std42-dialog .ui-button input{cursor:pointer}.elfinder-dialog-icon{position:absolute;width:32px;height:32px;left:12px;top:50%;margin-top:-15px;background:url(\"../img/dialogs.png\") 0 0 no-repeat}.elfinder-rtl .elfinder-dialog-icon{left:auto;right:12px}.elfinder-dialog-error .ui-dialog-content,.elfinder-dialog-confirm .ui-dialog-content{padding-left:56px;min-height:35px}.elfinder-rtl .elfinder-dialog-error .ui-dialog-content,.elfinder-rtl .elfinder-dialog-confirm .ui-dialog-content{padding-left:0;padding-right:56px}.elfinder-dialog-notify .ui-dialog-titlebar-close{display:none}.elfinder-dialog-notify .ui-dialog-content{padding:0}.elfinder-notify{border-bottom:1px solid #ccc;position:relative;padding:.5em;text-align:center;overflow:hidden}.elfinder-ltr .elfinder-notify{padding-left:30px}.elfinder-rtl .elfinder-notify{padding-right:30px}.elfinder-notify:last-child{border:0 solid}.elfinder-notify-progressbar{width:180px;height:8px;border:1px solid #aaa;background:#f5f5f5;margin:5px auto;overflow:hidden}.elfinder-notify-progress{width:100%;height:8px;background:url(../img/progress.gif) center center repeat-x}.elfinder-notify-progressbar,.elfinder-notify-progress{-moz-border-radius:2px;-webkit-border-radius:2px;border-radius:2px}.elfinder-dialog-icon-open,.elfinder-dialog-icon-file,.elfinder-dialog-icon-reload{background-position:0 -225px}.elfinder-dialog-icon-mkdir{background-position:0 -64px}.elfinder-dialog-icon-mkfile{background-position:0 -96px}.elfinder-dialog-icon-copy,.elfinder-dialog-icon-prepare,.elfinder-dialog-icon-move{background-position:0 -128px}.elfinder-dialog-icon-upload{background-position:0 -160px}.elfinder-dialog-icon-rm{background-position:0 -192px}.elfinder-dialog-icon-download{background-position:0 -260px}.elfinder-dialog-icon-save{background-position:0 -295px}.elfinder-dialog-icon-rename{background-position:0 -330px}.elfinder-dialog-icon-archive,.elfinder-dialog-icon-extract{background-position:0 -365px}.elfinder-dialog-icon-search{background-position:0 -402px}.elfinder-dialog-confirm-applyall{padding-top:3px}.elfinder-dialog-confirm .elfinder-dialog-icon{background-position:0 -32px}.elfinder-info-title .elfinder-cwd-icon{float:left;width:48px;height:48px;margin-right:1em}.elfinder-info-title strong{display:block;padding:.3em 0 .5em}.elfinder-info-tb{min-width:200px;border:0 solid;margin:1em .2em;font-size:.9em}.elfinder-info-tb td{white-space:nowrap;padding:2px}.elfinder-info-tb tr td:first-child{text-align:right}.elfinder-info-tb span{float:left}.elfinder-info-tb a{outline:none;text-decoration:underline}.elfinder-info-tb a:hover{text-decoration:none}.elfinder-info-spinner{width:14px;height:14px;float:left;background:url(\"../img/spinner-mini.gif\") center center no-repeat;margin:0 5px}.elfinder-upload-dropbox{font-size:1.2em;text-align:center;padding:2em 0;border:3px dashed #aaa}.elfinder-upload-dropbox.ui-state-hover{background:#dfdfdf;border:3px dashed #555}.elfinder-upload-dialog-or{font-size:1.2em;margin:.3em 0;text-align:center}.elfinder-upload-dialog-wrapper{text-align:center}.elfinder-upload-dialog-wrapper .ui-button{position:relative;overflow:hidden}.elfinder-upload-dialog-wrapper .ui-button form{position:absolute;right:0;top:0;opacity:0;filter:Alpha(Opacity=0)}.elfinder-upload-dialog-wrapper .ui-button form input{padding:0 20px;font-size:3em}.dialogelfinder .dialogelfinder-drag{border-left:0 solid;border-top:0 solid;border-right:0 solid;font-weight:400;font-size:.9em;padding:2px 12px;cursor:move;position:relative;text-align:left}.elfinder-rtl .dialogelfinder-drag{text-align:right}.dialogelfinder-drag-close{position:absolute;top:50%;margin-top:-8px}.elfinder-ltr .dialogelfinder-drag-close{right:12px}.elfinder-rtl .dialogelfinder-drag-close{left:12px}.elfinder .elfinder-navbar{width:230px;padding:3px 5px;font-size:.72em;background-image:none;border-top:0 solid;border-bottom:0 solid;overflow:auto;display:none;position:relative;-moz-user-select:none;-khtml-user-select:none;-webkit-user-select:none;user-select:none}.elfinder-ltr .elfinder-navbar{float:left;border-left:0 solid;padding-right:10px}.elfinder-rtl .elfinder-navbar{float:right;border-right:0 solid;padding-left:10px}.elfinder-tree{display:table;width:100%;margin:0 0 .5em}.elfinder-navbar-dir{position:relative;display:block;white-space:nowrap;padding:3px 12px;margin:0;outline:0 solid;border:1px solid transparent;cursor:default}.elfinder-ltr .elfinder-navbar-dir{padding-left:35px}.elfinder-rtl .elfinder-navbar-dir{padding-right:35px}.elfinder-navbar-arrow{width:12px;height:14px;position:absolute;display:none;top:50%;margin-top:-8px;background-image:url(\"../img/arrows-normal.png\");background-repeat:no-repeat}.ui-state-active .elfinder-navbar-arrow{background-image:url(\"../img/arrows-active.png\")}.elfinder-navbar-collapsed .elfinder-navbar-arrow{display:block}.elfinder-ltr .elfinder-navbar-collapsed .elfinder-navbar-arrow{background-position:0 4px;left:0}.elfinder-rtl .elfinder-navbar-collapsed .elfinder-navbar-arrow{background-position:0 -10px;right:0}.elfinder-ltr .elfinder-navbar-expanded .elfinder-navbar-arrow,.elfinder-rtl .elfinder-navbar-expanded .elfinder-navbar-arrow{background-position:0 -21px}.elfinder-navbar-icon{width:16px;height:16px;position:absolute;top:50%;margin-top:-8px;background-image:url(\"../img/toolbar.png\");background-repeat:no-repeat;background-position:0 -16px}.elfinder-ltr .elfinder-navbar-icon{left:14px}.elfinder-rtl .elfinder-navbar-icon{right:14px}.elfinder-tree .elfinder-navbar-root .elfinder-navbar-icon{background-position:0 0}.elfinder-places .elfinder-navbar-root .elfinder-navbar-icon{background-position:0 -48px}.ui-state-active .elfinder-navbar-icon,.elfinder-droppable-active .elfinder-navbar-icon,.ui-state-hover .elfinder-navbar-icon{background-position:0 -32px}.elfinder-navbar-subtree{display:none}.elfinder-ltr .elfinder-navbar-subtree{margin-left:12px}.elfinder-rtl .elfinder-navbar-subtree{margin-right:12px}.elfinder-navbar-spinner{width:14px;height:14px;position:absolute;display:block;top:50%;margin-top:-7px;background:url(\"../img/spinner-mini.gif\") center center no-repeat}.elfinder-ltr .elfinder-navbar-spinner{left:0;margin-left:-2px}.elfinder-rtl .elfinder-navbar-spinner{right:0;margin-right:-2px}.elfinder-navbar .elfinder-perms{top:50%;margin-top:-8px}.elfinder-ltr .elfinder-navbar .elfinder-perms{left:18px}.elfinder-rtl .elfinder-navbar .elfinder-perms{right:18px}.elfinder-ltr .elfinder-navbar .elfinder-symlink{left:8px}.elfinder-rtl .elfinder-navbar .elfinder-symlink{right:8px}.elfinder-navbar .ui-resizable-handle{width:12px;background:url('../img/resize.png') center center no-repeat;left:0}.elfinder-nav-handle-icon{position:absolute;top:50%;margin:-8px 2px 0 2px;opacity:.5;filter:Alpha(Opacity=50)}.elfinder-places{border:1px solid transparent}.elfinder-places.elfinder-droppable-active{border:1px solid #8cafed}.elfinder-place-drag .elfinder-navbar-dir{font-size:.9em}.elfinder-quicklook{position:absolute;background:url(\"../img/quicklook-bg.png\");display:none;overflow:hidden;border-radius:7px;-moz-border-radius:7px;-webkit-border-radius:7px;padding:20px 0 40px}.elfinder-quicklook .ui-resizable-se{width:14px;height:14px;right:5px;bottom:3px;background:url(\"../img/toolbar.png\") 0 -496px no-repeat}.elfinder-quicklook-fullscreen{border-radius:0;-moz-border-radius:0;-webkit-border-radius:0;-webkit-background-clip:padding-box;padding:0;background:#000;z-index:90000;display:block}.elfinder-quicklook-fullscreen .elfinder-quicklook-titlebar{display:none}.elfinder-quicklook-fullscreen .elfinder-quicklook-preview{border:0 solid}.elfinder-quicklook-titlebar{text-align:center;background:#777;position:absolute;left:0;top:0;width:100%;height:20px;-moz-border-radius-topleft:7px;-webkit-border-top-left-radius:7px;border-top-left-radius:7px;-moz-border-radius-topright:7px;-webkit-border-top-right-radius:7px;border-top-right-radius:7px;cursor:move}.elfinder-quicklook-title{font-size:.7em;color:#fff;white-space:nowrap;overflow:hidden;padding:2px 0}.elfinder-quicklook-titlebar .ui-icon{position:absolute;left:4px;top:50%;margin-top:-8px;width:16px;height:16px;cursor:default}.elfinder-quicklook-preview{overflow:hidden;position:relative;border:0 solid;border-left:1px solid transparent;border-right:1px solid transparent;height:100%}.elfinder-quicklook-info-wrapper{position:absolute;width:100%;left:0;top:50%;margin-top:-50px}.elfinder-quicklook-info{padding:0 12px 0 112px}.elfinder-quicklook-info .elfinder-quicklook-info-data:first-child{color:#fff;font-weight:700;padding-bottom:.5em}.elfinder-quicklook-info-data{font-size:.72em;padding-bottom:.2em;color:#fff}.elfinder-quicklook .elfinder-cwd-icon{position:absolute;left:32px;top:50%;margin-top:-20px}.elfinder-quicklook-preview img{display:block;margin:0 auto}.elfinder-quicklook-navbar{position:absolute;left:50%;bottom:4px;width:140px;height:32px;padding:0;margin-left:-70px;border:1px solid transparent;border-radius:19px;-moz-border-radius:19px;-webkit-border-radius:19px}.elfinder-quicklook-fullscreen .elfinder-quicklook-navbar{width:188px;margin-left:-94px;padding:5px;border:1px solid #eee;background:#000}.elfinder-quicklook-fullscreen .elfinder-quicklook-navbar-icon-close,.elfinder-quicklook-fullscreen .elfinder-quicklook-navbar-separator{display:inline}.elfinder-quicklook-navbar-icon{width:32px;height:32px;margin:0 7px;float:left;background:url(\"../img/quicklook-icons.png\") 0 0 no-repeat}.elfinder-quicklook-navbar-icon-fullscreen{background-position:0 -64px}.elfinder-quicklook-navbar-icon-fullscreen-off{background-position:0 -96px}.elfinder-quicklook-navbar-icon-prev{background-position:0 0}.elfinder-quicklook-navbar-icon-next{background-position:0 -32px}.elfinder-quicklook-navbar-icon-close{background-position:0 -128px;display:none}.elfinder-quicklook-navbar-separator{width:1px;height:32px;float:left;border-left:1px solid #fff;display:none}.elfinder-quicklook-preview-text-wrapper{width:100%;height:100%;background:#fff;color:#222;font-size:.9em;overflow:auto}pre.elfinder-quicklook-preview-text{margin:0;padding:3px 9px}.elfinder-quicklook-preview-html,.elfinder-quicklook-preview-pdf{width:100%;height:100%;background:#fff;border:0 solid;margin:0}.elfinder-quicklook-preview-flash{width:100%;height:100%}.elfinder-quicklook-preview-audio{width:100%;position:absolute;bottom:0;left:0}embed.elfinder-quicklook-preview-audio{height:30px;background:0 0}.elfinder-quicklook-preview-video{width:100%;height:100%}.elfinder-statusbar{text-align:center;font-weight:400;padding:.2em .5em;border-right:0 solid transparent;border-bottom:0 solid transparent;border-left:0 solid transparent}.elfinder-statusbar a{text-decoration:none}.elfinder-statusbar div{font-size:.7em}.elfinder-ltr .elfinder-path{float:left}.elfinder-rtl .elfinder-path,.elfinder-ltr .elfinder-stat-size{float:right}.elfinder-rtl .elfinder-stat-size{float:left}.elfinder-toolbar{padding:4px 0 3px;border-left:0 solid transparent;border-top:0 solid transparent;border-right:0 solid transparent}.elfinder-buttonset{margin:1px 4px;float:left;background:0 0;padding:0;-moz-border-radius:4px;-webkit-border-radius:4px;border-radius:4px}.elfinder .elfinder-button{width:16px;height:16px;margin:0;padding:4px;float:left;overflow:hidden;position:relative;border:0 solid}.elfinder .ui-icon-search{cursor:pointer}.elfinder-button:first-child{-moz-border-radius-topleft:4px;-webkit-border-top-left-radius:4px;border-top-left-radius:4px;-moz-border-radius-bottomleft:4px;-webkit-border-bottom-left-radius:4px;border-bottom-left-radius:4px}.elfinder-button:last-child{-moz-border-radius-topright:4px;-webkit-border-top-right-radius:4px;border-top-right-radius:4px;-moz-border-radius-bottomright:4px;-webkit-border-bottom-right-radius:4px;border-bottom-right-radius:4px}.elfinder-toolbar-button-separator{float:left;padding:0;height:24px;border-top:0 solid;border-right:0 solid;border-bottom:0 solid;width:0}.elfinder .elfinder-button.ui-state-disabled{opacity:1;filter:Alpha(Opacity=100)}.elfinder .elfinder-button.ui-state-disabled .elfinder-button-icon{opacity:.4;filter:Alpha(Opacity=40)}.elfinder-rtl .elfinder-buttonset{float:right}.elfinder-button-icon{width:16px;height:16px;display:block;background:url('../img/toolbar.png') no-repeat}.elfinder-button-icon-home{background-position:0 0}.elfinder-button-icon-back{background-position:0 -112px}.elfinder-button-icon-forward{background-position:0 -128px}.elfinder-button-icon-up{background-position:0 -144px}.elfinder-button-icon-reload{background-position:0 -160px}.elfinder-button-icon-open{background-position:0 -176px}.elfinder-button-icon-mkdir{background-position:0 -192px}.elfinder-button-icon-mkfile{background-position:0 -208px}.elfinder-button-icon-rm{background-position:0 -224px}.elfinder-button-icon-copy{background-position:0 -240px}.elfinder-button-icon-cut{background-position:0 -256px}.elfinder-button-icon-paste{background-position:0 -272px}.elfinder-button-icon-getfile{background-position:0 -288px}.elfinder-button-icon-duplicate{background-position:0 -304px}.elfinder-button-icon-rename{background-position:0 -320px}.elfinder-button-icon-edit{background-position:0 -336px}.elfinder-button-icon-quicklook{background-position:0 -352px}.elfinder-button-icon-upload{background-position:0 -368px}.elfinder-button-icon-download{background-position:0 -384px}.elfinder-button-icon-info{background-position:0 -400px}.elfinder-button-icon-extract{background-position:0 -416px}.elfinder-button-icon-archive{background-position:0 -432px}.elfinder-button-icon-view{background-position:0 -448px}.elfinder-button-icon-view-list{background-position:0 -464px}.elfinder-button-icon-help{background-position:0 -480px}.elfinder-button-icon-resize{background-position:0 -512px}.elfinder-button-icon-search{background-position:0 -561px}.elfinder-button-icon-sort{background-position:0 -577px}.elfinder .elfinder-menubutton{overflow:visible}.elfinder-button-menu{position:absolute;left:0;top:26px;padding:3px 0}.elfinder-button-menu-item{white-space:nowrap;font-size:.72em;cursor:default;padding:5px 19px;position:relative}.elfinder-button-menu .ui-state-hover{border:0 solid}.elfinder-menu-item-sort-dir{width:16px;height:16px;position:absolute;left:2px;top:50%;margin-top:-8px;background:url(\"../img/toolbar.png\") 0 -594px no-repeat;display:none}.elfinder-button-menu-item-selected .elfinder-menu-item-sort-dir{display:block}.elfinder-menu-item-sort-desc .elfinder-menu-item-sort-dir{background-position:0 -610px}.elfinder-button form{position:absolute;top:0;right:0;opacity:0;filter:Alpha(Opacity=0);cursor:pointer}.elfinder .elfinder-button form input{background:0 0;cursor:default}.elfinder .elfinder-button-search{border:0 solid;background:0 0;padding:0;margin:1px 4px;height:auto;float:right;width:202px}.elfinder-ltr .elfinder-button-search{float:right;margin-right:10px}.elfinder-rtl .elfinder-button-search{float:left;margin-left:10px}.elfinder-button-search input{width:160px;height:22px;padding:0 20px;font-size:.8em;line-height:22px;border:1px solid #aaa;-moz-border-radius:12px;-webkit-border-radius:12px;border-radius:12px;outline:0 solid}.elfinder-rtl .elfinder-button-search input{direction:rtl}.elfinder-button-search .ui-icon{position:absolute;height:18px;top:50%;margin:-7px 4px 0 4px;opacity:.6;filter:Alpha(Opacity=60)}.elfinder-ltr .elfinder-button-search .ui-icon-search{left:0}.elfinder-rtl .elfinder-button-search .ui-icon-search,.elfinder-ltr .elfinder-button-search .ui-icon-close{right:0}.elfinder-rtl .elfinder-button-search .ui-icon-close{left:0}","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/css/theme.css:","\t20: /* selected file in \"icons\" view */","\t21: .elfinder-cwd-view-icons .elfinder-cwd-file .ui-state-hover { background:#ccc; }","\t27: .elfinder-cwd-view-icons .elfinder-cwd-file .elfinder-cwd-filename.ui-state-hover,","\t31: .elfinder-disabled .elfinder-cwd-view-icons .elfinder-cwd-file .elfinder-cwd-filename.ui-state-hover,","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/elfinder.full.js:","\t2:  * elFinder - file manager for web","\t13:  * File: /root/tmp/elFinder/js/elFinder.js","\t17:  * @class elFinder - file manager for web","\t103: \t\tevents = ['enable', 'disable', 'load', 'open', 'reload', 'select',  'add', 'remove', 'change', 'dblclick', 'getfile', 'lockfiles', 'unlockfiles', 'dragstart', 'dragstop'],","\t137: \t\t * Files/dirs cache","\t141: \t\tfiles = {},","\t144: \t\t * Selected files hashes","\t165: \t\t * Buffer for copied files","\t172: \t\t * Copied/cuted files hashes","\t174: \t\t * Required for dispaly correct files names in error messages","\t217: \t\t\t\tfiles = {};","\t219: \t\t\t\t// remove only files from prev cwd","\t220: \t\t\t\tfor (var i in files) {","\t221: \t\t\t\t\tif (files.hasOwnProperty(i) ","\t222: \t\t\t\t\t&& files[i].mime != 'directory' ","\t223: \t\t\t\t\t&& files[i].phash == cwd","\t225: \t\t\t\t\t\tdelete files[i];","\t231: \t\t\tcache(data.files);","\t232: \t\t\tif (!files[cwd]) {","\t239: \t\t * Store info about files/dirs in \"files\" object.","\t241: \t\t * @param  Array  files","\t250: \t\t\t\t\tfiles[f.hash] = f;","\t361: \t * URL to upload files","\t419: \t * Sort files type","\t457: \t\t\thashes = element.is('.'+self.res('class', 'cwdfile')) ","\t461: \t\t\thelper.append(icon(files[hashes[0]].mime)).data('files', hashes);","\t464: \t\t\t\thelper.append(icon(files[hashes[l-1]].mime) + '<span class=\"elfinder-drag-num\">'+l+'</span>');","\t478: \t\t\taccept     : '.elfinder-cwd-file-wrapper,.elfinder-navbar-dir,.elfinder-cwd-file',","\t482: \t\t\t\t\ttargets = $.map(ui.helper.data('files')||[], function(h) { return h || null }),","\t489: \t\t\t\t} else if (dst.is('.'+self.res(c, 'cwdfile'))) {","\t500: \t\t\t\t\th != hash && files[h].phash != hash && result.push(h);","\t507: \t\t\t\t\tself.trigger('drop', {files : targets});","\t513: \t * Return true if filemanager is active","\t522: \t * Return true if filemanager is visible","\t536: \t\tvar dir = files[hash || cwd], i;","\t539: \t\t\tdir = files[dir.phash]","\t545: \t\twhile (i in files && files.hasOwnProperty(i)) {","\t546: \t\t\tdir = files[i]","\t561: \t\treturn files[cwd] || {};","\t575: \t * Return file data from current dir or tree by it's hash","\t577: \t * @param  String  file hash","\t580: \tthis.file = function(hash) { ","\t581: \t\treturn files[hash]; ","\t585: \t * Return all cached files","\t589: \tthis.files = function() {","\t590: \t\treturn $.extend(true, {}, files);","\t594: \t * Return list of file parents hashes include file hash","\t596: \t * @param  String  file hash","\t603: \t\twhile ((dir = this.file(hash))) {","\t611: \t\tvar file, ","\t614: \t\twhile (hash && (file = files[hash]) && file.hash) {","\t615: \t\t\tpath.unshift(file.name);","\t616: \t\t\thash = file.phash;","\t623: \t * Return file path","\t625: \t * @param  Object  file","\t629: \t\treturn files[hash] && files[hash].path","\t630: \t\t\t? files[hash].path","\t635: \t * Return file url if set","\t637: \t * @param  Object  file","\t642: \t\tif (files[hash] && files[hash].url) {","\t643: \t\t\treturn files[hash].url;","\t650: \t\tvar file = files[hash],","\t653: \t\tif (file.url) {","\t654: \t\t\treturn file.url;","\t668: \t * @param  String  file hash","\t672: \t\tvar file = files[hash],","\t673: \t\t\turl = file && file.tmb && file.tmb != 1 ? cwdOptions['tmbUrl'] + file.tmb : '';","\t682: \t * Return selected files hashes","\t691: \t * Return selected files info","\t695: \tthis.selectedFiles = function() {","\t696: \t\treturn $.map(selected, function(hash) { return files[hash] || null });","\t700: \t * Return true if file with required name existsin required folder","\t702: \t * @param  String  file name","\t706: \tthis.fileByName = function(name, phash) {","\t709: \t\tfor (hash in files) {","\t710: \t\t\tif (files.hasOwnProperty(hash) && files[hash].phash == phash && files[hash].name == name) {","\t711: \t\t\t\treturn files[hash];","\t751: \t\t\t// sync files on request fail","\t921: \t * Compare current files cache with new files and return diff","\t923: \t * @param  Array  new files","\t946: \t\t$.each(files, function(hash, f) {","\t950: \t\t// compare files","\t951: \t\t$.each(raw, function(hash, file) {","\t952: \t\t\tvar origin = files[hash];","\t955: \t\t\t\tadded.push(file);","\t957: \t\t\t\t$.each(file, function(prop) {","\t958: \t\t\t\t\tif (file[prop] != origin[prop]) {","\t959: \t\t\t\t\t\tchanged.push(file)","\t968: \t\t\tvar file  = files[hash], ","\t969: \t\t\t\tphash = file.phash;","\t972: \t\t\t&& file.mime == 'directory' ","\t1017: \t\t\tvar diff = self.diff(odata.files.concat(pdata && pdata.tree ? pdata.tree : []));","\t1028: \tthis.upload = function(files) {","\t1029: \t\treturn this.transport.upload(files, this);","\t1114: \t *       description : 'Select all files', ","\t1172: \t *   this.clipboard([{...}, {...}], true) - put 2 files in clipboard and mark it as cutted","\t1174: \t * @param  Array    new files hashes","\t1175: \t * @param  Boolean  cut files?","\t1182: \t\t\tclipboard.length && this.trigger('unlockfiles', {files : map()});","\t1186: \t\t\t\tvar file = files[hash];","\t1187: \t\t\t\tif (file) {","\t1193: \t\t\t\t\t\tphash  : file.phash,","\t1194: \t\t\t\t\t\tname   : file.name,","\t1195: \t\t\t\t\t\tmime   : file.mime,","\t1196: \t\t\t\t\t\tread   : file.read,","\t1197: \t\t\t\t\t\tlocked : file.locked,","\t1204: \t\t\tcut && this.trigger('lockfiles', {files : map()});","\t1225: \t * @param  String|Array   usualy files hashes","\t1229: \tthis.exec = function(cmd, files, opts) {","\t1231: \t\t\t? this._commands[cmd].exec(files, opts) ","\t1343: \tthis.xhrUpload  = typeof XMLHttpRequestUpload != 'undefined' && typeof File != 'undefined' && typeof FormData != 'undefined';","\t1384: \t$.each(['enable', 'disable', 'load', 'open', 'reload', 'select',  'add', 'remove', 'change', 'dblclick', 'getfile', 'lockfiles', 'unlockfiles', 'dragstart', 'dragstop', 'search', 'searchend', 'viewchange'], function(i, name) {","\t1411: \t\t\tselected = $.map(e.data.selected || e.data.value|| [], function(hash) { return files[hash] ? hash : null; });","\t1431: \t\t\t\tif (files[hash]) {","\t1432: \t\t\t\t\tfiles[hash].tmb = tmb;","\t1440: \t\t\t$.each(e.data.changed||[], function(i, file) {","\t1441: \t\t\t\tvar hash = file.hash;","\t1442: \t\t\t\tfiles[hash] = files[hash] ? $.extend(files[hash], file) : file;","\t1449: \t\t\t\t\tvar file = files[hash];","\t1450: \t\t\t\t\tif (file) {","\t1451: \t\t\t\t\t\tif (file.mime == 'directory' && file.dirs) {","\t1452: \t\t\t\t\t\t\t$.each(files, function(h, f) {","\t1456: \t\t\t\t\t\tdelete files[hash];","\t1466: \t\t\tcache(e.data.files);","\t1488: \t// in getFileCallback set - change default actions on duble click/enter/ctrl+enter","\t1489: \tif (typeof(this.options.getFileCallback) == 'function' && this.commands.getfile) {","\t1492: \t\t\tself.exec('getfile').fail(function() {","\t1498: \t\t\tdescription : this.i18n('cmdgetfile'),","\t1499: \t\t\tcallback    : function() { self.exec('getfile').fail(function() { self.exec(self.OS == 'mac' ? 'rename' : 'open') }) }","\t1520: \t$.each(['open', 'reload', 'back', 'forward', 'up', 'home', 'info', 'quicklook', 'getfile', 'help'], function(i, cmd) {","\t1676: \t * File mimetype to kind mapping","\t1779: \t\topen    : function(data) { return data && data.cwd && data.files && $.isPlainObject(data.cwd) && $.isArray(data.files); },","\t1784: \t\tsearch  : function(data) { return data && data.files && $.isArray(data.files)}","\t1903: \t\t\tif (input && $(input).is(':file') && $(input).val()) {","\t1909: \t\t\tcnt = input.files ? input.files.length : 1;","\t1949: \t\t\t\tfiles       = data.input ? data.input.files : data.files, ","\t1950: \t\t\t\tcnt         = files.length,","\t2003: \t\t\t\t\t// drop file from finder","\t2028: \t\t\t$.each(files, function(i, file) {","\t2029: \t\t\t\tformData.append('upload[]', file);","\t2034: \t\t\t\t\t// ff bug while send zero sized file","\t2042: \t\t\tif (!$.browser.safari || !data.files) {","\t2160: \t\tvar filter = function(file) { ","\t2162: \t\t\tif (file && file.hash && file.name && file.mime) {","\t2163: \t\t\t\tif (file.mime == 'application/x-empty') {","\t2164: \t\t\t\t\tfile.mime = 'text/plain';","\t2166: \t\t\t\treturn file;","\t2169: \t\t\treturn file && file.hash && file.name && file.mime ? file : null; ","\t2173: \t\tif (data.files) {","\t2174: \t\t\tdata.files = $.map(data.files, filter);","\t2177: \t\t\tdata.tree = $.map(data.tree, filter);","\t2180: \t\t\tdata.added = $.map(data.added, filter);","\t2183: \t\t\tdata.changed = $.map(data.changed, filter);","\t2193: \t * Compare files based on elFinder.sort","\t2195: \t * @param  Object  file","\t2196: \t * @param  Object  file","\t2199: \tcompare : function(file1, file2) {","\t2202: \t\t\tf1   = asc ? file1 : file2,","\t2203: \t\t\tf2   = asc ? file2 : file1,","\t2206: \t\t\td1   = file1.mime == 'directory',","\t2207: \t\t\td2   = file2.mime == 'directory',","\t2245: \t * Sort files based on elFinder.sort","\t2247: \t * @param  Array  files","\t2250: \tsortFiles : function(files) {","\t2251: \t\treturn files.sort($.proxy(this.compare, this));","\t2262: \t *    msg : 'Copy files', // not required for known types @see this.notifyType","\t2329: \t *    title : 'Remove files',","\t2405: \t * Create unique file name in required dir","\t2407: \t * @param  String  file name","\t2424: \t\tif (!this.fileByName(name, phash)) {","\t2429: \t\t\tif (!this.fileByName(name, phash)) {","\t2448: \t\t\t\tvar file;","\t2450: \t\t\t\t\tif ((file = self.file(m.substr(1)))) {","\t2451: \t\t\t\t\t\treturn file.name;","\t2498: \t * @param  String  file mimetype","\t2511: \t * Return localized kind of file","\t2513: \t * @param  Object|String  file or file mimetype","\t2578: \t * Return css class marks file permissions","\t2580: \t * @param  Object  file ","\t2597: \t * Return localized string with file permissions","\t2599: \t * @param  Object  file","\t2612: \t * Return formated file size","\t2614: \t * @param  Number  file size","\t2664:  * File: /root/tmp/elFinder/js/elFinder.version.js","\t2677:  * File: /root/tmp/elFinder/js/jquery.elfinder.js","\t2727:  * File: /root/tmp/elFinder/js/elFinder.options.js","\t2779: \t * URL to upload file to.","\t2788: \t * Allow to drag and drop to upload files","\t2804: \t * Data to append to all requests and to upload files","\t2828: \t * Additional css class for filemanager node.","\t2841: \t\t'open', 'reload', 'home', 'up', 'back', 'forward', 'getfile', 'quicklook', ","\t2842: \t\t'download', 'rm', 'duplicate', 'rename', 'mkdir', 'mkfile', 'upload', 'copy', ","\t2852: \t\t// \"getfile\" command options.","\t2853: \t\tgetfile : {","\t2855: \t\t\t// allow to return multiple files info","\t2857: \t\t\t// allow to return filers info","\t2876: \t * Callback for \"getfile\" commands.","\t2882: \tgetFileCallback : null,","\t2904: \t\t\t['mkdir', 'mkfile', 'upload'],","\t2905: \t\t\t['open', 'download', 'getfile'],","\t2931: \t * Display only required files by types","\t2942: \t * How to sort files in current directory","\t2959: \t * Sort files direction.","\t3019: \t * How many files display at once?","\t3024: \tshowFiles : 30,","\t3028: \t * Distance in px to cwd bottom edge to start display files","\t3036: \t * Additional rule to valid new file name.","\t3084: \t\tcwd    : ['reload', 'back', '|', 'upload', 'mkdir', 'mkfile', 'paste', '|', 'sort', '|', 'info'],","\t3085: \t\t// current directory file menu","\t3086: \t\tfiles  : ['getfile', '|','open', 'quicklook', '|', 'download', '|', 'copy', 'cut', 'paste', 'duplicate', '|', 'rm', '|', 'edit', 'rename', 'resize', '|', 'archive', 'extract', '|', 'info']","\t3100:  * File: /root/tmp/elFinder/js/elFinder.history.js","\t3205:  * File: /root/tmp/elFinder/js/elFinder.command.js","\t3357: \t * @param  Array         target files hashes","\t3361: \tthis.exec = function(files, opts) { ","\t3453: \t * With argument check given files hashes and return list of existed files hashes.","\t3454: \t * Without argument return selected files hashes.","\t3461: \t\t\t? $.map($.isArray(hashes) ? hashes : [hashes], function(hash) { return fm.file(hash) ? hash : null; })","\t3466: \t * Return only existed files from given fils hashes | selected files","\t3471: \tthis.files = function(hashes) {","\t3475: \t\t\t? $.map($.isArray(hashes) ? hashes : [hashes], function(hash) { return fm.file(hash) || null })","\t3476: \t\t\t: fm.selectedFiles();","\t3484:  * File: /root/tmp/elFinder/js/elFinder.resources.js","\t3502: \t\tcwdfile     : 'elfinder-cwd-file',","\t3559: \t\t\t\tfile   = {","\t3567: \t\t\t\tnode = cwd.trigger('create.'+fm.namespace, file).find('#'+id),","\t3590: \t\t\t\t\t\t\tif (fm.fileByName(name, phash)) {","\t3596: \t\t\t\t\t\t\tfm.lockfiles({files : [id]});","\t3619: \t\t\tnode.find('.elfinder-cwd-filename').empty('').append(input.val(file.name));","\t3634:  * File: /root/tmp/elFinder/js/jquery.dialogelfinder.js","\t3645:  *     title          : 'My files', // dialog title, default = \"Files\"","\t3660: \t\t\ttoolbar = $('<div class=\"ui-widget-header dialogelfinder-drag ui-corner-top\">'+(opts.title || 'Files')+'</div>'),","\t3731:  * File: /root/tmp/elFinder/js/i18n/elfinder.en.js","\t3768: \t\t\t'errNotFile'           : 'Object is not a file.',","\t3773: \t\t\t'errExists'            : 'File named \"$1\" already exists.',","\t3774: \t\t\t'errInvName'           : 'Invalid file name.',","\t3776: \t\t\t'errFileNotFound'      : 'File not found.',","\t3778: \t\t\t'errPopup'             : 'Browser prevented opening popup window. To open file enable it in browser options.',","\t3780: \t\t\t'errMkfile'            : 'Unable to create file \"$1\".',","\t3782: \t\t\t'errCopyFrom'          : 'Copying files from volume \"$1\" not allowed.',","\t3783: \t\t\t'errCopyTo'            : 'Copying files to volume \"$1\" not allowed.',","\t3785: \t\t\t'errUploadFile'        : 'Unable to upload \"$1\".', // old name - errUpload","\t3786: \t\t\t'errUploadNoFiles'     : 'No files found for upload.', ","\t3788: \t\t\t'errUploadFileSize'    : 'File exceeds maximum allowed size.', //  old name - errFileMaxSize","\t3789: \t\t\t'errUploadMime'        : 'File type not allowed.', ","\t3798: \t\t\t'errRmSrc'             : 'Unable remove source file(s).',","\t3799: \t\t\t'errExtract'           : 'Unable to extract files from \"$1\".',","\t3802: \t\t\t'errNoArchive'         : 'File is not archive or has unsupported archive type.',","\t3806: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t3808: \t\t\t'errUsupportType'      : 'Unsupported file type.',","\t3817: \t\t\t'cmdedit'      : 'Edit file',","\t3818: \t\t\t'cmdextract'   : 'Extract files from archive',","\t3820: \t\t\t'cmdgetfile'   : 'Select files',","\t3825: \t\t\t'cmdmkfile'    : 'New text file',","\t3832: \t\t\t'cmdsearch'    : 'Find files',","\t3834: \t\t\t'cmdupload'    : 'Upload files',","\t3850: \t\t\t'ntffile'     : 'Open file',","\t3853: \t\t\t'ntfmkfile'   : 'Creating files',","\t3854: \t\t\t'ntfrm'       : 'Delete files',","\t3855: \t\t\t'ntfcopy'     : 'Copy files',","\t3856: \t\t\t'ntfmove'     : 'Move files',","\t3857: \t\t\t'ntfprepare'  : 'Prepare to copy files',","\t3858: \t\t\t'ntfrename'   : 'Rename files',","\t3859: \t\t\t'ntfupload'   : 'Uploading files',","\t3860: \t\t\t'ntfdownload' : 'Downloading files',","\t3861: \t\t\t'ntfsave'     : 'Save files',","\t3863: \t\t\t'ntfextract'  : 'Extracting files from archive',","\t3864: \t\t\t'ntfsearch'   : 'Searching files',","\t3897: \t\t\t'confirmRm'       : 'Are you sure you want to remove files?<br/>This cannot be undone!',","\t3898: \t\t\t'confirmRepl'     : 'Replace old file with new one?',","\t3910: \t\t\t'selectall'       : 'Select all files',","\t3911: \t\t\t'selectfiles'     : 'Select file(s)',","\t3912: \t\t\t'selectffile'     : 'Select first file',","\t3913: \t\t\t'selectlfile'     : 'Select last file',","\t3922: \t\t\t'files'           : 'Files',","\t3933: \t\t\t'webfm'           : 'Web file manager',","\t3950: \t\t\t'dropFiles'       : 'Drop files here',","\t3952: \t\t\t'selectForUpload' : 'Select files to upload',","\t3953: \t\t\t'moveFiles'       : 'Move files',","\t3954: \t\t\t'copyFiles'       : 'Copy files',","\t3976: \t\t\t'kindTorrent'     : 'Bittorrent file',","\t3983: \t\t\t'kindJAR'         : 'Java JAR file',","\t4045:  * File: /root/tmp/elFinder/js/ui/button.js","\t4126:  * File: /root/tmp/elFinder/js/ui/contexmenu.js","\t4275:  * File: /root/tmp/elFinder/js/ui/cwd.js","\t4321: \t\t\t * File css class","\t4325: \t\t\tclFile       = fm.res(c, 'cwdfile'),","\t4332: \t\t\tfileSelector = '.'+clFile,","\t4377: \t\t\t * Css class for temporary nodes (for mkdir/mkfile) commands","\t4381: \t\t\tclTmp = clFile+'-tmp',","\t4391: \t\t\t * File templates","\t4396: \t\t\t\ticon : '<div id=\"{hash}\" class=\"'+clFile+' {permsclass} {dirclass} ui-corner-all\"><div class=\"elfinder-cwd-file-wrapper ui-corner-all\"><div class=\"elfinder-cwd-icon {mime} ui-corner-all\" unselectable=\"on\" {style}/>{marker}</div><div class=\"elfinder-cwd-filename\" title=\"{name}\">{name}</div></div>',","\t4397: \t\t\t\trow  : '<tr id=\"{hash}\" class=\"'+clFile+' {permsclass} {dirclass}\"><td><div class=\"elfinder-cwd-file-wrapper\"><span class=\"elfinder-cwd-icon {mime}\"/>{marker}<span class=\"elfinder-cwd-filename\">{name}</span></div></td><td>{perms}</td><td>{date}</td><td>{size}</td><td>{kind}</td></tr>'","\t4437: \t\t\t * Return file html","\t4439: \t\t\t * @param  Object  file info","\t4451: \t\t\t * Flag. Required for msie to avoid unselect files on dragstart","\t4458: \t\t\t * Move selection to prev/next file","\t4477: \t\t\t\t\ts = sel.filter(prev ? ':first' : ':last');","\t4484: \t\t\t\t\t\t// find real prevoius file","\t4487: \t\t\t\t\t\t// find up/down side file in icons view","\t4508: \t\t\t\t\t\t\t// there is row before last one - select last file","\t4519: \t\t\t\t\t// there are no selected file - select first/last one","\t4526: \t\t\t\t\t\t// append new files to selected","\t4529: \t\t\t\t\t\t// unselect selected files","\t4532: \t\t\t\t\t// select file(s)","\t4535: \t\t\t\t\tscrollToView(n.filter(prev ? ':first' : ':last'));","\t4541: \t\t\tselectFile = function(hash) {","\t4546: \t\t\t * Unselect all files","\t4555: \t\t\t * Return selected files hashes list","\t4567: \t\t\t * Fire elfinder \"select\" event and pass selected files to it","\t4576: \t\t\t * Scroll file to set it visible","\t4578: \t\t\t * @param DOMElement  file/dir node","\t4595: \t\t\t * Files we get from server but not show yet","\t4604: \t\t\t * @param String  file hash","\t4627: \t\t\t * Lazy load - append to cwd not shown files","\t4639: \t\t\t\t\tfiles;","\t4646: \t\t\t\t\t&& (files = buffer.splice(0, fm.options.showFiles)).length) {","\t4648: \t\t\t\t\thtml = $.map(files, function(f) {","\t4679: \t\t\t * Do not add class on childs file over","\t4687: \t\t\t\t\t$.each(ui.helper.data('files'), function(i, h) {","\t4688: \t\t\t\t\t\tif (fm.file(h).phash == hash) {","\t4708: \t\t\t * Preload required thumbnails and on load add css to files.","\t4709: \t\t\t * Return false if required file is not visible yet (in buffer) -","\t4712: \t\t\t * @param  Object  file hash -> thumbnail map","\t4743: \t\t\t * @param  Array|Boolean  files hashes list for new api | true for old api","\t4746: \t\t\tloadThumbnails = function(files) {","\t4762: \t\t\t\ttmbs = tmbs = files.splice(0, tmbNum);","\t4770: \t\t\t\t\t\t\tloadThumbnails(files);","\t4777: \t\t\t * Add new files to cwd/buffer","\t4779: \t\t\t * @param  Array  new files","\t4782: \t\t\tadd = function(files) {","\t4784: \t\t\t\t\tl        = files.length, ","\t4788: \t\t\t\t\tfindNode = function(file) {","\t4789: \t\t\t\t\t\tvar pointer = cwd.find('[id]:first'), file2;","\t4792: \t\t\t\t\t\t\tfile2 = fm.file(pointer.attr('id'));","\t4793: \t\t\t\t\t\t\tif (file2 && fm.compare(file, file2) < 0) {","\t4799: \t\t\t\t\tfindIndex = function(file) {","\t4803: \t\t\t\t\t\t\tif (fm.compare(file, buffer[i]) < 0) {","\t4809: \t\t\t\t\tfile, hash, node, ndx;","\t4813: \t\t\t\t\tfile = files[l];","\t4814: \t\t\t\t\thash = file.hash;","\t4820: \t\t\t\t\tif ((node = findNode(file)) && node.length) {","\t4821: \t\t\t\t\t\tnode.before(itemhtml(file));","\t4822: \t\t\t\t\t} else if ((ndx = findIndex(file)) >= 0) {","\t4823: \t\t\t\t\t\tbuffer.splice(ndx, 0, file);","\t4825: \t\t\t\t\t\tplace.append(itemhtml(file));","\t4829: \t\t\t\t\t\tif (file.mime == 'directory') {","\t4831: \t\t\t\t\t\t} else if (file.tmb) {","\t4832: \t\t\t\t\t\t\tfile.tmb === 1 ? ltmb.push(hash) : (atmb[hash] = file.tmb);","\t4843: \t\t\t * Remove files from cwd/buffer","\t4845: \t\t\t * @param  Array  files hashes","\t4848: \t\t\tremove = function(files) {","\t4849: \t\t\t\tvar l = files.length, hash, n, ndx;","\t4852: \t\t\t\t\thash = files[l];","\t4875: \t\t\t * @param  Array  files","\t4878: \t\t\tcontent = function(files, any) {","\t4883: \t\t\t\t\tcwd.children('table,'+fileSelector).remove().end();","\t4895: \t\t\t\tbuffer = $.map(files, function(f) { return any || f.phash == phash ? f : null; });","\t4897: \t\t\t\tbuffer = fm.sortFiles(buffer);","\t4913: \t\t\t\t.delegate(fileSelector, 'click.'+fm.namespace, function(e) {","\t4936: \t\t\t\t.delegate(fileSelector, 'dblclick.'+fm.namespace, function(e) {","\t4937: \t\t\t\t\tfm.dblclick({file : this.id});","\t4940: \t\t\t\t.delegate(fileSelector, 'mouseenter.'+fm.namespace, function(e) {","\t4948: \t\t\t\t// add hover class to selected file","\t4949: \t\t\t\t.delegate(fileSelector, evtSelect, function(e) {","\t4953: \t\t\t\t// remove hover class from unselected file","\t4954: \t\t\t\t.delegate(fileSelector, evtUnselect, function(e) {","\t4957: \t\t\t\t// disable files wich removing or moving","\t4958: \t\t\t\t.delegate(fileSelector, evtDisable, function() {","\t4966: \t\t\t\t// if any files was not removed/moved - unlock its","\t4967: \t\t\t\t.delegate(fileSelector, evtEnable, function() {","\t4974: \t\t\t\t.delegate(fileSelector, 'scrolltoview', function() {","\t4977: \t\t\t\t.delegate(fileSelector, 'hover', function(e) {","\t4981: \t\t\t\t\tvar file = $(e.target).closest('.'+clFile);","\t4983: \t\t\t\t\tif (file.length) {","\t4986: \t\t\t\t\t\tif (!file.is('.'+clDisabled)) {","\t4987: \t\t\t\t\t\t\tif (!file.is('.'+clSelected)) {","\t4989: \t\t\t\t\t\t\t\tfile.trigger(evtSelect);","\t4993: \t\t\t\t\t\t\t\t'type'    : 'files',","\t5007: \t\t\t\t// make files selectable","\t5009: \t\t\t\t\tfilter     : fileSelector,","\t5016: \t\t\t\t// prepend fake file/dir","\t5017: \t\t\t\t.bind('create.'+fm.namespace, function(e, file) {","\t5020: \t\t\t\t\tparent.prepend($(itemhtml(file)).addClass(clTmp));","\t5023: \t\t\t\t// unselect all selected files","\t5028: \t\t\t\t.bind('selectfile', function(e, id) {","\t5084: \t\t\t\te.dataTransfer && e.dataTransfer.files &&  e.dataTransfer.files.length && fm.exec('upload', {files : e.dataTransfer.files})//fm.upload({files : e.dataTransfer.files});","\t5090: \t\t\t\tcontent(e.data.files, e.type=='search');","\t5093: \t\t\t\tcontent(fm.files());","\t5101: \t\t\t\t\tcontent(fm.files());","\t5104: \t\t\t\t\t\tselectFile(h);","\t5119: \t\t\t\t$.each($.map(e.data.changed || [], function(f) { return f.phash == phash ? f : null; }), function(i, file) {","\t5120: \t\t\t\t\tremove([file.hash]);","\t5121: \t\t\t\t\tadd([file]);","\t5122: \t\t\t\t\t$.inArray(file.hash, sel) !== -1 && selectFile(file.hash);","\t5138: \t\t\t// select dragged file if no selected, disable selectable","\t5143: \t\t\t\tif (target.is(fileSelector)) {","\t5161: \t\t\t.bind('lockfiles unlockfiles', function(e) {","\t5162: \t\t\t\tvar event = e.type == 'lockfiles' ? evtDisable : evtEnable,","\t5163: \t\t\t\t\tfiles = e.data.files || [], ","\t5164: \t\t\t\t\tl     = files.length;","\t5167: \t\t\t\t\tcwd.find('#'+files[l]).trigger(event);","\t5171: \t\t\t// select new files after some actions","\t5172: \t\t\t.bind('mkdir mkfile duplicate upload rename archive extract', function(e) {","\t5173: \t\t\t\tvar phash = fm.cwd().hash, files;","\t5177: \t\t\t\t$.each(e.data.added || [], function(i, file) { ","\t5178: \t\t\t\t\tfile && file.phash == phash && selectFile(file.hash);","\t5192: \t\t\t\t\t\tfm.select({selected : $.map(fm.files(), function(f) { return f.phash == phash ? f.hash : null; })})","\t5200: \t\t\t\tdescription : 'selectfiles',","\t5206: \t\t\t\tdescription : 'selectffile',","\t5215: \t\t\t\tdescription : 'selectlfile',","\t5232:  * File: /root/tmp/elFinder/js/ui/dialog.js","\t5259: \tthis.filter(':not(.ui-dialog-content)').each(function() {","\t5445:  * File: /root/tmp/elFinder/js/ui/navbar.js","\t5500:  * File: /root/tmp/elFinder/js/ui/overlay.js","\t5506: \tthis.filter(':not(.elfinder-overlay)').each(function() {","\t5552:  * File: /root/tmp/elFinder/js/ui/panel.js","\t5573:  * File: /root/tmp/elFinder/js/ui/path.js","\t5598: \t\t\t\t\tdirs.push('<a href=\"#'+hash+'\">'+fm.escape(fm.file(hash).name)+'</a>');","\t5610:  * File: /root/tmp/elFinder/js/ui/places.js","\t5805: \t\t\t\t\taccept     : '.elfinder-cwd-file-wrapper,.elfinder-tree-dir,.elfinder-cwd-file',","\t5810: \t\t\t\t\t\t$.each(ui.helper.data('files'), function(i, hash) {","\t5811: \t\t\t\t\t\t\tvar dir = fm.file(hash);","\t5825: \t\t// on fm load - show places and load files from backend","\t5844: \t\t\t\t\t$.each(data.files, function(i, file) {","\t5845: \t\t\t\t\t\tfile.mime == 'directory' && add(file);","\t5865: \t\t\t\t$.each(e.data.changed, function(i, file) {","\t5866: \t\t\t\t\tif ($.inArray(file.hash, dirs) !== -1) {","\t5867: \t\t\t\t\t\tremove(file.hash);","\t5868: \t\t\t\t\t\tfile.mime == 'directory' && add(file);","\t5882: \t\t\t\t\t\t$.each(data.files || [], function(i, file) {","\t5883: \t\t\t\t\t\t\tif ($.inArray(file.hash, dirs) === -1) {","\t5884: \t\t\t\t\t\t\t\tremove(file.hash);","\t5901:  * File: /root/tmp/elFinder/js/ui/searchbutton.js","\t5983:  * File: /root/tmp/elFinder/js/ui/sortbutton.js","\t6063:  * File: /root/tmp/elFinder/js/ui/stat.js","\t6068:  * Display number of files/selected files and its size in statusbar","\t6079: \t\t\tsetstat    = function(files, cwd) {","\t6083: \t\t\t\t$.each(files, function(i, file) {","\t6084: \t\t\t\t\tif (!cwd || file.phash == cwd) {","\t6086: \t\t\t\t\t\ts += parseInt(file.size)||0;","\t6096: \t\t\tsetstat(fm.files(), fm.cwd().hash)","\t6099: \t\t\tsetstat(e.data.files);","\t6104: \t\t\t\tfiles = fm.selectedFiles();","\t6106: \t\t\tif (files.length == 1) {","\t6107: \t\t\t\ts = files[0].size;","\t6108: \t\t\t\tsel.html(fm.escape(files[0].name)+(s > 0 ? ', '+fm.formatSize(s) : ''));","\t6113: \t\t\t$.each(files, function(i, file) {","\t6115: \t\t\t\ts += parseInt(file.size)||0;","\t6126:  * File: /root/tmp/elFinder/js/ui/toolbar.js","\t6165:  * File: /root/tmp/elFinder/js/ui/tree.js","\t6346: \t\t\t * Return only dirs from files list","\t6348: \t\t\t * @param  Array  files list","\t6351: \t\t\tfilter = function(files) {","\t6352: \t\t\t\treturn $.map(files||[], function(f) { return f.mime == 'directory' ? f : null });","\t6378: \t\t\t\t\tif ((info = fm.file(fm.navId2Hash(node.children('[id]').attr('id')))) ","\t6448: \t\t\t\t\t\tcurrent.parentsUntil('.'+root).filter('.'+subtree).show().prev('.'+navdir).addClass(expanded);","\t6455: \t\t\t\t\t\t\tvar dirs = filter(data.tree);","\t6490: \t\t\t\t\t\t.filter(function() { return $(this).next('.'+subtree).children().length > 0 })","\t6543: \t\t\t\t\t\t\t\tupdateTree(filter(data.tree)); ","\t6574: \t\t\t\tdirs = filter(data.files);","\t6586: \t\t\tvar dirs = filter(e.data.added);","\t6595: \t\t\tvar dirs = filter(e.data.changed),","\t6655: \t\t.bind('lockfiles unlockfiles', function(e) {","\t6656: \t\t\tvar lock = e.type == 'lockfiles',","\t6658: \t\t\t\tdirs = $.map(e.data.files||[], function(h) {  ","\t6659: \t\t\t\t\tvar dir = fm.file(h);","\t6681:  * File: /root/tmp/elFinder/js/ui/uploadButton.js","\t6685:  * @class  elFinder toolbar's button tor upload file","\t6694: \t\t\tinput = $('<input type=\"file\" multiple=\"true\"/>')","\t6714:  * File: /root/tmp/elFinder/js/ui/viewbutton.js","\t6737:  * File: /root/tmp/elFinder/js/ui/workzone.js","\t6773:  * File: /root/tmp/elFinder/js/commands/archive.js","\t6778:  * Archive selected files","\t6809: \t\tvar files = this.files(hashes),","\t6810: \t\t\tcnt   = files.length,","\t6828: \t\t\tif (!files[i].read) {","\t6843:  * File: /root/tmp/elFinder/js/commands/back.js","\t6870:  * File: /root/tmp/elFinder/js/commands/copy.js","\t6875:  * Put files in filemanager clipboard.","\t6887: \t\tvar sel = this.files(sel),","\t6900: \t\t$.each(this.files(hashes), function(i, file) {","\t6901: \t\t\tif (!(file.read && file.phash)) {","\t6902: \t\t\t\treturn !dfrd.reject(['errCopy', file.name, 'errPerm']);","\t6912:  * File: /root/tmp/elFinder/js/commands/cut.js","\t6917:  * Put files in filemanager clipboard.","\t6929: \t\tvar sel = this.files(sel),","\t6942: \t\t$.each(this.files(hashes), function(i, file) {","\t6943: \t\t\tif (!(file.read && file.phash) ) {","\t6944: \t\t\t\treturn !dfrd.reject(['errCopy', file.name, 'errPerm']);","\t6946: \t\t\tif (file.locked) {","\t6947: \t\t\t\treturn !dfrd.reject(['errLocked', file.name]);","\t6957:  * File: /root/tmp/elFinder/js/commands/download.js","\t6962:  * Download selected files.","\t6970: \t\tfilter = function(hashes) {","\t6971: \t\t\treturn $.map(self.files(hashes), function(f) { return f.mime == 'directory' ? null : f });","\t6982: \t\treturn  !this._disabled && cnt && cnt == filter(sel).length ? 0 : -1;","\t6988: \t\t\tfiles = filter(hashes),","\t7003: \t\tfor (i = 0; i < files.length; i++) {","\t7004: \t\t\tvar iframe = $('<iframe style=\"display:none\" src=\"'+base + 'cmd=file&target=' + files[i].hash+'&download=1'+'\"/>')","\t7018:  * File: /root/tmp/elFinder/js/commands/duplicate.js","\t7023:  * Create file/folder copy with suffix \"copy Number\"","\t7034: \t\tvar sel = this.files(sel),","\t7042: \t\t\tfiles  = this.files(hashes),","\t7043: \t\t\tcnt    = files.length,","\t7054: \t\t$.each(files, function(i, file) {","\t7055: \t\t\tif (!file.read || !fm.file(file.phash).write) {","\t7056: \t\t\t\treturn !dfrd.reject(['errCopy', file.name, 'errPerm']);","\t7074:  * File: /root/tmp/elFinder/js/commands/edit.js","\t7079:  * Edit text file in dialog window","\t7088: \t\t * Return files acceptable to edit","\t7090: \t\t * @param  Array  files hashes","\t7093: \t\tfilter = function(files) {","\t7094: \t\t\treturn $.map(files, function(file) {","\t7095: \t\t\t\treturn file.mime.indexOf('text/') === 0 || $.inArray(file.mime, mimes) !== -1 && file.read && file.write ? file : null;","\t7099: \t\t * Get file content and","\t7100: \t\t * open dialog with textarea to edit file content","\t7102: \t\t * @param  String  file hash","\t7105: \t\tedit = function(file) {","\t7106: \t\t\tvar hash   = file.hash,","\t7109: \t\t\t\tdata   = {cmd : 'file', target : hash},","\t7111: \t\t\t\tid    = 'edit-'+fm.namespace+'-'+file.hash,","\t7113: \t\t\t\t\tvar editor = $('<textarea class=\"elfinder-file-edit\" rows=\"20\">'+text+'</textarea>')","\t7144: \t\t\t\t\t\t\ttitle   : file.name,","\t7199: \t\t\tif (!file.read || !file.write) {","\t7200: \t\t\t\terror = ['errOpen', file.name, 'errPerm']","\t7207: \t\t\t\tnotify : {type : 'openfile', cnt : 1},","\t7226: \t\tvar sel = this.files(sel),","\t7229: \t\treturn !this._disabled && cnt && filter(sel).length == cnt ? 0 : -1;","\t7233: \t\tvar files = filter(this.files(hashes)),","\t7235: \t\t\tfile;","\t7241: \t\twhile ((file = files.shift())) {","\t7242: \t\t\tlist.push(edit(file));","\t7253:  * File: /root/tmp/elFinder/js/commands/extract.js","\t7258:  * Extract files from archive","\t7266: \t\tfilter  = function(files) {","\t7267: \t\t\treturn $.map(files, function(file) { ","\t7268: \t\t\t\treturn file.read && $.inArray(file.mime, mimes) !== -1 ? file : null","\t7282: \t\tvar sel = this.files(sel),","\t7285: \t\treturn !this._disabled && cnt && filter(sel).length == cnt ? 0 : -1;","\t7289: \t\tvar files    = this.files(hashes),","\t7291: \t\t\tcnt      = files.length, ","\t7293: \t\t\ti, file, error;","\t7300: \t\t\tfile = files[i];","\t7301: \t\t\tif (!(file.read && fm.file(file.phash).write)) {","\t7302: \t\t\t\terror = ['errExtract', file.name, 'errPerm']","\t7307: \t\t\tif ($.inArray(file.mime, mimes) === -1) {","\t7308: \t\t\t\terror = ['errExtract', file.name, 'errNoArchive'];","\t7314: \t\t\t\tdata       : {cmd : 'extract', target : file.hash},","\t7338:  * File: /root/tmp/elFinder/js/commands/forward.js","\t7365:  * File: /root/tmp/elFinder/js/commands/getfile.js","\t7369:  * @class elFinder command \"getfile\". ","\t7370:  * Return selected files info into outer callback.","\t7375: elFinder.prototype.commands.getfile = function() {","\t7378: \t\tfilter = function(files) {","\t7381: \t\t\tfiles = $.map(files, function(file) {","\t7382: \t\t\t\treturn file.mime != 'directory' || o.folders ? file : null;","\t7385: \t\t\treturn o.multiple || files.length == 1 ? files : [];","\t7389: \tthis.callback      = fm.options.getFileCallback;","\t7393: \t\tvar sel = this.files(sel),","\t7396: \t\treturn this.callback && cnt && filter(sel).length == cnt ? 0 : -1;","\t7402: \t\t\tfiles = this.files(hashes),","\t7403: \t\t\tcnt   = files.length,","\t7408: \t\t\t\t\tfm.trigger('getfile', {files : data});","\t7417: \t\t\tresult = function(file) {","\t7419: \t\t\t\t\t? opts.multiple ? $.map(files, function(f) { return f.url; }) : files[0].url","\t7420: \t\t\t\t\t: opts.multiple ? files : files[0];","\t7423: \t\t\ti, file, dim;","\t7430: \t\t\tfile = files[i];","\t7431: \t\t\tif (file.mime == 'directory' && !opts.folders) {","\t7434: \t\t\tfile.baseUrl = url;","\t7435: \t\t\tfile.url     = fm.url(file.hash);","\t7436: \t\t\tfile.path    = fm.path(file.hash);","\t7437: \t\t\tif (file.tmb && file.tmb != 1) {","\t7438: \t\t\t\tfile.tmb = tmb + file.tmb;","\t7440: \t\t\tif (file.dim) {","\t7441: \t\t\t\tdim = file.dim.split('x');","\t7442: \t\t\t\tfile.width = dim[0];","\t7443: \t\t\t\tfile.height = dim[1];","\t7444: \t\t\t} else if (file.mime.indexOf('image') !== -1) {","\t7446: \t\t\t\t\tdata : {cmd : 'dim', target : file.hash},","\t7456: \t\t\t\t}, files[i])));","\t7462: \t\t\t\tdfrd.resolve(result(files));","\t7467: \t\treturn dfrd.resolve(result(files));","\t7473:  * File: /root/tmp/elFinder/js/commands/help.js","\t7603: \t\t\t\t\t\tcontent.find('.ui-tabs-panel').hide().filter(link.attr('href')).show();","\t7607: \t\t\t\t.filter(':first').click();","\t7624:  * File: /root/tmp/elFinder/js/commands/home.js","\t7652:  * File: /root/tmp/elFinder/js/commands/info.js","\t7657:  * Display dialog with file properties.","\t7676: \t\t\tfiles    : fm.i18n('files'),","\t7713: \t\t\tfiles   = this.files(hashes),","\t7714: \t\t\tcnt     = files.length,","\t7726: \t\t\tid = fm.namespace+'-info-'+$.map(files, function(f) { return f.hash }).join('-'),","\t7728: \t\t\tsize, tmb, file, title, dcnt;","\t7741: \t\t\tfile  = files[0];","\t7742: \t\t\tview  = view.replace('{class}', fm.mime2class(file.mime));","\t7743: \t\t\ttitle = tpl.itemTitle.replace('{name}', file.name).replace('{kind}', fm.mime2kind(file));","\t7745: \t\t\tif (file.tmb) {","\t7746: \t\t\t\ttmb = fm.option('tmbUrl')+file.tmb;","\t7749: \t\t\tif (!file.read) {","\t7751: \t\t\t} else if (file.mime != 'directory' || file.alias) {","\t7752: \t\t\t\tsize = fm.formatSize(file.size);","\t7755: \t\t\t\tcount.push(file.hash);","\t7759: \t\t\tfile.alias && content.push(row.replace(l, msg.aliasfor).replace(v, file.alias));","\t7760: \t\t\tcontent.push(row.replace(l, msg.path).replace(v, fm.escape(fm.path(file.hash))));","\t7761: \t\t\tfile.read && content.push(row.replace(l, msg.link).replace(v,  '<a href=\"'+fm.url(file.hash)+'\" target=\"_blank\">'+file.name+'</a>'));","\t7763: \t\t\tif (file.dim) { // old api","\t7764: \t\t\t\tcontent.push(row.replace(l, msg.dim).replace(v, file.dim));","\t7765: \t\t\t} else if (file.mime.indexOf('image') !== -1) {","\t7768: \t\t\t\t\tdata : {cmd : 'dim', target : file.hash},","\t7780: \t\t\tcontent.push(row.replace(l, msg.modify).replace(v, fm.formatDate(file.date)));","\t7781: \t\t\tcontent.push(row.replace(l, msg.perms).replace(v, fm.formatPermissions(file)));","\t7782: \t\t\tcontent.push(row.replace(l, msg.locked).replace(v, file.locked ? msg.yes : msg.no));","\t7786: \t\t\tdcnt  = $.map(files, function(f) { return f.mime == 'directory' ? 1 : null }).length;","\t7789: \t\t\t\t$.each(files, function(h, f) { ","\t7798: \t\t\t\tcontent.push(row.replace(l, msg.kind).replace(v, msg.files));","\t7801: \t\t\t\tcontent.push(row.replace(l, msg.kind).replace(v, dcnt == cnt ? msg.folders : msg.folders+' '+dcnt+', '+msg.files+' '+(cnt-dcnt)))","\t7803: \t\t\t\tcount = $.map(files, function(f) { return f.hash });","\t7842:  * File: /root/tmp/elFinder/js/commands/mkdir.js","\t7870:  * File: /root/tmp/elFinder/js/commands/mkfile.js","\t7874:  * @class  elFinder command \"mkfile\"","\t7875:  * Create new empty file","\t7879: elFinder.prototype.commands.mkfile = function() {","\t7883: \tthis.prefix          = 'untitled file.txt';","\t7894:  * File: /root/tmp/elFinder/js/commands/open.js","\t7899:  * Enter folder or open files in new windows","\t7916: \t\tvar sel = this.files(sel),","\t7921: \t\t\t: cnt ? ($.map(sel, function(file) { return file.mime == 'directory' ? null : file}).length == cnt ? 0 : -1) : -1","\t7927: \t\t\tfiles = this.files(hashes),","\t7928: \t\t\tcnt   = files.length,","\t7929: \t\t\tfile, url, s, w;","\t7936: \t\tif (cnt == 1 && (file = files[0]) && file.mime == 'directory') {","\t7937: \t\t\treturn file && !file.read","\t7938: \t\t\t\t? dfrd.reject(['errOpen', file.name, 'errPerm'])","\t7940: \t\t\t\t\t\tdata   : {cmd  : 'open', target : file.hash},","\t7946: \t\tfiles = $.map(files, function(file) { return file.mime != 'directory' ? file : null });","\t7948: \t\t// nothing to open or files and folders selected - do nothing","\t7949: \t\tif (cnt != files.length) {","\t7953: \t\t// open files","\t7954: \t\tcnt = files.length;","\t7956: \t\t\tfile = files[cnt];","\t7958: \t\t\tif (!file.read) {","\t7959: \t\t\t\treturn dfrd.reject(['errOpen', file.name, 'errPerm']);","\t7962: \t\t\tif (!(url = fm.url(file.hash))) {","\t7965: \t\t\t\t\t+ (fm.oldAPI ? 'cmd=open&current='+file.phash : 'cmd=file')","\t7966: \t\t\t\t\t+ '&target=' + file.hash;","\t7971: \t\t\tif (file.dim) {","\t7972: \t\t\t\ts = file.dim.split('x');","\t7986:  * File: /root/tmp/elFinder/js/commands/paste.js","\t7991:  * Paste filesfrom clipboard into directory.","\t7992:  * If files pasted in its parent directory - files duplicates will created","\t8018: \t\t\t\tdst = this.fm.file(dst[0]);","\t8030: \t\t\tdst    = dst ? this.files(dst)[0] : fm.cwd(),","\t8031: \t\t\tfiles  = fm.clipboard(),","\t8032: \t\t\tcnt    = files.length,","\t8033: \t\t\tcut    = cnt ? files[0].cut : false,","\t8041: \t\t\tcopy  = function(files) {","\t8042: \t\t\t\treturn files.length && fm._commands.duplicate","\t8043: \t\t\t\t\t? fm.exec('duplicate', files)","\t8046: \t\t\tpaste = function(files) {","\t8049: \t\t\t\t\tintersect = function(files, names) {","\t8051: \t\t\t\t\t\t\ti   = files.length;","\t8054: \t\t\t\t\t\t\t$.inArray(files[i].name, names) !== -1 && ret.unshift(i);","\t8060: \t\t\t\t\t\t\tfile = files[i],","\t8063: \t\t\t\t\t\tif (!file) {","\t8068: \t\t\t\t\t\t\ttitle  : fm.i18n(cut ? 'moveFiles' : 'copyFiles'),","\t8069: \t\t\t\t\t\t\ttext   : fm.i18n(['errExists', file.name, 'confirmRepl']), ","\t8076: \t\t\t\t\t\t\t\t\t\t: paste(files);","\t8087: \t\t\t\t\t\t\t\t\t\t\tfiles[existed[i]].remove = true","\t8090: \t\t\t\t\t\t\t\t\t\tfiles[existed[ndx]].remove = true;","\t8095: \t\t\t\t\t\t\t\t\t\t: paste(files);","\t8107: \t\t\t\t\t\texisted = intersect(files, names);","\t8108: \t\t\t\t\t\texisted.length ? confirm(0) : paste(files);","\t8110: \t\t\t\t\tpaste     = function(files) {","\t8111: \t\t\t\t\t\tvar files  = $.map(files, function(file) { return !file.remove ? file : null } ),","\t8112: \t\t\t\t\t\t\tcnt    = files.length,","\t8121: \t\t\t\t\t\tsrc = files[0].phash;","\t8122: \t\t\t\t\t\tfiles = $.map(files, function(f) { return f.hash});","\t8125: \t\t\t\t\t\t\t\tdata   : {cmd : 'paste', dst : dst.hash, targets : files, cut : cut ? 1 : 0, src : src},","\t8129: \t\t\t\t\t\t\t\tfm.unlockfiles({files : files});","\t8134: \t\t\t\tif (self._disabled || !files.length) {","\t8140: \t\t\t\t\tpaste(files);","\t8144: \t\t\t\t\t\tpaste(files);","\t8148: \t\t\t\t\t\t\t? valid($.map(fm.files(), function(file) { return file.phash == dst.hash ? file.name : null }))","\t8170: \t\t\treturn dfrd.reject([error, files[0].name, 'errPerm']);","\t8175: \t\t$.each(files, function(i, file) {","\t8176: \t\t\tif (!file.read) {","\t8177: \t\t\t\treturn !dfrd.reject([error, files[0].name, 'errPerm']);","\t8180: \t\t\tif (cut && file.locked) {","\t8181: \t\t\t\treturn !dfrd.reject(['errLocked', file.name]);","\t8184: \t\t\tif ($.inArray(file.hash, parents) !== -1) {","\t8185: \t\t\t\treturn !dfrd.reject(['errCopyInItself', file.name]);","\t8188: \t\t\tfparents = fm.parents(file.hash);","\t8191: \t\t\t\tif ($.map(fparents, function(h) { var d = fm.file(h); return d.phash == dst.hash && d.name == file.name ? d : null }).length) {","\t8192: \t\t\t\t\treturn !dfrd.reject(['errReplByChild', file.name]);","\t8196: \t\t\tif (file.phash == dst.hash) {","\t8197: \t\t\t\tfcopy.push(file.hash);","\t8200: \t\t\t\t\thash  : file.hash,","\t8201: \t\t\t\t\tphash : file.phash,","\t8202: \t\t\t\t\tname  : file.name","\t8222:  * File: /root/tmp/elFinder/js/commands/quicklook.js","\t8227:  * Fast preview for some files types","\t8288: \t\t * @param  jQuery  file node in cwd","\t8430: \t\t\t\tfile    = e.file,","\t8434: \t\t\tif (file) {","\t8435: \t\t\t\t!file.read && e.stopImmediatePropagation();","\t8436: \t\t\t\tself.window.data('hash', file.hash);","\t8438: \t\t\t\ttitle.html(fm.escape(file.name));","\t8441: \t\t\t\t\t\ttpl.replace(/\\{value\\}/, file.name)","\t8442: \t\t\t\t\t\t+ tpl.replace(/\\{value\\}/, fm.mime2kind(file))","\t8443: \t\t\t\t\t\t+ (file.mime == 'directory' ? '' : tpl.replace(/\\{value\\}/, fm.formatSize(file.size)))","\t8444: \t\t\t\t\t\t+ tpl.replace(/\\{value\\}/, fm.i18n('modify')+': '+ fm.formatDate(file.date))","\t8446: \t\t\t\ticon.addClass('elfinder-cwd-icon ui-corner-all '+fm.mime2class(file.mime));","\t8448: \t\t\t\tif (file.tmb) {","\t8456: \t\t\t\t\t\t.attr('src', (tmb = fm.tmb(file.hash)));","\t8482: \t\t\t\tfile = self.value,","\t8485: \t\t\tif (self.closed() && file && (node = cwd.find('#'+file.hash)).length) {","\t8500: \t\t\t\tfile    = self.value,","\t8526: \t * Selected file","\t8533: \t\t// save selected file","\t8534: \t\tselect : function() { this.update(void(0), this.fm.selectedFiles()[0]); },","\t8617: \t\t\t\t\tself.value ? preview.trigger($.Event('update', {file : self.value})) : win.trigger('close');","\t8651:  * File: /root/tmp/elFinder/js/commands/quicklook.plugins.js","\t8676: \t\t\tvar file = e.file,","\t8679: \t\t\tif ($.inArray(file.mime, mimes) !== -1) {","\t8680: \t\t\t\t// this is our file - stop event propagation","\t8714: \t\t\t\t\t.attr('src', ql.fm.url(file.hash));","\t8731: \t\t\tvar file = e.file, jqxhr;","\t8733: \t\t\tif ($.inArray(file.mime, mimes) !== -1) {","\t8736: \t\t\t\t// stop loading on change file if not loaded yet","\t8744: \t\t\t\t\tdata           : {cmd : 'get', target  : file.hash, current : file.phash},","\t8770: \t\t\tvar file = e.file,","\t8771: \t\t\t\tmime = file.mime,","\t8777: \t\t\t\t// stop loading on change file if not loadin yet","\t8785: \t\t\t\t\tdata   : {cmd     : 'get', target  : file.hash },","\t8820: \t\t\tvar file = e.file, node;","\t8822: \t\t\tif (file.mime == mime) {","\t8835: \t\t\t\t\t.attr('src', fm.url(file.hash));","\t8863: \t\t\tvar file = e.file,","\t8866: \t\t\tif (file.mime == mime) {","\t8869: \t\t\t\tpreview.append((node = $('<embed class=\"elfinder-quicklook-preview-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" src=\"'+fm.url(file.hash)+'\" quality=\"high\" type=\"application/x-shockwave-flash\" />')));","\t8899: \t\t\tvar file = e.file,","\t8900: \t\t\t\ttype = mimes[file.mime];","\t8905: \t\t\t\tnode = $('<audio class=\"elfinder-quicklook-preview-audio\" controls preload=\"auto\" autobuffer><source src=\"'+ql.fm.url(file.hash)+'\" /></audio>')","\t8936: \t\t\tvar file = e.file,","\t8937: \t\t\t\ttype = mimes[file.mime];","\t8943: \t\t\t\tnode = $('<video class=\"elfinder-quicklook-preview-video\" controls preload=\"auto\" autobuffer><source src=\"'+ql.fm.url(file.hash)+'\" /></video>').appendTo(preview);","\t8973: \t\t\tvar file  = e.file,","\t8974: \t\t\t\tmime  = file.mime,","\t8977: \t\t\tif ($.inArray(file.mime, mimes) !== -1) {","\t8980: \t\t\t\tnode = $('<embed src=\"'+ql.fm.url(file.hash)+'\" type=\"'+mime+'\" class=\"elfinder-quicklook-preview-'+(video ? 'video' : 'audio')+'\"/>')","\t8995:  * File: /root/tmp/elFinder/js/commands/reload.js","\t9000:  * Sync files and folders","\t9034:  * File: /root/tmp/elFinder/js/commands/rename.js","\t9039:  * Rename selected file.","\t9051: \t\tvar sel = this.fm.selectedFiles();","\t9061: \t\t\tfile     = fm.file(sel.shift()),","\t9062: \t\t\tfilename = '.elfinder-cwd-filename',","\t9066: \t\t\t\t\t\tname   = fm.escape(file.name);","\t9073: \t\t\t\t\t\tcwd.find('#'+file.hash).find(filename).html(name);","\t9104: \t\t\t\t\t\tif (name == file.name) {","\t9110: \t\t\t\t\t\tif (fm.fileByName(name, file.phash)) {","\t9115: \t\t\t\t\t\tfm.lockfiles({files : [file.hash]});","\t9117: \t\t\t\t\t\t\t\tdata   : {cmd : 'rename', target : file.hash, name : name},","\t9128: \t\t\t\t\t\t\t\tfm.unlockfiles({files : [file.hash]})","\t9133: \t\t\tnode = cwd.find('#'+file.hash).find(filename).empty().append(input.val(file.name)),","\t9141: \t\tif (!file || cnt > 1 || !node.length) {","\t9145: \t\tif (file.locked) {","\t9146: \t\t\treturn dfrd.reject(['errLocked', file.name]);","\t9150: \t\t\tinput.parent().length && file && $.inArray(file.hash, fm.selected()) === -1 && input.blur();","\t9164:  * File: /root/tmp/elFinder/js/commands/resize.js","\t9178: \t\treturn this.fm.selected().length == 1 && this.fm.selectedFiles()[0].mime.indexOf('image/') !== -1 ? 0 : -1;","\t9183: \t\t\tfiles = this.files(hashes),","\t9186: \t\t\topen = function(file, id) {","\t9259: \t\t\t\t\t\t\t\t.filter(':text').keydown(function(e) {","\t9289: \t\t\t\t\t\t\t\t.filter(':first').focus();","\t9384: \t\t\t\t\t\t\t\ttarget : file.hash,","\t9403: \t\t\t\t\tsrc     = fm.url(file.hash)","\t9438: \t\t\t\t\ttitle          : file.name,","\t9457: \t\tif (!files.length || files[0].mime.indexOf('image/') === -1) {","\t9461: \t\tid = 'resize-'+fm.namespace+'-'+files[0].hash;","\t9469: \t\topen(files[0], id)","\t9477:  * File: /root/tmp/elFinder/js/commands/rm.js","\t9482:  * Delete files","\t9495: \t\treturn !this._disabled && sel.length && $.map(sel, function(h) { var f = fm.file(h); return f && f.phash && !f.locked ? h : null }).length == sel.length","\t9506: \t\t\tfiles  = this.files(hashes),","\t9507: \t\t\tcnt    = files.length,","\t9515: \t\t$.each(files, function(i, file) {","\t9516: \t\t\tif (!file.phash) {","\t9517: \t\t\t\treturn !dfrd.reject(['errRm', file.name, 'errPerm']);","\t9519: \t\t\tif (file.locked) {","\t9520: \t\t\t\treturn !dfrd.reject(['errLocked', file.name]);","\t9522: \t\t\tif (file.hash == cwd) {","\t9523: \t\t\t\tgoroot = fm.root(file.hash);","\t9528: \t\t\tfiles = this.hashes(hashes);","\t9536: \t\t\t\t\t\tfm.lockfiles({files : files});","\t9538: \t\t\t\t\t\t\tdata   : {cmd  : 'rm', targets : files}, ","\t9550: \t\t\t\t\t\t\tfm.unlockfiles({files : files});","\t9567:  * File: /root/tmp/elFinder/js/commands/search.js","\t9572:  * Find files","\t9577: \tthis.title          = 'Find files';","\t9614:  * File: /root/tmp/elFinder/js/commands/sort.js","\t9619:  * Change sort files rule","\t9661:  * File: /root/tmp/elFinder/js/commands/up.js","\t9689:  * File: /root/tmp/elFinder/js/commands/upload.js","\t9694:  * Upload files using iframe or XMLHttpRequest & FormData.","\t9695:  * Dialog allow to send files using drag and drop","\t9739: \t\tif (data && (data.input || data.files)) {","\t9746: \t\tinput = $('<input type=\"file\" multiple=\"true\"/>')","\t9761: \t\t\tdropbox = $('<div class=\"ui-corner-all elfinder-upload-dropbox\">'+fm.i18n('dropFiles')+'</div>')","\t9786: \t\t\t\tupload({files : e.dataTransfer.files});","\t9804:  * File: /root/tmp/elFinder/js/commands/view.js","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.ar.js:","\t35: \t\t\t'errNotFile'           : 'العنصر المختار ليس ملف',","\t43: \t\t\t'errFileNotFound'      : 'الملف غير موجود',","\t47: \t\t\t'errMkfile'            : ' غير قادر على إنشاء ملف جديد\"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'لم يتم رفع أي ملف ',","\t55: \t\t\t'errFileMaxSize'       : 'حجم الملف أكبر من الحجم المسموح به',","\t70: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t82: \t\t\t'cmdgetfile'   : 'أختيار الملفات',","\t87: \t\t\t'cmdmkfile'    : 'ملف نصي جديد',","\t109: \t\t\t'ntffile'     : 'فتح ملف',","\t112: \t\t\t'ntfmkfile'   : 'ينشئ الملفات',","\t159: \t\t\t'selectfiles'     : 'تحديد ملفات',","\t160: \t\t\t'selectffile'     : 'تحديد الملف الاول',","\t161: \t\t\t'selectlfile'     : 'تحديد الملف الأخير',","\t170: \t\t\t'files'           : 'ملفات',","\t198: \t\t\t'dropFiles'       : 'لصق الملفات هنا',","\t201: \t\t\t'moveFiles'       : 'قص الملفات',","\t202: \t\t\t'copyFiles'       : 'نسخ الملفات',","\t205: \t\t\t'untitled file.txt' : 'untitled file.txt',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.cs.js:","\t34: \t\t\t'errNotFile'           : 'Objekt není soubor.',","\t42: \t\t\t'errFileNotFound'      : 'Soubor nenalezen.',","\t46: \t\t\t'errMkfile'            : 'Nepodařilo se vytvořit soubor \"$1\".',","\t52: \t\t\t'errUploadNoFiles'     : 'Nejsou vybrány žádné soubory k nahrání.',","\t54: \t\t\t'errFileMaxSize'       : 'Překročena maximální povolená velikost souboru.',","\t81: \t\t\t'cmdgetfile'   : 'Vybrat soubory',","\t86: \t\t\t'cmdmkfile'    : 'Nový textový soubor',","\t108: \t\t\t'ntffile'     : 'Otevřít soubor',","\t111: \t\t\t'ntfmkfile'   : 'Vytváření souborů',","\t158: \t\t\t'selectfiles'     : 'Vybrat soubor(y)',","\t159: \t\t\t'selectffile'     : 'Vybrat první soubor',","\t160: \t\t\t'selectlfile'     : 'Vybrat poslední soubor',","\t169: \t\t\t'files'           : 'Soubory',","\t197: \t\t\t'dropFiles'       : 'Přetáhněte soubory sem',","\t200: \t\t\t'moveFiles'       : 'Přesunout sobory',","\t201: \t\t\t'copyFiles'       : 'Zkupírovat soubory',","\t204: \t\t\t'untitled file.txt' : 'nepojmenovaný soubor.txt',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.de.js:","\t35: \t\t\t'errNotFile'           : 'Objekt ist keine Datei.',","\t43: \t\t\t'errFileNotFound'      : 'Datei nicht gefunden.',","\t47: \t\t\t'errMkfile'            : 'Kann Datei \"$1\" nicht erstellen.',","\t53: \t\t\t'errUploadNoFiles'     : 'Keine Dateien zum Hochladen gefunden.',","\t55: \t\t\t'errFileMaxSize'       : 'Die Datei überschreitet die Maximalgröße',","\t79: \t\t\t'cmdgetfile'   : 'Datei auswählen',","\t84: \t\t\t'cmdmkfile'    : 'Neue Textdatei',","\t106: \t\t\t'ntffile'     : 'öffne Datei',","\t109: \t\t\t'ntfmkfile'   : 'Erstelle Dateien',","\t111: \t\t\t'ntfcopy'     : 'Kopiere Dateien files',","\t115: \t\t\t'ntfupload'   : 'Uploading files',","\t116: \t\t\t'ntfdownload' : 'Downloading files',","\t156: \t\t\t'selectfiles'     : 'Dateien auswählen',","\t157: \t\t\t'selectffile'     : 'Erste Datei auswhählen',","\t158: \t\t\t'selectlfile'     : 'Letzte Datei auswählen',","\t167: \t\t\t'files'           : 'Dateien',","\t195: \t\t\t'dropFiles'       : 'Dateien hier ablegen',","\t198: \t\t\t'moveFiles'       : 'Dateien verschieben',","\t199: \t\t\t'copyFiles'       : 'Dateien kopieren',","\t269: \t\t\t'kindVideoDV'     : 'DV Film',","\t270: \t\t\t'kindVideoMPEG'   : 'MPEG Film',","\t271: \t\t\t'kindVideoMPEG4'  : 'MPEG-4 Film',","\t272: \t\t\t'kindVideoAVI'    : 'AVI Film',","\t273: \t\t\t'kindVideoMOV'    : 'Quick Time Film',","\t274: \t\t\t'kindVideoWM'     : 'Windows Media Film',","\t275: \t\t\t'kindVideoFlash'  : 'Flash Film',","\t276: \t\t\t'kindVideoMKV'    : 'Matroska Film',","\t277: \t\t\t'kindVideoOGG'    : 'Ogg Film'","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.es.js:","\t35: \t\t\t'errNotFile'           : 'El objeto no es un archivo.',","\t43: \t\t\t'errFileNotFound'      : 'Archivo no encontrado.',","\t47: \t\t\t'errMkfile'            : 'No se puede crear el archivo \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'No hay archivos para subir.',","\t55: \t\t\t'errFileMaxSize'       : 'El tamaño del archivo excede el máximo permitido.',","\t82: \t\t\t'cmdgetfile'   : 'Seleccionar archivos',","\t87: \t\t\t'cmdmkfile'    : 'Nuevo archivo de texto',","\t109: \t\t\t'ntffile'     : 'Abrir archivo',","\t112: \t\t\t'ntfmkfile'   : 'Creando archivos',","\t159: \t\t\t'selectfiles'     : 'Seleccionar archivo(s)',","\t160: \t\t\t'selectffile'     : 'Seleccionar primer archivo',","\t161: \t\t\t'selectlfile'     : 'Seleccionar último archivo',","\t170: \t\t\t'files'           : 'Archivos',","\t198: \t\t\t'dropFiles'       : 'Arrastre archivos aquí',","\t201: \t\t\t'moveFiles'       : 'Mover archivos',","\t202: \t\t\t'copyFiles'       : 'Copiar archivos',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.fr.js:","\t35: \t\t\t'errNotFile'           : 'Cet objet n\\'est pas un fichier.',","\t43: \t\t\t'errFileNotFound'      : 'Fichier non trouvé.',","\t47: \t\t\t'errMkfile'            : 'impossible de créer le fichier \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'Aucun fichier a envoyer.',","\t55: \t\t\t'errFileMaxSize'       : 'Le fichier dépasse la taille maximale allouée.',","\t70: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t82: \t\t\t'cmdgetfile'   : 'Sélectionner les fichiers',","\t87: \t\t\t'cmdmkfile'    : 'Nouveau fichier texte',","\t111: \t\t\t'ntffile'     : 'Ouvrir le fichier',","\t114: \t\t\t'ntfmkfile'   : 'Création des fichiers',","\t171: \t\t\t'selectfiles'     : 'Sélectionner le(s) fichier(s)',","\t172: \t\t\t'selectffile'     : 'Sélectionner le premier fichier',","\t173: \t\t\t'selectlfile'     : 'Sélectionner le dernier fichier',","\t182: \t\t\t'files'           : 'Fichiers',","\t210: \t\t\t'dropFiles'       : 'Déposez les fichiers ici',","\t213: \t\t\t'moveFiles'       : 'Déplacer les fichiers',","\t214: \t\t\t'copyFiles'       : 'Copier les fichiers',","\t217: \t\t\t'untitled file.txt' : 'untitled file.txt',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.jp.js:","\t35: \t\t\t'errNotFile'           : 'オブジェクトがファイルではありません',","\t43: \t\t\t'errFileNotFound'      : 'ファイルが見つかりません',","\t47: \t\t\t'errMkfile'            : '\"$1\"ファイルを作成することができません',","\t53: \t\t\t'errUploadNoFiles'     : 'アップロードされたファイルがありません',","\t55: \t\t\t'errFileMaxSize'       : 'ファイルが許容サイズを超えています',","\t79: \t\t\t'cmdgetfile'   : 'ファイル選択',","\t84: \t\t\t'cmdmkfile'    : '新規テキストファイル',","\t106: \t\t\t'ntffile'     : 'ファイルを開く',","\t109: \t\t\t'ntfmkfile'   : 'ファイルを作成',","\t156: \t\t\t'selectfiles'     : 'ファイル選択',","\t157: \t\t\t'selectffile'     : '最初のファイルを選択',","\t158: \t\t\t'selectlfile'     : '最後のファイルを選択',","\t167: \t\t\t'files'           : 'ファイル',","\t194: \t\t\t'dropFiles'       : 'ここにファイルをドロップ',","\t197: \t\t\t'moveFiles'       : 'ファイルを移動',","\t198: \t\t\t'copyFiles'       : 'ファイルをコピー',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.LANG.js:","\t3:  * use this file to create new translation","\t42: \t\t\t'errNotFile'           : 'Object is not a file.',","\t47: \t\t\t'errExists'            : 'File named \"$1\" already exists.',","\t48: \t\t\t'errInvName'           : 'Invalid file name.',","\t50: \t\t\t'errFileNotFound'      : 'File not found.',","\t52: \t\t\t'errPopup'             : 'Browser prevented opening popup window. To open file enable it in browser options.',","\t54: \t\t\t'errMkfile'            : 'Unable to create file \"$1\".',","\t56: \t\t\t'errCopyFrom'          : 'Copying files from volume \"$1\" not allowed.',","\t57: \t\t\t'errCopyTo'            : 'Copying files to volume \"$1\" not allowed.',","\t60: \t\t\t'errUploadNoFiles'     : 'No files found for upload.',","\t62: \t\t\t'errFileMaxSize'       : 'File exceeds maximum allowed size.',","\t63: \t\t\t'errUploadMime'        : 'File type not allowed.',","\t70: \t\t\t'errExtract'           : 'Unable to extract files from \"$1\".',","\t73: \t\t\t'errNoArchive'         : 'File is not archive or has unsupported archive type.',","\t77: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t79: \t\t\t'errUsupportType'      : 'Unsupported file type.',","\t88: \t\t\t'cmdedit'      : 'Edit file',","\t89: \t\t\t'cmdextract'   : 'Extract files from archive',","\t91: \t\t\t'cmdgetfile'   : 'Select files',","\t96: \t\t\t'cmdmkfile'    : 'New text file',","\t103: \t\t\t'cmdsearch'    : 'Find files',","\t105: \t\t\t'cmdupload'    : 'Upload files',","\t121: \t\t\t'ntffile'     : 'Open file',","\t124: \t\t\t'ntfmkfile'   : 'Creating files',","\t125: \t\t\t'ntfrm'       : 'Delete files',","\t126: \t\t\t'ntfcopy'     : 'Copy files',","\t127: \t\t\t'ntfmove'     : 'Move files',","\t128: \t\t\t'ntfprepare'  : 'Prepare to copy files',","\t129: \t\t\t'ntfrename'   : 'Rename files',","\t130: \t\t\t'ntfupload'   : 'Uploading files',","\t131: \t\t\t'ntfdownload' : 'Downloading files',","\t132: \t\t\t'ntfsave'     : 'Save files',","\t134: \t\t\t'ntfextract'  : 'Extracting files from archive',","\t135: \t\t\t'ntfsearch'   : 'Searching files',","\t167: \t\t\t'confirmRm'       : 'Are you sure you want to remove files?<br/>This cannot be undone!',","\t168: \t\t\t'confirmRepl'     : 'Replace old file with new one?',","\t180: \t\t\t'selectall'       : 'Select all files',","\t181: \t\t\t'selectfiles'     : 'Select file(s)',","\t182: \t\t\t'selectffile'     : 'Select first file',","\t183: \t\t\t'selectlfile'     : 'Select last file',","\t192: \t\t\t'files'           : 'Files',","\t203: \t\t\t'webfm'           : 'Web file manager',","\t220: \t\t\t'dropFiles'       : 'Drop files here',","\t222: \t\t\t'selectForUpload' : 'Select files to upload',","\t223: \t\t\t'moveFiles'       : 'Move files',","\t224: \t\t\t'copyFiles'       : 'Copy files',","\t227: \t\t\t'untitled file.txt' : 'untitled file.txt',","\t248: \t\t\t'kindTorrent'     : 'Bittorrent file',","\t255: \t\t\t'kindJAR'         : 'Java JAR file',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.nl.js:","\t35: \t\t\t'errNotFile'           : 'Object is geen bestand.',","\t43: \t\t\t'errFileNotFound'      : 'Bestand niet gevonden.',","\t47: \t\t\t'errMkfile'            : 'Kan bestand \"$1\" niet aanmaken.',","\t53: \t\t\t'errUploadNoFiles'     : 'Geen bestanden gevonden om te uploaden.',","\t55: \t\t\t'errFileMaxSize'       : 'Bestand overschrijdt de maximale grootte.',","\t84: \t\t\t'cmdgetfile'   : 'Kies bestanden',","\t89: \t\t\t'cmdmkfile'    : 'Nieuw tekstbestand',","\t114: \t\t\t'ntffile'     : 'Bezig met openen bestand',","\t117: \t\t\t'ntfmkfile'   : 'Bezig met Bestanden maken',","\t174: \t\t\t'selectfiles'     : 'Selecteer bestand(en)',","\t175: \t\t\t'selectffile'     : 'Selecteer eerste bestand',","\t176: \t\t\t'selectlfile'     : 'Selecteer laatste bestand',","\t185: \t\t\t'files'           : 'Bestanden',","\t213: \t\t\t'dropFiles'       : 'Sleep hier uw bestanden heen',","\t216: \t\t\t'moveFiles'       : 'Verplaats bestanden',","\t217: \t\t\t'copyFiles'       : 'Kopieer bestanden',","\t220: \t\t\t'untitled file.txt' : 'nieuw bestand.txt',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.pt_BR.js:","\t35: \t\t\t'errNotFile'           : 'Objeto não é um arquivo.',","\t43: \t\t\t'errFileNotFound'      : 'Arquivo não encontrado.',","\t47: \t\t\t'errMkfile'            : 'Incapaz de criar o arquivo \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'Não foi encontrado nenhum arquivo para upload.',","\t55: \t\t\t'errFileMaxSize'       : 'Arquivo excede o tamanho máximo permitido.',","\t79: \t\t\t'cmdgetfile'   : 'Selecionar arquivos',","\t84: \t\t\t'cmdmkfile'    : 'Novo arquivo de texto',","\t106: \t\t\t'ntffile'     : 'Abrir arquivo',","\t109: \t\t\t'ntfmkfile'   : 'Criar arquivos',","\t156: \t\t\t'selectfiles'     : 'Selecionar arquivo(s)',","\t157: \t\t\t'selectffile'     : 'Selecionar primeiro arquivo',","\t158: \t\t\t'selectlfile'     : 'Slecionar último arquivo',","\t167: \t\t\t'files'           : 'Arquivos',","\t195: \t\t\t'dropFiles'       : 'Solte os arquivos aqui',","\t198: \t\t\t'moveFiles'       : 'Mover arquivos',","\t199: \t\t\t'copyFiles'       : 'Copiar arquivos',","\t269: \t\t\t'kindVideoDV'     : 'DV filme',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.ru.js:","\t35: \t\t\t'errNotFile'           : 'Объект не является файлом.',","\t43: \t\t\t'errFileNotFound'      : 'Файл не найден.',","\t47: \t\t\t'errMkfile'            : 'Ошибка создания файла \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'Отсутствуют загруженые файлы.',","\t55: \t\t\t'errFileMaxSize'       : 'Размер файла превышает допустимый.',","\t84: \t\t\t'cmdgetfile'   : 'Выбрать',","\t89: \t\t\t'cmdmkfile'    : 'Новый файл',","\t114: \t\t\t'ntffile'     : 'Открытие файла',","\t117: \t\t\t'ntfmkfile'   : 'Создание файла',","\t174: \t\t\t'selectfiles'     : 'Выбрать файл(ы)',","\t175: \t\t\t'selectffile'     : 'Выбрать первый файл',","\t176: \t\t\t'selectlfile'     : 'Выбрать последний файл',","\t185: \t\t\t'files'           : 'Файлы',","\t213: \t\t\t'dropFiles'       : 'Бросить файлы',","\t216: \t\t\t'moveFiles'       : 'Перемещение файлов',","\t217: \t\t\t'copyFiles'       : 'Копирование файлов',","\t220: \t\t\t'untitled file.txt' : 'новый файл.txt',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/i18n/elfinder.zh_CN.js:","\t35: \t\t\t'errNotFile'           : '对象不是文件.',","\t43: \t\t\t'errFileNotFound'      : '未找到文件.',","\t47: \t\t\t'errMkfile'            : '不能创建文件 \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : '未找到要上传的文件.',","\t55: \t\t\t'errFileMaxSize'       : '文件超过了允许的最大大小.',","\t79: \t\t\t'cmdgetfile'   : '选择文件',","\t84: \t\t\t'cmdmkfile'    : '新建文本文件',","\t106: \t\t\t'ntffile'     : '打开文件',","\t109: \t\t\t'ntfmkfile'   : '创建文件',","\t156: \t\t\t'selectfiles'     : '选择文件',","\t157: \t\t\t'selectffile'     : '选择第一个文件',","\t158: \t\t\t'selectlfile'     : '选择最后一个文件',","\t167: \t\t\t'files'           : '文件',","\t195: \t\t\t'dropFiles'       : '把文件拖到这里',","\t198: \t\t\t'moveFiles'       : '移动文件',","\t199: \t\t\t'copyFiles'       : '复制文件',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/proxy/elFinderSupportVer1.js:","\t62: \t\t\t\topts.data.current = fm.file(opts.data.target).phash;","\t66: \t\t\t\topts.data.current = fm.file(opts.data.target).phash;","\t70: \t\t\t\topts.data.current = fm.file(opts.data.targets[0]).phash;","\t75: \t\t\t\topts.data.current = fm.file(opts.data.target).phash;","\t81: \t\t\t\t\t$.ajax($.extend(_opts, {data : {cmd : 'duplicate', target : hash, current : fm.file(hash).phash}}))","\t98: \t\t\tcase 'mkfile':","\t143: \t// \t'File not found'                                   : 'File not found.',","\t144: \t// \t'Invalid name'                                     : 'Invalid file name.',","\t145: \t// \t'File or folder with the same name already exists' : 'File named \"$1\" already exists in this location.',","\t146: \t// \t'Not allowed file type'                            : 'Not allowed file type.',","\t147: \t// \t'File exceeds the maximum allowed filesize'        : 'File exceeds maximum allowed size.',","\t150: \t// \t'Unable to extract files from archive'             : 'Unable to extract files from \"$1\".'","\t155: \t\t\tfiles = {}, ","\t156: \t\t\tfilter = function(file) { return file && file.hash && file.name && file.mime ? file : null; },","\t183: \t\t\tphash = this.fm.file(data.target.hash).phash;","\t184: \t\t\treturn {changed : [this.normalizeFile(data.target, phash)]};","\t190: \t\t\t$.each(this.normalizeTree(data.tree), function(i, file) {","\t191: \t\t\t\tfiles[file.hash] = file;","\t195: \t\t$.each(data.cdc||[], function(i, file) {","\t196: \t\t\tvar hash = file.hash;","\t198: \t\t\tif (files[hash]) {","\t199: \t\t\t\tfiles[hash].date   = file.date;","\t200: \t\t\t\tfiles[hash].locked = file.hash == phash ? true : file.rm === void(0) ? false : !file.rm;","\t202: \t\t\t\tfiles[hash] = self.normalizeFile(file, phash, data.tmb);","\t207: \t\t\t$.each(this.fm.files(), function(hash, file) {","\t208: \t\t\t\tif (!files[hash] && file.phash != phash && file.mime == 'directory') {","\t209: \t\t\t\t\tfiles[hash] = file;","\t216: \t\t\t\t\tcwd     : files[phash] || this.normalizeFile(data.cwd),","\t217: \t\t\t\t\tfiles   : $.map(files, function(f) { return f }),","\t231: \t\t}, this.fm.diff($.map(files, filter)));","\t249: \t\t\t\t\tresult.push(self.normalizeFile(dir, phash))","\t260: \t * Convert file info from old api format into new one","\t262: \t * @param  Object  file","\t266: \tthis.normalizeFile = function(file, phash, tmb) {","\t267: \t\tvar mime = file.mime || 'directory',","\t268: \t\t\tsize = mime == 'directory' && !file.linkTo ? 0 : file.size,","\t270: \t\t\t\turl    : file.url,","\t271: \t\t\t\thash   : file.hash,","\t273: \t\t\t\tname   : file.name,","\t275: \t\t\t\tdate   : file.date || 'unknown',","\t277: \t\t\t\tread   : file.read,","\t278: \t\t\t\twrite  : file.write,","\t279: \t\t\t\tlocked : !phash ? true : file.rm === void(0) ? false : !file.rm","\t282: \t\tif (file.mime == 'application/x-empty') {","\t285: \t\tif (file.linkTo) {","\t286: \t\t\tinfo.alias = file.linkTo;","\t289: \t\tif (file.linkTo) {","\t290: \t\t\tinfo.linkTo = file.linkTo;","\t293: \t\tif (file.tmb) {","\t294: \t\t\tinfo.tmb = file.tmb;","\t300: \t\tif (file.dirs && file.dirs.length) {","\t303: \t\tif (file.dim) {","\t304: \t\t\tinfo.dim = file.dim;","\t306: \t\tif (file.resize) {","\t307: \t\t\tinfo.resize = file.resize;","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/templates/elfinder.html:","\t23:                             ['mkdir', 'mkfile'],","\t33:                                    'mkdir', 'mkfile', 'paste', '|',","\t35:                             files : ['edit', 'open', '|',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/templates/read_file.html:","\t2:   <head><title>{{ file.name }}</title></head>","\t4:     {{ file.content }}","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/volume_drivers/base.py:","\t15:             or file. This data is used in response to 'open' commands to","\t36:     def read_file_view(self, request, hash):","\t37:         \"\"\" Django view function, used to display files in response to the","\t38:             'file' command.","\t41:             :param hash: The hash of the target file.","\t55:     def mkfile(self, name, parent):","\t58:             :param name: The name of the new file.","\t60:             :returns: dict -- a dict describing the new file.","\t65:         \"\"\" Renames a file or directory.","\t67:             :param name: The new name of the file/directory.","\t68:             :param target: The hash of the target file/directory.","\t78:             :returns: list -- a list containing the names of files/directories","\t84:         \"\"\" Moves/copies target files/directories from source to dest.","\t86:             If a file with the same name already exists in the dest directory","\t90:             :param targets: A list of hashes of files/dirs to move/copy.","\t100:         \"\"\" Deletes the target files/directories.","\t103:             for each target, so should only delete one file/directory.","\t105:             :param targets: A list of hashes of files/dirs to delete.","\t106:             :returns: string -- the hash of the file/dir that was deleted.","\t110:     def upload(self, files, parent):","\t111:         \"\"\" Uploads one or more files in to the parent directory.","\t113:             :param files: A list of uploaded file objects, as described here:","\t114:             https://docs.djangoproject.com/en/dev/topics/http/file-uploads/","\t116:             new files.","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/volume_drivers/model_driver.py:","\t14:                  collection_model=models.FileCollection,","\t16:                  file_model=models.File,","\t22:         self.file_model = file_model","\t37:             root directories of other file collections.","\t45:         for item in dir.files.all():","\t72:             f:  File","\t74:             The tree_id of the root node of the currently open FileCollection","\t77:             things if they are now looking at a different FileCollection.","\t99:             model = self.file_model","\t114:         \"\"\" Helper function to create objects (files/directories).","\t131:     def read_file_view(self, request, hash):","\t132:         file = self.get_object(hash)","\t133:         return render_to_response('read_file.html',","\t134:                                   {'file': file},","\t141:     def mkfile(self, name, parent):","\t142:         \"\"\" Creates a new file. \"\"\"","\t143:         return self._create_object(name, parent, self.file_model)","\t146:         \"\"\" Renames a file or directory. \"\"\"","\t154:         \"\"\" Returns a list of files/directories in the target directory. \"\"\"","\t161:         \"\"\" Moves/copies target files/directories from source to dest. \"\"\"","\t177:             # both Files and Directories. Using filter() and iterating","\t181:             dirs = self.directory_model.objects.filter(name=object.name,","\t183:             files = self.file_model.objects.filter(name=object.name,","\t188:             for file in files:","\t189:                 removed.append(file.get_hash())","\t190:                 file.delete()","\t201:         \"\"\" Delete a File or Directory object. \"\"\"","\t206:     def upload(self, files, parent):","\t207:         \"\"\" For now, this uses a very naive way of storing files - the entire","\t208:             file is read in to the File model's content field in one go.","\t210:             This should be updated to use read_chunks to add the file one ","\t215:         for upload in files.getlist('upload[]'):","\t216:             new_file = self.file_model(name=upload.name,","\t221:                 new_file.validate_unique()","\t226:             new_file.save()","\t227:             added.append(new_file.get_info())","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/test_project/initial_data.json:","\t1: [{\"pk\": 22, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_logentry\", \"name\": \"Can add log entry\", \"content_type\": 8}}, {\"pk\": 23, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_logentry\", \"name\": \"Can change log entry\", \"content_type\": 8}}, {\"pk\": 24, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_logentry\", \"name\": \"Can delete log entry\", \"content_type\": 8}}, {\"pk\": 4, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_group\", \"name\": \"Can add group\", \"content_type\": 2}}, {\"pk\": 5, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_group\", \"name\": \"Can change group\", \"content_type\": 2}}, {\"pk\": 6, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_group\", \"name\": \"Can delete group\", \"content_type\": 2}}, {\"pk\": 10, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_message\", \"name\": \"Can add message\", \"content_type\": 4}}, {\"pk\": 11, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_message\", \"name\": \"Can change message\", \"content_type\": 4}}, {\"pk\": 12, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_message\", \"name\": \"Can delete message\", \"content_type\": 4}}, {\"pk\": 1, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_permission\", \"name\": \"Can add permission\", \"content_type\": 1}}, {\"pk\": 2, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_permission\", \"name\": \"Can change permission\", \"content_type\": 1}}, {\"pk\": 3, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_permission\", \"name\": \"Can delete permission\", \"content_type\": 1}}, {\"pk\": 7, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_user\", \"name\": \"Can add user\", \"content_type\": 3}}, {\"pk\": 8, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_user\", \"name\": \"Can change user\", \"content_type\": 3}}, {\"pk\": 9, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_user\", \"name\": \"Can delete user\", \"content_type\": 3}}, {\"pk\": 13, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_contenttype\", \"name\": \"Can add content type\", \"content_type\": 5}}, {\"pk\": 14, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_contenttype\", \"name\": \"Can change content type\", \"content_type\": 5}}, {\"pk\": 15, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_contenttype\", \"name\": \"Can delete content type\", \"content_type\": 5}}, {\"pk\": 25, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_directory\", \"name\": \"Can add directory\", \"content_type\": 9}}, {\"pk\": 26, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_directory\", \"name\": \"Can change directory\", \"content_type\": 9}}, {\"pk\": 27, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_directory\", \"name\": \"Can delete directory\", \"content_type\": 9}}, {\"pk\": 31, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_file\", \"name\": \"Can add file\", \"content_type\": 11}}, {\"pk\": 32, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_file\", \"name\": \"Can change file\", \"content_type\": 11}}, {\"pk\": 33, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_file\", \"name\": \"Can delete file\", \"content_type\": 11}}, {\"pk\": 28, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_filecollection\", \"name\": \"Can add file collection\", \"content_type\": 10}}, {\"pk\": 29, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_filecollection\", \"name\": \"Can change file collection\", \"content_type\": 10}}, {\"pk\": 30, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_filecollection\", \"name\": \"Can delete file collection\", \"content_type\": 10}}, {\"pk\": 16, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_session\", \"name\": \"Can add session\", \"content_type\": 6}}, {\"pk\": 17, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_session\", \"name\": \"Can change session\", \"content_type\": 6}}, {\"pk\": 18, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_session\", \"name\": \"Can delete session\", \"content_type\": 6}}, {\"pk\": 19, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"add_site\", \"name\": \"Can add site\", \"content_type\": 7}}, {\"pk\": 20, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"change_site\", \"name\": \"Can change site\", \"content_type\": 7}}, {\"pk\": 21, \"model\": \"auth.permission\", \"fields\": {\"codename\": \"delete_site\", \"name\": \"Can delete site\", \"content_type\": 7}}, {\"pk\": 1, \"model\": \"auth.user\", \"fields\": {\"username\": \"admin\", \"first_name\": \"\", \"last_name\": \"\", \"is_active\": true, \"is_superuser\": true, \"is_staff\": true, \"last_login\": \"2011-11-04 12:06:23\", \"groups\": [], \"user_permissions\": [], \"password\": \"sha1$af2fa$c4e1b39ca0d442d071002c7a0414fc8b61a42896\", \"email\": \"admin@example.com\", \"date_joined\": \"2011-11-04 12:06:23\"}}]","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/test_project/manage.py:","\t8:     sys.stderr.write(\"Error: Can't find the file 'settings.py' in the directory containing %r. It appears you've customized things.\\nYou'll have to run django-admin.py, passing it your settings module.\\n\" % __file__)","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/test_project/settings.py:","\t15:         'NAME': 'test_database.db',                      # Or path to database file if using sqlite3.","\t46: # Absolute filesystem path to the directory that will hold user-uploaded files.","\t55: # Absolute path to the directory static files should be collected to.","\t56: # Don't put anything in this directory yourself; store your static files","\t57: # in apps' \"static/\" subdirectories and in STATICFILES_DIRS.","\t61: # URL prefix for static files.","\t65: # URL prefix for admin static files -- CSS, JavaScript and images.","\t70: # Additional locations of static files","\t71: STATICFILES_DIRS = (","\t77: # List of finder classes that know how to find static files in","\t79: STATICFILES_FINDERS = (","\t80:     'django.contrib.staticfiles.finders.FileSystemFinder',","\t81:     'django.contrib.staticfiles.finders.AppDirectoriesFinder',","\t82: #    'django.contrib.staticfiles.finders.DefaultStorageFinder',","\t90:     'django.template.loaders.filesystem.Loader',","\t117:     'django.contrib.staticfiles',","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/test_project/test_app/tests.py:","\t2: This file demonstrates writing tests using the unittest module. These will pass","","/clouddrive/clouddrive/myapp/templates/static/elFinder/Changelog:","\t15: \t\t- MySQL volume driver support (as file storage)","\t57: \t\t- Added shortcut support for copy/cut/paste/delete files and","\t61: \t\t- [bugfix] invalid determing files/folders permissions using","","/clouddrive/clouddrive/myapp/templates/static/elFinder/elfinder.src.html:","\t71: \t<script src=\"js/commands/getfile.js\"></script>","\t73: \t<script src=\"js/commands/mkfile.js\"></script>","\t160: \t\t\t\t\tgetFileCallback : function(files, fm) {","\t161: \t\t\t\t\t\tconsole.log(files);","\t164: \t\t\t\t\t\tgetfile : {","","/clouddrive/clouddrive/myapp/templates/static/elFinder/Jakefile.js:","\t2:  * This is build file for elFinder 2.x","\t19: \tfiles = {","\t57: // plugins files","\t64: \t\tfiles.php = files.php.concat(grep(path.join(src, 'php', 'plugins', plugins[i]), '.+'));","\t90: function copyFile(from, to, overwrite) {","\t101: \tvar ver = fs.readFileSync(path.join(src, 'js', 'elFinder.version.js')).toString();","\t109: \t\t' * elFinder - file manager for web\\n' +","\t132: \tvar dir = ['css', 'js', 'img', path.join('js', 'i18n'), path.join('js', 'proxy'), 'php', 'files'];","\t156: file({'css/elfinder.full.css': files['elfinder.full.css']}, function(){","\t160: \t\tfile = this.prereqs[f];","\t161: \t\tconsole.log('\\t' + file);","\t162: \t\tdata += '\\n/* File: ' + file + ' */\\n';","\t163: \t\tdata += fs.readFileSync(file);","\t165: \tfs.writeFileSync(this.name, getComment() + data);","\t169: file({'css/elfinder.min.css': ['css/elfinder.full.css']}, function () {","\t171: \tvar css_optimized = csso.justDoIt(fs.readFileSync('css/elfinder.full.css').toString())","\t172: \tfs.writeFileSync(this.name, getComment() + css_optimized);","\t177: file({'js/elfinder.full.js': files['elfinder.full.js']}, function(){","\t180: \tvar elf = files['elfinder.full.js'];","\t183: \t\tfile = elf[f];","\t184: \t\tconsole.log('\\t' + file);","\t185: \t\tdata += '\\n\\n/*\\n * File: ' + file + '\\n */\\n\\n';","\t186: \t\tdata += fs.readFileSync(file);","\t190: \tfs.writeFileSync(this.name, getComment() + data);","\t194: file({'js/elfinder.min.js': ['js/elfinder.full.js']}, function () {","\t199: \t\tvar ast = ugp.parse(fs.readFileSync('js/elfinder.full.js').toString()); // parse code and get the initial AST","\t206: \tfs.writeFileSync(this.name, getComment() + result);","\t210: desc('copy misc files')","\t212: \tconsole.log('copy misc files');","\t213: \tvar cf = files['images']","\t214: \t\t.concat(files['i18n'])","\t216: \t\t.concat(files['php'])","\t217: \t\t.concat(files['misc']);","\t221: \t\tcopyFile(cf[i], dst);","\t226: \t// copyFile(hs, hd);","\t231: \tcopyFile(cs, cd);","\t246: \t\t\t.concat([path.join('js', 'proxy', 'elFinderSupportVer1.js'), 'Changelog', 'README.md', 'elfinder.html', path.join('files', 'readme.txt')]);","\t249: \t\tvar file = uf[f];","\t250: \t\tif (path.existsSync(file)) {","\t251: \t\t\tconsole.log('\\tunlink ' + file);","\t252: \t\t\tfs.unlinkSync(file);","\t259: \t\tvar ud = ['css', path.join('js', 'proxy'), path.join('js', 'i18n'), 'js', 'img', 'php', 'files'];","\t273: \t\tversion = fs.readFileSync('.version').toString().replace(/\\n$/, '');","\t283: \t\tvar fls = (files['php'].concat(files['images']).concat(files['i18n']).concat(files['misc'])).map(function(i){","\t289: \t\tfls.push('files');","\t290: \t\tconsole.log('Including next files into release:');","\t292: \t\tthis.packageFiles.items = fls;","","/clouddrive/clouddrive/myapp/templates/static/elFinder/README.md:","\t13: elFinder is an open-source file manager for web, written in JavaScript using","\t21:  * All operations with files and folders on a remote server (copy, move,","\t22:    upload, create folder/file, rename, etc.)","\t25:  * Local file system, MySQL, FTP volume storage drivers","\t26:  * Background file upload with Drag & Drop HTML5 support","\t29:  * Standard methods of file/group selection using mouse or keyboard","\t30:  * Move/Copy files with Drag & Drop","\t33:  * Quicklook, preview for common file types","\t34:  * Edit text files and images","\t37:  * Thumbnails for image files","\t39:  * Flexible configuration of access rights, upload file types, user interface","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/commands.css:","\t161: /* edit text file textarea */","\t162: .elfinder-file-edit {","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/common.css:","\t18: /* dir/file permissions and symlink markers */","\t62: /* files num in drag helper */","\t84: .elfinder-overlay { opacity: 0; filter:Alpha(Opacity=0); }","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/cwd.css:","\t35: /* file container */","\t36: .elfinder-cwd-view-icons .elfinder-cwd-file {","\t46: .elfinder-ltr .elfinder-cwd-view-icons .elfinder-cwd-file { float:left;  margin:0 3px 12px 0; }","\t47: .elfinder-rtl .elfinder-cwd-view-icons .elfinder-cwd-file { float:right; margin:0 0 5px 3px; }","\t50: .elfinder-cwd-view-icons .elfinder-cwd-file .ui-state-hover { border:0 solid; }","\t53: .elfinder-cwd-view-icons .elfinder-cwd-file-wrapper {","\t61: /* file name place */","\t62: .elfinder-cwd-view-icons .elfinder-cwd-filename {","\t210: /* filename container */","\t211: .elfinder-cwd-view-list .elfinder-cwd-file-wrapper { width:97%; position:relative; }","\t212: /* filename container in ltr/rtl enviroment */","\t213: .elfinder-ltr .elfinder-cwd-view-list .elfinder-cwd-file-wrapper { padding-left:23px;  }","\t214: .elfinder-rtl .elfinder-cwd-view-list .elfinder-cwd-file-wrapper { padding-right:23px; }","\t223: /* file icon */","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/dialog.css:","\t121: .elfinder-dialog-icon-file        { background-position: 0 -225px; }","\t124: .elfinder-dialog-icon-mkfile      { background-position: 0 -96px; }","\t150: /*********************** FILE INFO DIALOG **************************/","\t211: \topacity: 0; filter:Alpha(Opacity=0);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/fonts.css:","\t3: .elfinder-cwd-view-icons .elfinder-cwd-filename { font-size:.7em; }","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/navbar.css:","\t138: \topacity: .5; filter:Alpha(Opacity=50);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/quicklook.css:","\t85: /* wrapper for file info/icon */","\t94: /* file info */","\t99: /* file name in info */","\t113: /* file icon */","\t177: /* prev file icon */","\t182: /* next file icon */","\t202: /* text files preview wrapper */","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/theme.css:","\t21: /* selected file in \"icons\" view */","\t22: .elfinder-cwd-view-icons .elfinder-cwd-file .ui-state-hover { background:#ccc; }","\t28: .elfinder-cwd-view-icons .elfinder-cwd-file .elfinder-cwd-filename.ui-state-hover,","\t32: .elfinder-disabled .elfinder-cwd-view-icons .elfinder-cwd-file .elfinder-cwd-filename.ui-state-hover,","","/clouddrive/clouddrive/myapp/templates/static/elFinder/css/toolbar.css:","\t69: .elfinder .elfinder-button.ui-state-disabled { opacity:1; filter:Alpha(Opacity=100);}","\t70: .elfinder .elfinder-button.ui-state-disabled .elfinder-button-icon { opacity:.4; filter:Alpha(Opacity=40);}","\t91: .elfinder-button-icon-mkfile    { background-position: 0 -208px; }","\t96: .elfinder-button-icon-getfile   { background-position: 0 -288px; }","\t160: \topacity: 0; filter:Alpha(Opacity=0);","\t205: \tfilter:Alpha(Opacity=60);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/jquery/ui-themes/smoothness-1.8.23/jquery-ui-1.8.23.custom.css:","\t19: .ui-helper-zfix { width: 100%; height: 100%; top: 0; left: 0; position: absolute; opacity: 0; filter:Alpha(Opacity=0); }","\t82: .ui-priority-secondary, .ui-widget-content .ui-priority-secondary,  .ui-widget-header .ui-priority-secondary { opacity: .7; filter:Alpha(Opacity=70); font-weight: normal; }","\t83: .ui-state-disabled, .ui-widget-content .ui-state-disabled, .ui-widget-header .ui-state-disabled { opacity: .35; filter:Alpha(Opacity=35); background-image: none; }","\t286: .ui-widget-overlay { background: #aaaaaa url(images/ui-bg_flat_0_aaaaaa_40x100.png) 50% 50% repeat-x; opacity: .30;filter:Alpha(Opacity=30); }","\t287: .ui-widget-shadow { margin: -8px 0 0 -8px; padding: 8px; background: #aaaaaa url(images/ui-bg_flat_0_aaaaaa_40x100.png) 50% 50% repeat-x; opacity: .30;filter:Alpha(Opacity=30); -moz-border-radius: 8px; -khtml-border-radius: 8px; -webkit-border-radius: 8px; border-radius: 8px; }/*!","\t548:     filter: mask(); /*must have*/","","/clouddrive/clouddrive/myapp/templates/static/elFinder/jquery/ui-themes/smoothness/jquery-ui-1.10.1.custom.css:","\t51: \tfilter:Alpha(Opacity=0);","\t606: \tfilter: alpha(opacity=25);","\t635: \tfilter: inherit;","\t907: \tfilter:Alpha(Opacity=70);","\t914: \tfilter:Alpha(Opacity=35);","\t918: \tfilter:Alpha(Opacity=35); /* For IE8 - See #6059 */","\t1166: \tfilter: Alpha(Opacity=30);","\t1173: \tfilter: Alpha(Opacity=30);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/jquery/ui-themes/smoothness/jquery-ui-1.10.1.custom.min.css:","\t5: * Copyright (c) 2013 jQuery Foundation and other contributors Licensed MIT */.ui-helper-hidden{display:none}.ui-helper-hidden-accessible{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.ui-helper-reset{margin:0;padding:0;border:0;outline:0;line-height:1.3;text-decoration:none;font-size:100%;list-style:none}.ui-helper-clearfix:before,.ui-helper-clearfix:after{content:\"\";display:table;border-collapse:collapse}.ui-helper-clearfix:after{clear:both}.ui-helper-clearfix{min-height:0}.ui-helper-zfix{width:100%;height:100%;top:0;left:0;position:absolute;opacity:0;filter:Alpha(Opacity=0)}.ui-front{z-index:100}.ui-state-disabled{cursor:default!important}.ui-icon{display:block;text-indent:-99999px;overflow:hidden;background-repeat:no-repeat}.ui-widget-overlay{position:fixed;top:0;left:0;width:100%;height:100%}.ui-resizable{position:relative}.ui-resizable-handle{position:absolute;font-size:0.1px;display:block}.ui-resizable-disabled .ui-resizable-handle,.ui-resizable-autohide .ui-resizable-handle{display:none}.ui-resizable-n{cursor:n-resize;height:7px;width:100%;top:-5px;left:0}.ui-resizable-s{cursor:s-resize;height:7px;width:100%;bottom:-5px;left:0}.ui-resizable-e{cursor:e-resize;width:7px;right:-5px;top:0;height:100%}.ui-resizable-w{cursor:w-resize;width:7px;left:-5px;top:0;height:100%}.ui-resizable-se{cursor:se-resize;width:12px;height:12px;right:1px;bottom:1px}.ui-resizable-sw{cursor:sw-resize;width:9px;height:9px;left:-5px;bottom:-5px}.ui-resizable-nw{cursor:nw-resize;width:9px;height:9px;left:-5px;top:-5px}.ui-resizable-ne{cursor:ne-resize;width:9px;height:9px;right:-5px;top:-5px}.ui-selectable-helper{position:absolute;z-index:100;border:1px dotted black}.ui-accordion .ui-accordion-header{display:block;cursor:pointer;position:relative;margin-top:2px;padding:.5em .5em .5em .7em;min-height:0}.ui-accordion .ui-accordion-icons{padding-left:2.2em}.ui-accordion .ui-accordion-noicons{padding-left:.7em}.ui-accordion .ui-accordion-icons .ui-accordion-icons{padding-left:2.2em}.ui-accordion .ui-accordion-header .ui-accordion-header-icon{position:absolute;left:.5em;top:50%;margin-top:-8px}.ui-accordion .ui-accordion-content{padding:1em 2.2em;border-top:0;overflow:auto}.ui-autocomplete{position:absolute;top:0;left:0;cursor:default}.ui-button{display:inline-block;position:relative;padding:0;line-height:normal;margin-right:.1em;cursor:pointer;vertical-align:middle;text-align:center;overflow:visible}.ui-button,.ui-button:link,.ui-button:visited,.ui-button:hover,.ui-button:active{text-decoration:none}.ui-button-icon-only{width:2.2em}button.ui-button-icon-only{width:2.4em}.ui-button-icons-only{width:3.4em}button.ui-button-icons-only{width:3.7em}.ui-button .ui-button-text{display:block;line-height:normal}.ui-button-text-only .ui-button-text{padding:.4em 1em}.ui-button-icon-only .ui-button-text,.ui-button-icons-only .ui-button-text{padding:.4em;text-indent:-9999999px}.ui-button-text-icon-primary .ui-button-text,.ui-button-text-icons .ui-button-text{padding:.4em 1em .4em 2.1em}.ui-button-text-icon-secondary .ui-button-text,.ui-button-text-icons .ui-button-text{padding:.4em 2.1em .4em 1em}.ui-button-text-icons .ui-button-text{padding-left:2.1em;padding-right:2.1em}input.ui-button{padding:.4em 1em}.ui-button-icon-only .ui-icon,.ui-button-text-icon-primary .ui-icon,.ui-button-text-icon-secondary .ui-icon,.ui-button-text-icons .ui-icon,.ui-button-icons-only .ui-icon{position:absolute;top:50%;margin-top:-8px}.ui-button-icon-only .ui-icon{left:50%;margin-left:-8px}.ui-button-text-icon-primary .ui-button-icon-primary,.ui-button-text-icons .ui-button-icon-primary,.ui-button-icons-only .ui-button-icon-primary{left:.5em}.ui-button-text-icon-secondary .ui-button-icon-secondary,.ui-button-text-icons .ui-button-icon-secondary,.ui-button-icons-only .ui-button-icon-secondary{right:.5em}.ui-buttonset{margin-right:7px}.ui-buttonset .ui-button{margin-left:0;margin-right:-.3em}input.ui-button::-moz-focus-inner,button.ui-button::-moz-focus-inner{border:0;padding:0}.ui-datepicker{width:17em;padding:.2em .2em 0;display:none}.ui-datepicker .ui-datepicker-header{position:relative;padding:.2em 0}.ui-datepicker .ui-datepicker-prev,.ui-datepicker .ui-datepicker-next{position:absolute;top:2px;width:1.8em;height:1.8em}.ui-datepicker .ui-datepicker-prev-hover,.ui-datepicker .ui-datepicker-next-hover{top:1px}.ui-datepicker .ui-datepicker-prev{left:2px}.ui-datepicker .ui-datepicker-next{right:2px}.ui-datepicker .ui-datepicker-prev-hover{left:1px}.ui-datepicker .ui-datepicker-next-hover{right:1px}.ui-datepicker .ui-datepicker-prev span,.ui-datepicker .ui-datepicker-next span{display:block;position:absolute;left:50%;margin-left:-8px;top:50%;margin-top:-8px}.ui-datepicker .ui-datepicker-title{margin:0 2.3em;line-height:1.8em;text-align:center}.ui-datepicker .ui-datepicker-title select{font-size:1em;margin:1px 0}.ui-datepicker select.ui-datepicker-month-year{width:100%}.ui-datepicker select.ui-datepicker-month,.ui-datepicker select.ui-datepicker-year{width:49%}.ui-datepicker table{width:100%;font-size:.9em;border-collapse:collapse;margin:0 0 .4em}.ui-datepicker th{padding:.7em .3em;text-align:center;font-weight:bold;border:0}.ui-datepicker td{border:0;padding:1px}.ui-datepicker td span,.ui-datepicker td a{display:block;padding:.2em;text-align:right;text-decoration:none}.ui-datepicker .ui-datepicker-buttonpane{background-image:none;margin:.7em 0 0 0;padding:0 .2em;border-left:0;border-right:0;border-bottom:0}.ui-datepicker .ui-datepicker-buttonpane button{float:right;margin:.5em .2em .4em;cursor:pointer;padding:.2em .6em .3em .6em;width:auto;overflow:visible}.ui-datepicker .ui-datepicker-buttonpane button.ui-datepicker-current{float:left}.ui-datepicker.ui-datepicker-multi{width:auto}.ui-datepicker-multi .ui-datepicker-group{float:left}.ui-datepicker-multi .ui-datepicker-group table{width:95%;margin:0 auto .4em}.ui-datepicker-multi-2 .ui-datepicker-group{width:50%}.ui-datepicker-multi-3 .ui-datepicker-group{width:33.3%}.ui-datepicker-multi-4 .ui-datepicker-group{width:25%}.ui-datepicker-multi .ui-datepicker-group-last .ui-datepicker-header,.ui-datepicker-multi .ui-datepicker-group-middle .ui-datepicker-header{border-left-width:0}.ui-datepicker-multi .ui-datepicker-buttonpane{clear:left}.ui-datepicker-row-break{clear:both;width:100%;font-size:0}.ui-datepicker-rtl{direction:rtl}.ui-datepicker-rtl .ui-datepicker-prev{right:2px;left:auto}.ui-datepicker-rtl .ui-datepicker-next{left:2px;right:auto}.ui-datepicker-rtl .ui-datepicker-prev:hover{right:1px;left:auto}.ui-datepicker-rtl .ui-datepicker-next:hover{left:1px;right:auto}.ui-datepicker-rtl .ui-datepicker-buttonpane{clear:right}.ui-datepicker-rtl .ui-datepicker-buttonpane button{float:left}.ui-datepicker-rtl .ui-datepicker-buttonpane button.ui-datepicker-current,.ui-datepicker-rtl .ui-datepicker-group{float:right}.ui-datepicker-rtl .ui-datepicker-group-last .ui-datepicker-header,.ui-datepicker-rtl .ui-datepicker-group-middle .ui-datepicker-header{border-right-width:0;border-left-width:1px}.ui-dialog{position:absolute;top:0;left:0;padding:.2em;outline:0}.ui-dialog .ui-dialog-titlebar{padding:.4em 1em;position:relative}.ui-dialog .ui-dialog-title{float:left;margin:.1em 0;white-space:nowrap;width:90%;overflow:hidden;text-overflow:ellipsis}.ui-dialog .ui-dialog-titlebar-close{position:absolute;right:.3em;top:50%;width:21px;margin:-10px 0 0 0;padding:1px;height:20px}.ui-dialog .ui-dialog-content{position:relative;border:0;padding:.5em 1em;background:none;overflow:auto}.ui-dialog .ui-dialog-buttonpane{text-align:left;border-width:1px 0 0 0;background-image:none;margin-top:.5em;padding:.3em 1em .5em .4em}.ui-dialog .ui-dialog-buttonpane .ui-dialog-buttonset{float:right}.ui-dialog .ui-dialog-buttonpane button{margin:.5em .4em .5em 0;cursor:pointer}.ui-dialog .ui-resizable-se{width:12px;height:12px;right:-5px;bottom:-5px;background-position:16px 16px}.ui-draggable .ui-dialog-titlebar{cursor:move}.ui-menu{list-style:none;padding:2px;margin:0;display:block;outline:none}.ui-menu .ui-menu{margin-top:-3px;position:absolute}.ui-menu .ui-menu-item{margin:0;padding:0;width:100%}.ui-menu .ui-menu-divider{margin:5px -2px 5px -2px;height:0;font-size:0;line-height:0;border-width:1px 0 0 0}.ui-menu .ui-menu-item a{text-decoration:none;display:block;padding:2px .4em;line-height:1.5;min-height:0;font-weight:normal}.ui-menu .ui-menu-item a.ui-state-focus,.ui-menu .ui-menu-item a.ui-state-active{font-weight:normal;margin:-1px}.ui-menu .ui-state-disabled{font-weight:normal;margin:.4em 0 .2em;line-height:1.5}.ui-menu .ui-state-disabled a{cursor:default}.ui-menu-icons{position:relative}.ui-menu-icons .ui-menu-item a{position:relative;padding-left:2em}.ui-menu .ui-icon{position:absolute;top:.2em;left:.2em}.ui-menu .ui-menu-icon{position:static;float:right}.ui-progressbar{height:2em;text-align:left;overflow:hidden}.ui-progressbar .ui-progressbar-value{margin:-1px;height:100%}.ui-progressbar .ui-progressbar-overlay{background:url(\"images/animated-overlay.gif\");height:100%;filter:alpha(opacity=25);opacity:0.25}.ui-progressbar-indeterminate .ui-progressbar-value{background-image:none}.ui-slider{position:relative;text-align:left}.ui-slider .ui-slider-handle{position:absolute;z-index:2;width:1.2em;height:1.2em;cursor:default}.ui-slider .ui-slider-range{position:absolute;z-index:1;font-size:.7em;display:block;border:0;background-position:0 0}.ui-slider.ui-state-disabled .ui-slider-handle,.ui-slider.ui-state-disabled .ui-slider-range{filter:inherit}.ui-slider-horizontal{height:.8em}.ui-slider-horizontal .ui-slider-handle{top:-.3em;margin-left:-.6em}.ui-slider-horizontal .ui-slider-range{top:0;height:100%}.ui-slider-horizontal .ui-slider-range-min{left:0}.ui-slider-horizontal .ui-slider-range-max{right:0}.ui-slider-vertical{width:.8em;height:100px}.ui-slider-vertical .ui-slider-handle{left:-.3em;margin-left:0;margin-bottom:-.6em}.ui-slider-vertical .ui-slider-range{left:0;width:100%}.ui-slider-vertical .ui-slider-range-min{bottom:0}.ui-slider-vertical .ui-slider-range-max{top:0}.ui-spinner{position:relative;display:inline-block;overflow:hidden;padding:0;vertical-align:middle}.ui-spinner-input{border:none;background:none;color:inherit;padding:0;margin:.2em 0;vertical-align:middle;margin-left:.4em;margin-right:22px}.ui-spinner-button{width:16px;height:50%;font-size:.5em;padding:0;margin:0;text-align:center;position:absolute;cursor:default;display:block;overflow:hidden;right:0}.ui-spinner a.ui-spinner-button{border-top:none;border-bottom:none;border-right:none}.ui-spinner .ui-icon{position:absolute;margin-top:-8px;top:50%;left:0}.ui-spinner-up{top:0}.ui-spinner-down{bottom:0}.ui-spinner .ui-icon-triangle-1-s{background-position:-65px -16px}.ui-tabs{position:relative;padding:.2em}.ui-tabs .ui-tabs-nav{margin:0;padding:.2em .2em 0}.ui-tabs .ui-tabs-nav li{list-style:none;float:left;position:relative;top:0;margin:1px .2em 0 0;border-bottom:0;padding:0;white-space:nowrap}.ui-tabs .ui-tabs-nav li a{float:left;padding:.5em 1em;text-decoration:none}.ui-tabs .ui-tabs-nav li.ui-tabs-active{margin-bottom:-1px;padding-bottom:1px}.ui-tabs .ui-tabs-nav li.ui-tabs-active a,.ui-tabs .ui-tabs-nav li.ui-state-disabled a,.ui-tabs .ui-tabs-nav li.ui-tabs-loading a{cursor:text}.ui-tabs .ui-tabs-nav li a,.ui-tabs-collapsible .ui-tabs-nav li.ui-tabs-active a{cursor:pointer}.ui-tabs .ui-tabs-panel{display:block;border-width:0;padding:1em 1.4em;background:none}.ui-tooltip{padding:8px;position:absolute;z-index:9999;max-width:300px;-webkit-box-shadow:0 0 5px #aaa;box-shadow:0 0 5px #aaa}body .ui-tooltip{border-width:2px}.ui-widget{font-family:Verdana,Arial,sans-serif;font-size:1.1em}.ui-widget .ui-widget{font-size:1em}.ui-widget input,.ui-widget select,.ui-widget textarea,.ui-widget button{font-family:Verdana,Arial,sans-serif;font-size:1em}.ui-widget-content{border:1px solid #aaa;background:#fff url(images/ui-bg_flat_75_ffffff_40x100.png) 50% 50% repeat-x;color:#222}.ui-widget-content a{color:#222}.ui-widget-header{border:1px solid #aaa;background:#ccc url(images/ui-bg_highlight-soft_75_cccccc_1x100.png) 50% 50% repeat-x;color:#222;font-weight:bold}.ui-widget-header a{color:#222}.ui-state-default,.ui-widget-content .ui-state-default,.ui-widget-header .ui-state-default{border:1px solid #d3d3d3;background:#e6e6e6 url(images/ui-bg_glass_75_e6e6e6_1x400.png) 50% 50% repeat-x;font-weight:normal;color:#555}.ui-state-default a,.ui-state-default a:link,.ui-state-default a:visited{color:#555;text-decoration:none}.ui-state-hover,.ui-widget-content .ui-state-hover,.ui-widget-header .ui-state-hover,.ui-state-focus,.ui-widget-content .ui-state-focus,.ui-widget-header .ui-state-focus{border:1px solid #999;background:#dadada url(images/ui-bg_glass_75_dadada_1x400.png) 50% 50% repeat-x;font-weight:normal;color:#212121}.ui-state-hover a,.ui-state-hover a:hover,.ui-state-hover a:link,.ui-state-hover a:visited{color:#212121;text-decoration:none}.ui-state-active,.ui-widget-content .ui-state-active,.ui-widget-header .ui-state-active{border:1px solid #aaa;background:#fff url(images/ui-bg_glass_65_ffffff_1x400.png) 50% 50% repeat-x;font-weight:normal;color:#212121}.ui-state-active a,.ui-state-active a:link,.ui-state-active a:visited{color:#212121;text-decoration:none}.ui-state-highlight,.ui-widget-content .ui-state-highlight,.ui-widget-header .ui-state-highlight{border:1px solid #fcefa1;background:#fbf9ee url(images/ui-bg_glass_55_fbf9ee_1x400.png) 50% 50% repeat-x;color:#363636}.ui-state-highlight a,.ui-widget-content .ui-state-highlight a,.ui-widget-header .ui-state-highlight a{color:#363636}.ui-state-error,.ui-widget-content .ui-state-error,.ui-widget-header .ui-state-error{border:1px solid #cd0a0a;background:#fef1ec url(images/ui-bg_glass_95_fef1ec_1x400.png) 50% 50% repeat-x;color:#cd0a0a}.ui-state-error a,.ui-widget-content .ui-state-error a,.ui-widget-header .ui-state-error a{color:#cd0a0a}.ui-state-error-text,.ui-widget-content .ui-state-error-text,.ui-widget-header .ui-state-error-text{color:#cd0a0a}.ui-priority-primary,.ui-widget-content .ui-priority-primary,.ui-widget-header .ui-priority-primary{font-weight:bold}.ui-priority-secondary,.ui-widget-content .ui-priority-secondary,.ui-widget-header .ui-priority-secondary{opacity:.7;filter:Alpha(Opacity=70);font-weight:normal}.ui-state-disabled,.ui-widget-content .ui-state-disabled,.ui-widget-header .ui-state-disabled{opacity:.35;filter:Alpha(Opacity=35);background-image:none}.ui-state-disabled .ui-icon{filter:Alpha(Opacity=35)}.ui-icon{width:16px;height:16px;background-position:16px 16px}.ui-icon,.ui-widget-content .ui-icon{background-image:url(images/ui-icons_222222_256x240.png)}.ui-widget-header .ui-icon{background-image:url(images/ui-icons_222222_256x240.png)}.ui-state-default .ui-icon{background-image:url(images/ui-icons_888888_256x240.png)}.ui-state-hover .ui-icon,.ui-state-focus .ui-icon{background-image:url(images/ui-icons_454545_256x240.png)}.ui-state-active .ui-icon{background-image:url(images/ui-icons_454545_256x240.png)}.ui-state-highlight .ui-icon{background-image:url(images/ui-icons_2e83ff_256x240.png)}.ui-state-error .ui-icon,.ui-state-error-text .ui-icon{background-image:url(images/ui-icons_cd0a0a_256x240.png)}.ui-icon-carat-1-n{background-position:0 0}.ui-icon-carat-1-ne{background-position:-16px 0}.ui-icon-carat-1-e{background-position:-32px 0}.ui-icon-carat-1-se{background-position:-48px 0}.ui-icon-carat-1-s{background-position:-64px 0}.ui-icon-carat-1-sw{background-position:-80px 0}.ui-icon-carat-1-w{background-position:-96px 0}.ui-icon-carat-1-nw{background-position:-112px 0}.ui-icon-carat-2-n-s{background-position:-128px 0}.ui-icon-carat-2-e-w{background-position:-144px 0}.ui-icon-triangle-1-n{background-position:0 -16px}.ui-icon-triangle-1-ne{background-position:-16px -16px}.ui-icon-triangle-1-e{background-position:-32px -16px}.ui-icon-triangle-1-se{background-position:-48px -16px}.ui-icon-triangle-1-s{background-position:-64px -16px}.ui-icon-triangle-1-sw{background-position:-80px -16px}.ui-icon-triangle-1-w{background-position:-96px -16px}.ui-icon-triangle-1-nw{background-position:-112px -16px}.ui-icon-triangle-2-n-s{background-position:-128px -16px}.ui-icon-triangle-2-e-w{background-position:-144px -16px}.ui-icon-arrow-1-n{background-position:0 -32px}.ui-icon-arrow-1-ne{background-position:-16px -32px}.ui-icon-arrow-1-e{background-position:-32px -32px}.ui-icon-arrow-1-se{background-position:-48px -32px}.ui-icon-arrow-1-s{background-position:-64px -32px}.ui-icon-arrow-1-sw{background-position:-80px -32px}.ui-icon-arrow-1-w{background-position:-96px -32px}.ui-icon-arrow-1-nw{background-position:-112px -32px}.ui-icon-arrow-2-n-s{background-position:-128px -32px}.ui-icon-arrow-2-ne-sw{background-position:-144px -32px}.ui-icon-arrow-2-e-w{background-position:-160px -32px}.ui-icon-arrow-2-se-nw{background-position:-176px -32px}.ui-icon-arrowstop-1-n{background-position:-192px -32px}.ui-icon-arrowstop-1-e{background-position:-208px -32px}.ui-icon-arrowstop-1-s{background-position:-224px -32px}.ui-icon-arrowstop-1-w{background-position:-240px -32px}.ui-icon-arrowthick-1-n{background-position:0 -48px}.ui-icon-arrowthick-1-ne{background-position:-16px -48px}.ui-icon-arrowthick-1-e{background-position:-32px -48px}.ui-icon-arrowthick-1-se{background-position:-48px -48px}.ui-icon-arrowthick-1-s{background-position:-64px -48px}.ui-icon-arrowthick-1-sw{background-position:-80px -48px}.ui-icon-arrowthick-1-w{background-position:-96px -48px}.ui-icon-arrowthick-1-nw{background-position:-112px -48px}.ui-icon-arrowthick-2-n-s{background-position:-128px -48px}.ui-icon-arrowthick-2-ne-sw{background-position:-144px -48px}.ui-icon-arrowthick-2-e-w{background-position:-160px -48px}.ui-icon-arrowthick-2-se-nw{background-position:-176px -48px}.ui-icon-arrowthickstop-1-n{background-position:-192px -48px}.ui-icon-arrowthickstop-1-e{background-position:-208px -48px}.ui-icon-arrowthickstop-1-s{background-position:-224px -48px}.ui-icon-arrowthickstop-1-w{background-position:-240px -48px}.ui-icon-arrowreturnthick-1-w{background-position:0 -64px}.ui-icon-arrowreturnthick-1-n{background-position:-16px -64px}.ui-icon-arrowreturnthick-1-e{background-position:-32px -64px}.ui-icon-arrowreturnthick-1-s{background-position:-48px -64px}.ui-icon-arrowreturn-1-w{background-position:-64px -64px}.ui-icon-arrowreturn-1-n{background-position:-80px -64px}.ui-icon-arrowreturn-1-e{background-position:-96px -64px}.ui-icon-arrowreturn-1-s{background-position:-112px -64px}.ui-icon-arrowrefresh-1-w{background-position:-128px -64px}.ui-icon-arrowrefresh-1-n{background-position:-144px -64px}.ui-icon-arrowrefresh-1-e{background-position:-160px -64px}.ui-icon-arrowrefresh-1-s{background-position:-176px -64px}.ui-icon-arrow-4{background-position:0 -80px}.ui-icon-arrow-4-diag{background-position:-16px -80px}.ui-icon-extlink{background-position:-32px -80px}.ui-icon-newwin{background-position:-48px -80px}.ui-icon-refresh{background-position:-64px -80px}.ui-icon-shuffle{background-position:-80px -80px}.ui-icon-transfer-e-w{background-position:-96px -80px}.ui-icon-transferthick-e-w{background-position:-112px -80px}.ui-icon-folder-collapsed{background-position:0 -96px}.ui-icon-folder-open{background-position:-16px -96px}.ui-icon-document{background-position:-32px -96px}.ui-icon-document-b{background-position:-48px -96px}.ui-icon-note{background-position:-64px -96px}.ui-icon-mail-closed{background-position:-80px -96px}.ui-icon-mail-open{background-position:-96px -96px}.ui-icon-suitcase{background-position:-112px -96px}.ui-icon-comment{background-position:-128px -96px}.ui-icon-person{background-position:-144px -96px}.ui-icon-print{background-position:-160px -96px}.ui-icon-trash{background-position:-176px -96px}.ui-icon-locked{background-position:-192px -96px}.ui-icon-unlocked{background-position:-208px -96px}.ui-icon-bookmark{background-position:-224px -96px}.ui-icon-tag{background-position:-240px -96px}.ui-icon-home{background-position:0 -112px}.ui-icon-flag{background-position:-16px -112px}.ui-icon-calendar{background-position:-32px -112px}.ui-icon-cart{background-position:-48px -112px}.ui-icon-pencil{background-position:-64px -112px}.ui-icon-clock{background-position:-80px -112px}.ui-icon-disk{background-position:-96px -112px}.ui-icon-calculator{background-position:-112px -112px}.ui-icon-zoomin{background-position:-128px -112px}.ui-icon-zoomout{background-position:-144px -112px}.ui-icon-search{background-position:-160px -112px}.ui-icon-wrench{background-position:-176px -112px}.ui-icon-gear{background-position:-192px -112px}.ui-icon-heart{background-position:-208px -112px}.ui-icon-star{background-position:-224px -112px}.ui-icon-link{background-position:-240px -112px}.ui-icon-cancel{background-position:0 -128px}.ui-icon-plus{background-position:-16px -128px}.ui-icon-plusthick{background-position:-32px -128px}.ui-icon-minus{background-position:-48px -128px}.ui-icon-minusthick{background-position:-64px -128px}.ui-icon-close{background-position:-80px -128px}.ui-icon-closethick{background-position:-96px -128px}.ui-icon-key{background-position:-112px -128px}.ui-icon-lightbulb{background-position:-128px -128px}.ui-icon-scissors{background-position:-144px -128px}.ui-icon-clipboard{background-position:-160px -128px}.ui-icon-copy{background-position:-176px -128px}.ui-icon-contact{background-position:-192px -128px}.ui-icon-image{background-position:-208px -128px}.ui-icon-video{background-position:-224px -128px}.ui-icon-script{background-position:-240px -128px}.ui-icon-alert{background-position:0 -144px}.ui-icon-info{background-position:-16px -144px}.ui-icon-notice{background-position:-32px -144px}.ui-icon-help{background-position:-48px -144px}.ui-icon-check{background-position:-64px -144px}.ui-icon-bullet{background-position:-80px -144px}.ui-icon-radio-on{background-position:-96px -144px}.ui-icon-radio-off{background-position:-112px -144px}.ui-icon-pin-w{background-position:-128px -144px}.ui-icon-pin-s{background-position:-144px -144px}.ui-icon-play{background-position:0 -160px}.ui-icon-pause{background-position:-16px -160px}.ui-icon-seek-next{background-position:-32px -160px}.ui-icon-seek-prev{background-position:-48px -160px}.ui-icon-seek-end{background-position:-64px -160px}.ui-icon-seek-start{background-position:-80px -160px}.ui-icon-seek-first{background-position:-80px -160px}.ui-icon-stop{background-position:-96px -160px}.ui-icon-eject{background-position:-112px -160px}.ui-icon-volume-off{background-position:-128px -160px}.ui-icon-volume-on{background-position:-144px -160px}.ui-icon-power{background-position:0 -176px}.ui-icon-signal-diag{background-position:-16px -176px}.ui-icon-signal{background-position:-32px -176px}.ui-icon-battery-0{background-position:-48px -176px}.ui-icon-battery-1{background-position:-64px -176px}.ui-icon-battery-2{background-position:-80px -176px}.ui-icon-battery-3{background-position:-96px -176px}.ui-icon-circle-plus{background-position:0 -192px}.ui-icon-circle-minus{background-position:-16px -192px}.ui-icon-circle-close{background-position:-32px -192px}.ui-icon-circle-triangle-e{background-position:-48px -192px}.ui-icon-circle-triangle-s{background-position:-64px -192px}.ui-icon-circle-triangle-w{background-position:-80px -192px}.ui-icon-circle-triangle-n{background-position:-96px -192px}.ui-icon-circle-arrow-e{background-position:-112px -192px}.ui-icon-circle-arrow-s{background-position:-128px -192px}.ui-icon-circle-arrow-w{background-position:-144px -192px}.ui-icon-circle-arrow-n{background-position:-160px -192px}.ui-icon-circle-zoomin{background-position:-176px -192px}.ui-icon-circle-zoomout{background-position:-192px -192px}.ui-icon-circle-check{background-position:-208px -192px}.ui-icon-circlesmall-plus{background-position:0 -208px}.ui-icon-circlesmall-minus{background-position:-16px -208px}.ui-icon-circlesmall-close{background-position:-32px -208px}.ui-icon-squaresmall-plus{background-position:-48px -208px}.ui-icon-squaresmall-minus{background-position:-64px -208px}.ui-icon-squaresmall-close{background-position:-80px -208px}.ui-icon-grip-dotted-vertical{background-position:0 -224px}.ui-icon-grip-dotted-horizontal{background-position:-16px -224px}.ui-icon-grip-solid-vertical{background-position:-32px -224px}.ui-icon-grip-solid-horizontal{background-position:-48px -224px}.ui-icon-gripsmall-diagonal-se{background-position:-64px -224px}.ui-icon-grip-diagonal-se{background-position:-80px -224px}.ui-corner-all,.ui-corner-top,.ui-corner-left,.ui-corner-tl{border-top-left-radius:4px}.ui-corner-all,.ui-corner-top,.ui-corner-right,.ui-corner-tr{border-top-right-radius:4px}.ui-corner-all,.ui-corner-bottom,.ui-corner-left,.ui-corner-bl{border-bottom-left-radius:4px}.ui-corner-all,.ui-corner-bottom,.ui-corner-right,.ui-corner-br{border-bottom-right-radius:4px}.ui-widget-overlay{background:#aaa url(images/ui-bg_flat_0_aaaaaa_40x100.png) 50% 50% repeat-x;opacity:.3;filter:Alpha(Opacity=30)}.ui-widget-shadow{margin:-8px 0 0 -8px;padding:8px;background:#aaa url(images/ui-bg_flat_0_aaaaaa_40x100.png) 50% 50% repeat-x;opacity:.3;filter:Alpha(Opacity=30);border-radius:8px}","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/elFinder.command.js:","\t150: \t * @param  Array         target files hashes","\t154: \tthis.exec = function(files, opts) { ","\t246: \t * With argument check given files hashes and return list of existed files hashes.","\t247: \t * Without argument return selected files hashes.","\t254: \t\t\t? $.map($.isArray(hashes) ? hashes : [hashes], function(hash) { return fm.file(hash) ? hash : null; })","\t259: \t * Return only existed files from given fils hashes | selected files","\t264: \tthis.files = function(hashes) {","\t268: \t\t\t? $.map($.isArray(hashes) ? hashes : [hashes], function(hash) { return fm.file(hash) || null })","\t269: \t\t\t: fm.selectedFiles();","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/elFinder.js:","\t3:  * @class elFinder - file manager for web","\t89: \t\tevents = ['enable', 'disable', 'load', 'open', 'reload', 'select',  'add', 'remove', 'change', 'dblclick', 'getfile', 'lockfiles', 'unlockfiles', 'dragstart', 'dragstop'],","\t123: \t\t * Files/dirs cache","\t127: \t\tfiles = {},","\t130: \t\t * Selected files hashes","\t151: \t\t * Buffer for copied files","\t158: \t\t * Copied/cuted files hashes","\t160: \t\t * Required for dispaly correct files names in error messages","\t203: \t\t\t\tfiles = {};","\t205: \t\t\t\t// remove only files from prev cwd","\t206: \t\t\t\tfor (var i in files) {","\t207: \t\t\t\t\tif (files.hasOwnProperty(i) ","\t208: \t\t\t\t\t&& files[i].mime != 'directory' ","\t209: \t\t\t\t\t&& files[i].phash == cwd","\t211: \t\t\t\t\t\tdelete files[i];","\t217: \t\t\tcache(data.files);","\t218: \t\t\tif (!files[cwd]) {","\t225: \t\t * Store info about files/dirs in \"files\" object.","\t227: \t\t * @param  Array  files","\t244: \t\t\t\t\tfiles[f.hash] = f;","\t386: \t * URL to upload files","\t537: \t\t\tvar targets = $.map(ui.helper.data('files')||[], function(h) { return h || null ;}),","\t542: \t\t\t\tif (files[h].locked) {","\t557: \t\t\thashes = element.is('.'+self.res('class', 'cwdfile')) ","\t561: \t\t\thelper.append(icon(files[hashes[0]].mime)).data('files', hashes).data('locked', false);","\t564: \t\t\t\thelper.append(icon(files[hashes[l-1]].mime) + '<span class=\"elfinder-drag-num\">'+l+'</span>');","\t579: \t\t\taccept     : '.elfinder-cwd-file-wrapper,.elfinder-navbar-dir,.elfinder-cwd-file',","\t583: \t\t\t\t\ttargets = $.map(ui.helper.data('files')||[], function(h) { return h || null }),","\t590: \t\t\t\t} else if (dst.is('.'+self.res(c, 'cwdfile'))) {","\t601: \t\t\t\t\th != hash && files[h].phash != hash && result.push(h);","\t608: \t\t\t\t\tself.trigger('drop', {files : targets});","\t615: \t * Return true if filemanager is active","\t624: \t * Return true if filemanager is visible","\t638: \t\tvar dir = files[hash || cwd], i;","\t641: \t\t\tdir = files[dir.phash]","\t647: \t\twhile (i in files && files.hasOwnProperty(i)) {","\t648: \t\t\tdir = files[i]","\t663: \t\treturn files[cwd] || {};","\t677: \t * Return file data from current dir or tree by it's hash","\t679: \t * @param  String  file hash","\t682: \tthis.file = function(hash) { ","\t683: \t\treturn files[hash]; ","\t687: \t * Return all cached files","\t691: \tthis.files = function() {","\t692: \t\treturn $.extend(true, {}, files);","\t696: \t * Return list of file parents hashes include file hash","\t698: \t * @param  String  file hash","\t705: \t\twhile ((dir = this.file(hash))) {","\t713: \t\tvar file, ","\t716: \t\twhile (hash && (file = files[hash]) && file.hash) {","\t717: \t\t\tpath.unshift(i18 && file.i18 ? file.i18 : file.name);","\t718: \t\t\thash = file.phash;","\t725: \t * Return file path","\t727: \t * @param  Object  file","\t731: \t\treturn files[hash] && files[hash].path","\t732: \t\t\t? files[hash].path","\t737: \t * Return file url if set","\t739: \t * @param  Object  file","\t743: \t\tvar file = files[hash];","\t745: \t\tif (!file || !file.read) {","\t749: \t\tif (file.url) {","\t750: \t\t\treturn file.url;","\t758: \t\t\tcmd: 'file',","\t759: \t\t\ttarget: file.hash","\t763: \t\t\tparams.current = file.phash;","\t771: \t * @param  String  file hash","\t775: \t\tvar file = files[hash],","\t776: \t\t\turl = file && file.tmb && file.tmb != 1 ? cwdOptions['tmbUrl'] + file.tmb : '';","\t785: \t * Return selected files hashes","\t794: \t * Return selected files info","\t798: \tthis.selectedFiles = function() {","\t799: \t\treturn $.map(selected, function(hash) { return files[hash] ? $.extend({}, files[hash]) : null });","\t803: \t * Return true if file with required name existsin required folder","\t805: \t * @param  String  file name","\t809: \tthis.fileByName = function(name, phash) {","\t812: \t\tfor (hash in files) {","\t813: \t\t\tif (files.hasOwnProperty(hash) && files[hash].phash == phash && files[hash].name == name) {","\t814: \t\t\t\treturn files[hash];","\t854: \t\t\t// sync files on request fail","\t1028: \t * Compare current files cache with new files and return diff","\t1030: \t * @param  Array  new files","\t1053: \t\t$.each(files, function(hash, f) {","\t1057: \t\t// compare files","\t1058: \t\t$.each(raw, function(hash, file) {","\t1059: \t\t\tvar origin = files[hash];","\t1062: \t\t\t\tadded.push(file);","\t1064: \t\t\t\t$.each(file, function(prop) {","\t1065: \t\t\t\t\tif (file[prop] != origin[prop]) {","\t1066: \t\t\t\t\t\tchanged.push(file)","\t1075: \t\t\tvar file  = files[hash], ","\t1076: \t\t\t\tphash = file.phash;","\t1079: \t\t\t&& file.mime == 'directory' ","\t1107: \t\t\t\tdata           : {cmd : 'tree', target : (cwd == this.root())? cwd : this.file(cwd).phash},","\t1124: \t\t\tvar diff = self.diff(odata.files.concat(pdata && pdata.tree ? pdata.tree : []));","\t1136: \tthis.upload = function(files) {","\t1137: \t\treturn this.transport.upload(files, this);","\t1222: \t *       description : 'Select all files', ","\t1280: \t *   this.clipboard([{...}, {...}], true) - put 2 files in clipboard and mark it as cutted","\t1282: \t * @param  Array    new files hashes","\t1283: \t * @param  Boolean  cut files?","\t1290: \t\t\tclipboard.length && this.trigger('unlockfiles', {files : map()});","\t1294: \t\t\t\tvar file = files[hash];","\t1295: \t\t\t\tif (file) {","\t1301: \t\t\t\t\t\tphash  : file.phash,","\t1302: \t\t\t\t\t\tname   : file.name,","\t1303: \t\t\t\t\t\tmime   : file.mime,","\t1304: \t\t\t\t\t\tread   : file.read,","\t1305: \t\t\t\t\t\tlocked : file.locked,","\t1312: \t\t\tcut && this.trigger('lockfiles', {files : map()});","\t1333: \t * @param  String|Array   usualy files hashes","\t1337: \tthis.exec = function(cmd, files, opts) {","\t1339: \t\t\t? this._commands[cmd].exec(files, opts) ","\t1449: \tthis.xhrUpload  = (typeof XMLHttpRequestUpload != 'undefined' || typeof XMLHttpRequestEventTarget != 'undefined') && typeof File != 'undefined' && typeof FormData != 'undefined';","\t1490: \t$.each(['enable', 'disable', 'load', 'open', 'reload', 'select',  'add', 'remove', 'change', 'dblclick', 'getfile', 'lockfiles', 'unlockfiles', 'dragstart', 'dragstop', 'search', 'searchend', 'viewchange'], function(i, name) {","\t1517: \t\t\tselected = $.map(e.data.selected || e.data.value|| [], function(hash) { return files[hash] ? hash : null; });","\t1537: \t\t\t\tif (files[hash]) {","\t1538: \t\t\t\t\tfiles[hash].tmb = tmb;","\t1546: \t\t\t$.each(e.data.changed||[], function(i, file) {","\t1547: \t\t\t\tvar hash = file.hash;","\t1548: \t\t\t\tif ((files[hash].width && !file.width) || (files[hash].height && !file.height)) {","\t1549: \t\t\t\t\tfiles[hash].width = undefined;","\t1550: \t\t\t\t\tfiles[hash].height = undefined;","\t1552: \t\t\t\tfiles[hash] = files[hash] ? $.extend(files[hash], file) : file;","\t1559: \t\t\t\t\tvar file = files[hash];","\t1560: \t\t\t\t\tif (file) {","\t1561: \t\t\t\t\t\tif (file.mime == 'directory' && file.dirs) {","\t1562: \t\t\t\t\t\t\t$.each(files, function(h, f) {","\t1566: \t\t\t\t\t\tdelete files[hash];","\t1576: \t\t\tcache(e.data.files);","\t1598: \t// in getFileCallback set - change default actions on double click/enter/ctrl+enter","\t1599: \tif (typeof(this.options.getFileCallback) == 'function' && this.commands.getfile) {","\t1602: \t\t\tself.exec('getfile').fail(function() {","\t1608: \t\t\tdescription : this.i18n('cmdgetfile'),","\t1609: \t\t\tcallback    : function() { self.exec('getfile').fail(function() { self.exec(self.OS == 'mac' ? 'rename' : 'open') }) }","\t1630: \t$.each(['open', 'reload', 'back', 'forward', 'up', 'home', 'info', 'quicklook', 'getfile', 'help'], function(i, cmd) {","\t1794: \t * File mimetype to kind mapping","\t1931: \t\topen    : function(data) { return data && data.cwd && data.files && $.isPlainObject(data.cwd) && $.isArray(data.files); },","\t1936: \t\tsearch  : function(data) { return data && data.files && $.isArray(data.files)}","\t2035: \t\t\tif (input && $(input).is(':file') && $(input).val()) {","\t2041: \t\t\tcnt = input.files ? input.files.length : 1;","\t2081: \t\t\t\tfiles       = data.input ? data.input.files : data.files, ","\t2082: \t\t\t\tcnt         = files.length,","\t2135: \t\t\t\t\t// drop file from finder","\t2160: \t\t\t$.each(files, function(i, file) {","\t2161: \t\t\t\tformData.append('upload[]', file);","\t2166: \t\t\t\t\t// ff bug while send zero sized file","\t2174: \t\t\tif (!this.UA.Safari || !data.files) {","\t2305: \t\tvar filter = function(file) { ","\t2307: \t\t\tif (file && file.hash && file.name && file.mime) {","\t2308: \t\t\t\tif (file.mime == 'application/x-empty') {","\t2309: \t\t\t\t\tfile.mime = 'text/plain';","\t2311: \t\t\t\treturn file;","\t2314: \t\t\treturn file && file.hash && file.name && file.mime ? file : null; ","\t2318: \t\tif (data.files) {","\t2319: \t\t\tdata.files = $.map(data.files, filter);","\t2322: \t\t\tdata.tree = $.map(data.tree, filter);","\t2325: \t\t\tdata.added = $.map(data.added, filter);","\t2328: \t\t\tdata.changed = $.map(data.changed, filter);","\t2351: \t\tname : function(file1, file2) { return file1.name.toLowerCase().localeCompare(file2.name.toLowerCase()); },","\t2352: \t\tsize : function(file1, file2) { ","\t2353: \t\t\tvar size1 = parseInt(file1.size) || 0,","\t2354: \t\t\t\tsize2 = parseInt(file2.size) || 0;","\t2357: \t\t\treturn (parseInt(file1.size) || 0) > (parseInt(file2.size) || 0) ? 1 : -1; },","\t2358: \t\tkind : function(file1, file2) { return file1.mime.localeCompare(file2.mime); },","\t2359: \t\tdate : function(file1, file2) { ","\t2360: \t\t\tvar date1 = file1.ts || file1.date,","\t2361: \t\t\t\tdate2 = file2.ts || file2.date;","\t2368: \t * Compare files based on elFinder.sort","\t2370: \t * @param  Object  file","\t2371: \t * @param  Object  file","\t2374: \tcompare : function(file1, file2) {","\t2381: \t\t\td1    = file1.mime == 'directory',","\t2382: \t\t\td2    = file2.mime == 'directory',","\t2393: \t\tres = asc ? sort(file1, file2) : sort(file2, file1);","\t2396: \t\t\t? res = asc ? rules.name(file1, file2) : rules.name(file2, file1)","\t2401: \t * Sort files based on config","\t2403: \t * @param  Array  files","\t2406: \tsortFiles : function(files) {","\t2407: \t\treturn files.sort(this.compare);","\t2418: \t *    msg : 'Copy files', // not required for known types @see this.notifyType","\t2485: \t *    title : 'Remove files',","\t2561: \t * Create unique file name in required dir","\t2563: \t * @param  String  file name","\t2580: \t\tif (!this.fileByName(name, phash)) {","\t2585: \t\t\tif (!this.fileByName(name, phash)) {","\t2604: \t\t\t\tvar file;","\t2606: \t\t\t\t\tif ((file = self.file(m.substr(1)))) {","\t2607: \t\t\t\t\t\treturn file.name;","\t2654: \t * @param  String  file mimetype","\t2666: \t * Return localized kind of file","\t2668: \t * @param  Object|String  file or file mimetype","\t2721: \t * @param  Object  file object","\t2724: \tformatDate : function(file, ts) {","\t2726: \t\t\tts   = ts || file.ts, ","\t2774: \t\t} else if (file.date) {","\t2775: \t\t\treturn file.date.replace(/([a-z]+)\\s/i, function(a1, a2) { return self.i18n(a2)+' '; });","\t2782: \t * Return css class marks file permissions","\t2784: \t * @param  Object  file ","\t2801: \t * Return localized string with file permissions","\t2803: \t * @param  Object  file","\t2816: \t * Return formated file size","\t2818: \t * @param  Number  file size","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/elFinder.options.js:","\t50: \t * URL to upload file to.","\t59: \t * Allow to drag and drop to upload files","\t75: \t * Data to append to all requests and to upload files","\t99: \t * Additional css class for filemanager node.","\t112: \t\t'open', 'reload', 'home', 'up', 'back', 'forward', 'getfile', 'quicklook', ","\t113: \t\t'download', 'rm', 'duplicate', 'rename', 'mkdir', 'mkfile', 'upload', 'copy', ","\t123: \t\t// \"getfile\" command options.","\t124: \t\tgetfile : {","\t126: \t\t\t// allow to return multiple files info","\t128: \t\t\t// allow to return filers info","\t145: \t\t\t// if empty - any text files can be edited","\t147: \t\t\t// edit files in wysisyg's","\t151: \t\t\t\t// \t * files mimetypes allowed to edit in current wysisyg","\t174: \t\t\t\t// \t * Called before file content send to backend.","\t192: \t * Callback for \"getfile\" commands.","\t198: \tgetFileCallback : null,","\t230: \t\t\t['mkdir', 'mkfile', 'upload'],","\t231: \t\t\t['open', 'download', 'getfile'],","\t261: \t * Display only required files by types","\t272: \t * Custom files sort rules.","\t278: \t *   name : function(file1, file2) { return file1.name.toLowerCase().localeCompare(file2.name.toLowerCase()); }","\t323: \t * File modification datetime format.","\t333: \t * File modification datetime format in form \"Yesterday 12:23:01\".","\t394: \t * How many files display at once?","\t399: \tshowFiles : 30,","\t403: \t * Distance in px to cwd bottom edge to start display files","\t411: \t * Additional rule to valid new file name.","\t459: \t\tcwd    : ['reload', 'back', '|', 'upload', 'mkdir', 'mkfile', 'paste', '|', 'sort', '|', 'info'],","\t460: \t\t// current directory file menu","\t461: \t\tfiles  : ['getfile', '|','open', 'quicklook', '|', 'download', '|', 'copy', 'cut', 'paste', 'duplicate', '|', 'rm', '|', 'edit', 'rename', 'resize', '|', 'archive', 'extract', '|', 'info']","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/elFinder.resources.js:","\t17: \t\tcwdfile     : 'elfinder-cwd-file',","\t75: \t\t\t\tfile   = {","\t83: \t\t\t\tnode = cwd.trigger('create.'+fm.namespace, file).find('#'+id),","\t106: \t\t\t\t\t\t\tif (fm.fileByName(name, phash)) {","\t112: \t\t\t\t\t\t\tfm.lockfiles({files : [id]});","\t135: \t\t\tnode.find('.elfinder-cwd-filename').empty('').append(input.val(file.name));","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/jquery.dialogelfinder.js:","\t9:  *     title          : 'My files', // dialog title, default = \"Files\"","\t24: \t\t\ttoolbar = $('<div class=\"ui-widget-header dialogelfinder-drag ui-corner-top\">'+(opts.title || 'Files')+'</div>'),","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/archive.js:","\t4:  * Archive selected files","\t35: \t\tvar files = this.files(hashes),","\t36: \t\t\tcnt   = files.length,","\t39: \t\t\terror = ['errArchive', 'errPerm', 'errCreatingTempDir', 'errFtpDownloadFile', 'errFtpUploadFile', 'errFtpMkdir', 'errArchiveExec', 'errExtractExec', 'errRm'],","\t54: \t\t\tif (!files[i].read) {","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/copy.js:","\t4:  * Put files in filemanager clipboard.","\t16: \t\tvar sel = this.files(sel),","\t29: \t\t$.each(this.files(hashes), function(i, file) {","\t30: \t\t\tif (!(file.read && file.phash)) {","\t31: \t\t\t\treturn !dfrd.reject(['errCopy', file.name, 'errPerm']);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/cut.js:","\t4:  * Put files in filemanager clipboard.","\t16: \t\tvar sel = this.files(sel),","\t29: \t\t$.each(this.files(hashes), function(i, file) {","\t30: \t\t\tif (!(file.read && file.phash) ) {","\t31: \t\t\t\treturn !dfrd.reject(['errCopy', file.name, 'errPerm']);","\t33: \t\t\tif (file.locked) {","\t34: \t\t\t\treturn !dfrd.reject(['errLocked', file.name]);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/download.js:","\t4:  * Download selected files.","\t12: \t\tfilter = function(hashes) {","\t13: \t\t\treturn $.map(self.files(hashes), function(f) { return f.mime == 'directory' ? null : f });","\t24: \t\treturn  !this._disabled && cnt && (!fm.UA.IE || cnt == 1) && cnt == filter(sel).length ? 0 : -1;","\t30: \t\t\tfiles   = filter(hashes),","\t52: \t\tfor (i = 0; i < files.length; i++) {","\t53: \t\t\tiframes += '<iframe class=\"downloader\" id=\"downloader-' + files[i].hash+'\" style=\"display:none\" src=\"'+base + 'cmd=file&target=' + files[i].hash+'&download=1'+cdata+'\"/>';","\t62: \t\t\t\t}, fm.UA.Firefox? (20000 + (10000 * i)) : 1000); // give mozilla 20 sec + 10 sec for each file to be saved","\t64: \t\tfm.trigger('download', {files : files});","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/duplicate.js:","\t4:  * Create file/folder copy with suffix \"copy Number\"","\t13: \t\tvar sel = this.files(sel),","\t21: \t\t\tfiles  = this.files(hashes),","\t22: \t\t\tcnt    = files.length,","\t33: \t\t$.each(files, function(i, file) {","\t34: \t\t\tif (!file.read || !fm.file(file.phash).write) {","\t35: \t\t\t\treturn !dfrd.reject(['errCopy', file.name, 'errPerm']);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/edit.js:","\t4:  * Edit text file in dialog window","\t14: \t\t * Return files acceptable to edit","\t16: \t\t * @param  Array  files hashes","\t19: \t\tfilter = function(files) {","\t20: \t\t\treturn $.map(files, function(file) {","\t21: \t\t\t\treturn (file.mime.indexOf('text/') === 0 || $.inArray(file.mime, mimes) !== -1) ","\t22: \t\t\t\t\t&& file.mime.indexOf('text/rtf')","\t23: \t\t\t\t\t&& (!self.onlyMimes.length || $.inArray(file.mime, self.onlyMimes) !== -1)","\t24: \t\t\t\t\t&& file.read && file.write ? file : null;","\t29: \t\t * Open dialog with textarea to edit file","\t32: \t\t * @param  Object  file     file object","\t33: \t\t * @param  String  content  file content","\t36: \t\tdialog = function(id, file, content) {","\t39: \t\t\t\tta   = $('<textarea class=\"elfinder-file-edit\" rows=\"20\" id=\"'+id+'-ta\">'+fm.escape(content)+'</textarea>'),","\t50: \t\t\t\t\ttitle   : file.name,","\t71: \t\t\t\t\tif ($.inArray(file.mime, editor.mimes || []) !== -1 ","\t126: \t\t * Get file content and","\t127: \t\t * open dialog with textarea to edit file content","\t129: \t\t * @param  String  file hash","\t132: \t\tedit = function(file) {","\t133: \t\t\tvar hash   = file.hash,","\t136: \t\t\t\tdata   = {cmd : 'file', target : hash},","\t138: \t\t\t\tid    = 'edit-'+fm.namespace+'-'+file.hash,","\t148: \t\t\tif (!file.read || !file.write) {","\t149: \t\t\t\terror = ['errOpen', file.name, 'errPerm']","\t156: \t\t\t\tnotify : {type : 'openfile', cnt : 1},","\t160: \t\t\t\tdialog(id, file, data.content)","\t199: \t\tvar sel = this.files(sel),","\t202: \t\treturn !this._disabled && cnt && filter(sel).length == cnt ? 0 : -1;","\t206: \t\tvar files = filter(this.files(hashes)),","\t208: \t\t\tfile;","\t214: \t\twhile ((file = files.shift())) {","\t215: \t\t\tlist.push(edit(file));","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/extract.js:","\t4:  * Extract files from archive","\t12: \t\tfilter  = function(files) {","\t13: \t\t\treturn $.map(files, function(file) { ","\t14: \t\t\t\treturn file.read && $.inArray(file.mime, mimes) !== -1 ? file : null","\t28: \t\tvar sel = this.files(sel),","\t31: \t\treturn !this._disabled && cnt && this.fm.cwd().write && filter(sel).length == cnt ? 0 : -1;","\t35: \t\tvar files    = this.files(hashes),","\t37: \t\t\tcnt      = files.length, ","\t44: \t\tvar names = $.map(fm.files(hashes), function(file) { return file.name; });","\t46: \t\t$.map(fm.files(hashes), function(file) { map[file.name] = file; });","\t59: \t\tvar unpack = function(file) {","\t60: \t\t\tif (!(file.read && fm.file(file.phash).write)) {","\t61: \t\t\t\terror = ['errExtract', file.name, 'errPerm'];","\t64: \t\t\t} else if ($.inArray(file.mime, mimes) === -1) {","\t65: \t\t\t\terror = ['errExtract', file.name, 'errNoArchive'];","\t70: \t\t\t\t\tdata:{cmd:'extract', target:file.hash},","\t84: \t\tvar confirm = function(files, index) {","\t85: \t\t\tvar file = files[index];","\t86: \t\t\tvar name = file.name.replace(/\\.((tar\\.(gz|bz|bz2|z|lzo))|cpio\\.gz|ps\\.gz|xcf\\.(gz|bz2)|[a-z0-9]{1,4})$/ig, '');","\t100: \t\t\t\t\t\t\t\t\t\tunpack(file);","\t103: \t\t\t\t\t\t\t\t\t\tconfirm(files, index+1);","\t109: \t\t\t\t\t\t\t\t\t\tunpack(files[i]);","\t121: \t\t\t\t\t\t\t\t\tconfirm(files, index+1);","\t137: \t\t\t\tunpack(file);","\t139: \t\t\t\t\tconfirm(files, index+1);","\t151: \t\t\tconfirm(files, 0);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/getfile.js:","\t3:  * @class elFinder command \"getfile\". ","\t4:  * Return selected files info into outer callback.","\t9: elFinder.prototype.commands.getfile = function() {","\t12: \t\tfilter = function(files) {","\t15: \t\t\tfiles = $.map(files, function(file) {","\t16: \t\t\t\treturn file.mime != 'directory' || o.folders ? file : null;","\t19: \t\t\treturn o.multiple || files.length == 1 ? files : [];","\t23: \tthis.callback      = fm.options.getFileCallback;","\t27: \t\tvar sel = this.files(sel),","\t30: \t\treturn this.callback && cnt && filter(sel).length == cnt ? 0 : -1;","\t36: \t\t\tfiles = this.files(hashes),","\t37: \t\t\tcnt   = files.length,","\t42: \t\t\t\t\tfm.trigger('getfile', {files : data});","\t51: \t\t\tresult = function(file) {","\t53: \t\t\t\t\t? opts.multiple ? $.map(files, function(f) { return f.url; }) : files[0].url","\t54: \t\t\t\t\t: opts.multiple ? files : files[0];","\t57: \t\t\ti, file, dim;","\t64: \t\t\tfile = files[i];","\t65: \t\t\tif (file.mime == 'directory' && !opts.folders) {","\t68: \t\t\tfile.baseUrl = url;","\t69: \t\t\tfile.url     = fm.url(file.hash);","\t70: \t\t\tfile.path    = fm.path(file.hash);","\t71: \t\t\tif (file.tmb && file.tmb != 1) {","\t72: \t\t\t\tfile.tmb = tmb + file.tmb;","\t74: \t\t\tif (!file.width && !file.height) {","\t75: \t\t\t\tif (file.dim) {","\t76: \t\t\t\t\tdim = file.dim.split('x');","\t77: \t\t\t\t\tfile.width = dim[0];","\t78: \t\t\t\t\tfile.height = dim[1];","\t79: \t\t\t\t} else if (file.mime.indexOf('image') !== -1) {","\t81: \t\t\t\t\t\tdata : {cmd : 'dim', target : file.hash},","\t88: \t\t\t\t\t\t\tvar rfile = fm.file(this.hash);","\t89: \t\t\t\t\t\t\trfile.width = this.width = dim[0];","\t90: \t\t\t\t\t\t\trfile.height = this.height = dim[1];","\t92: \t\t\t\t\t}.bind(file)));","\t99: \t\t\t\tdfrd.resolve(result(files));","\t104: \t\treturn dfrd.resolve(result(files));","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/help.js:","\t132: \t\t\t\t\tcontent.find('.ui-tabs-panel').hide().filter(link.attr('href')).show();","\t136: \t\t\t.filter(':first').click();","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/info.js:","\t4:  * Display dialog with file properties.","\t23: \t\t\tfiles    : fm.i18n('files'),","\t56: \t\tvar files   = this.files(hashes);","\t57: \t\tif (! files.length) {","\t58: \t\t\tfiles   = this.files([ this.fm.cwd().hash ]);","\t64: \t\t\tcnt     = files.length,","\t76: \t\t\tid = fm.namespace+'-info-'+$.map(files, function(f) { return f.hash }).join('-'),","\t78: \t\t\tsize, tmb, file, title, dcnt;","\t91: \t\t\tfile  = files[0];","\t93: \t\t\tview  = view.replace('{class}', fm.mime2class(file.mime));","\t94: \t\t\ttitle = tpl.itemTitle.replace('{name}', fm.escape(file.i18 || file.name)).replace('{kind}', fm.mime2kind(file));","\t96: \t\t\tif (file.tmb) {","\t97: \t\t\t\ttmb = fm.option('tmbUrl')+file.tmb;","\t100: \t\t\tif (!file.read) {","\t102: \t\t\t} else if (file.mime != 'directory' || file.alias) {","\t103: \t\t\t\tsize = fm.formatSize(file.size);","\t106: \t\t\t\tcount.push(file.hash);","\t110: \t\t\tfile.alias && content.push(row.replace(l, msg.aliasfor).replace(v, file.alias));","\t111: \t\t\tcontent.push(row.replace(l, msg.path).replace(v, fm.escape(fm.path(file.hash, true))));","\t112: \t\t\tfile.read && content.push(row.replace(l, msg.link).replace(v,  '<a href=\"'+fm.url(file.hash)+'\" target=\"_blank\">'+file.name+'</a>'));","\t114: \t\t\tif (file.dim) { // old api","\t115: \t\t\t\tcontent.push(row.replace(l, msg.dim).replace(v, file.dim));","\t116: \t\t\t} else if (file.mime.indexOf('image') !== -1) {","\t117: \t\t\t\tif (file.width && file.height) {","\t118: \t\t\t\t\tcontent.push(row.replace(l, msg.dim).replace(v, file.width+'x'+file.height));","\t122: \t\t\t\t\t\tdata : {cmd : 'dim', target : file.hash},","\t132: \t\t\t\t\t\t\tvar rfile = fm.file(file.hash);","\t133: \t\t\t\t\t\t\trfile.width = dim[0];","\t134: \t\t\t\t\t\t\trfile.height = dim[1];","\t141: \t\t\tcontent.push(row.replace(l, msg.modify).replace(v, fm.formatDate(file)));","\t142: \t\t\tcontent.push(row.replace(l, msg.perms).replace(v, fm.formatPermissions(file)));","\t143: \t\t\tcontent.push(row.replace(l, msg.locked).replace(v, file.locked ? msg.yes : msg.no));","\t147: \t\t\tdcnt  = $.map(files, function(f) { return f.mime == 'directory' ? 1 : null }).length;","\t150: \t\t\t\t$.each(files, function(h, f) { ","\t159: \t\t\t\tcontent.push(row.replace(l, msg.kind).replace(v, msg.files));","\t162: \t\t\t\tcontent.push(row.replace(l, msg.kind).replace(v, dcnt == cnt ? msg.folders : msg.folders+' '+dcnt+', '+msg.files+' '+(cnt-dcnt)))","\t164: \t\t\t\tcount = $.map(files, function(f) { return f.hash });","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/mkfile.js:","\t3:  * @class  elFinder command \"mkfile\"","\t4:  * Create new empty file","\t8: elFinder.prototype.commands.mkfile = function() {","\t12: \tthis.prefix          = 'untitled file.txt';","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/open.js:","\t4:  * Enter folder or open files in new windows","\t21: \t\tvar sel = this.files(sel),","\t26: \t\t\t: cnt ? ($.map(sel, function(file) { return file.mime == 'directory' ? null : file}).length == cnt ? 0 : -1) : -1","\t32: \t\t\tfiles = this.files(hashes),","\t33: \t\t\tcnt   = files.length,","\t34: \t\t\tfile, url, s, w;","\t41: \t\tif (cnt == 1 && (file = files[0]) && file.mime == 'directory') {","\t42: \t\t\treturn file && !file.read","\t43: \t\t\t\t? dfrd.reject(['errOpen', file.name, 'errPerm'])","\t45: \t\t\t\t\t\tdata   : {cmd  : 'open', target : file.thash || file.hash},","\t51: \t\tfiles = $.map(files, function(file) { return file.mime != 'directory' ? file : null });","\t53: \t\t// nothing to open or files and folders selected - do nothing","\t54: \t\tif (cnt != files.length) {","\t58: \t\t// open files","\t59: \t\tcnt = files.length;","\t61: \t\t\tfile = files[cnt];","\t63: \t\t\tif (!file.read) {","\t64: \t\t\t\treturn dfrd.reject(['errOpen', file.name, 'errPerm']);","\t67: \t\t\tif (!(url = fm.url(/*file.thash || */file.hash))) {","\t70: \t\t\t\t\t+ (fm.oldAPI ? 'cmd=open&current='+file.phash : 'cmd=file')","\t71: \t\t\t\t\t+ '&target=' + file.hash;","\t75: \t\t\tif (file.dim) {","\t76: \t\t\t\ts = file.dim.split('x');","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/paste.js:","\t4:  * Paste filesfrom clipboard into directory.","\t5:  * If files pasted in its parent directory - files duplicates will created","\t30: \t\t\t\tdst = this.fm.file(dst[0]);","\t42: \t\t\tdst    = dst ? this.files(dst)[0] : fm.cwd(),","\t43: \t\t\tfiles  = fm.clipboard(),","\t44: \t\t\tcnt    = files.length,","\t45: \t\t\tcut    = cnt ? files[0].cut : false,","\t53: \t\t\tcopy  = function(files) {","\t54: \t\t\t\treturn files.length && fm._commands.duplicate","\t55: \t\t\t\t\t? fm.exec('duplicate', files)","\t58: \t\t\tpaste = function(files) {","\t61: \t\t\t\t\tintersect = function(files, names) {","\t63: \t\t\t\t\t\t\ti   = files.length;","\t66: \t\t\t\t\t\t\t$.inArray(files[i].name, names) !== -1 && ret.unshift(i);","\t72: \t\t\t\t\t\t\tfile = files[i],","\t75: \t\t\t\t\t\tif (!file) {","\t80: \t\t\t\t\t\t\ttitle  : fm.i18n(cut ? 'moveFiles' : 'copyFiles'),","\t81: \t\t\t\t\t\t\ttext   : fm.i18n(['errExists', file.name, 'confirmRepl']), ","\t88: \t\t\t\t\t\t\t\t\t\t: paste(files);","\t99: \t\t\t\t\t\t\t\t\t\t\tfiles[existed[i]].remove = true","\t102: \t\t\t\t\t\t\t\t\t\tfiles[existed[ndx]].remove = true;","\t107: \t\t\t\t\t\t\t\t\t\t: paste(files);","\t119: \t\t\t\t\t\texisted = intersect(files, names);","\t120: \t\t\t\t\t\texisted.length ? confirm(0) : paste(files);","\t122: \t\t\t\t\tpaste     = function(files) {","\t123: \t\t\t\t\t\tvar files  = $.map(files, function(file) { return !file.remove ? file : null } ),","\t124: \t\t\t\t\t\t\tcnt    = files.length,","\t133: \t\t\t\t\t\tsrc = files[0].phash;","\t134: \t\t\t\t\t\tfiles = $.map(files, function(f) { return f.hash});","\t137: \t\t\t\t\t\t\t\tdata   : {cmd : 'paste', dst : dst.hash, targets : files, cut : cut ? 1 : 0, src : src},","\t142: \t\t\t\t\t\t\t\tfm.unlockfiles({files : files});","\t147: \t\t\t\tif (self._disabled || !files.length) {","\t153: \t\t\t\t\tpaste(files);","\t157: \t\t\t\t\t\tpaste(files);","\t161: \t\t\t\t\t\t\t? valid($.map(fm.files(), function(file) { return file.phash == dst.hash ? file.name : null }))","\t183: \t\t\treturn dfrd.reject([error, files[0].name, 'errPerm']);","\t188: \t\t$.each(files, function(i, file) {","\t189: \t\t\tif (!file.read) {","\t190: \t\t\t\treturn !dfrd.reject([error, files[0].name, 'errPerm']);","\t193: \t\t\tif (cut && file.locked) {","\t194: \t\t\t\treturn !dfrd.reject(['errLocked', file.name]);","\t197: \t\t\tif ($.inArray(file.hash, parents) !== -1) {","\t198: \t\t\t\treturn !dfrd.reject(['errCopyInItself', file.name]);","\t201: \t\t\tfparents = fm.parents(file.hash);","\t204: \t\t\t\tif ($.map(fparents, function(h) { var d = fm.file(h); return d.phash == dst.hash && d.name == file.name ? d : null }).length) {","\t205: \t\t\t\t\treturn !dfrd.reject(['errReplByChild', file.name]);","\t209: \t\t\tif (file.phash == dst.hash) {","\t210: \t\t\t\tfcopy.push(file.hash);","\t213: \t\t\t\t\thash  : file.hash,","\t214: \t\t\t\t\tphash : file.phash,","\t215: \t\t\t\t\tname  : file.name","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/quicklook.js:","\t4:  * Fast preview for some files types","\t65: \t\t * @param  jQuery  file node in cwd","\t213: \t\t\t\tfile    = e.file,","\t217: \t\t\tif (file) {","\t218: \t\t\t\t!file.read && e.stopImmediatePropagation();","\t219: \t\t\t\tself.window.data('hash', file.hash);","\t221: \t\t\t\ttitle.html(fm.escape(file.name));","\t224: \t\t\t\t\t\ttpl.replace(/\\{value\\}/, file.name)","\t225: \t\t\t\t\t\t+ tpl.replace(/\\{value\\}/, fm.mime2kind(file))","\t226: \t\t\t\t\t\t+ (file.mime == 'directory' ? '' : tpl.replace(/\\{value\\}/, fm.formatSize(file.size)))","\t227: \t\t\t\t\t\t+ tpl.replace(/\\{value\\}/, fm.i18n('modify')+': '+ fm.formatDate(file))","\t229: \t\t\t\ticon.addClass('elfinder-cwd-icon ui-corner-all '+fm.mime2class(file.mime));","\t231: \t\t\t\tif (file.tmb) {","\t239: \t\t\t\t\t\t.attr('src', (tmb = fm.tmb(file.hash)));","\t265: \t\t\t\tfile = self.value,","\t268: \t\t\tif (self.closed() && file && (node = cwd.find('#'+file.hash)).length) {","\t283: \t\t\t\tfile    = self.value,","\t310: \t * Selected file","\t317: \t\t// save selected file","\t318: \t\tselect : function() { this.update(void(0), this.fm.selectedFiles()[0]); },","\t401: \t\t\t\t\tself.value ? preview.trigger($.Event('update', {file : self.value})) : win.trigger('close');","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/quicklook.plugins.js:","\t23: \t\t\tvar file = e.file,","\t26: \t\t\tif ($.inArray(file.mime, mimes) !== -1) {","\t27: \t\t\t\t// this is our file - stop event propagation","\t61: \t\t\t\t\t.attr('src', ql.fm.url(file.hash));","\t78: \t\t\tvar file = e.file, jqxhr;","\t80: \t\t\tif ($.inArray(file.mime, mimes) !== -1) {","\t83: \t\t\t\t// stop loading on change file if not loaded yet","\t89: \t\t\t\t\tdata           : {cmd : 'get', target  : file.hash, current : file.phash},","\t115: \t\t\tvar file = e.file,","\t116: \t\t\t\tmime = file.mime,","\t122: \t\t\t\t// stop loading on change file if not loadin yet","\t128: \t\t\t\t\tdata   : {cmd     : 'get', target  : file.hash },","\t163: \t\t\tvar file = e.file, node;","\t165: \t\t\tif (file.mime == mime) {","\t178: \t\t\t\t\t.attr('src', fm.url(file.hash));","\t206: \t\t\tvar file = e.file,","\t209: \t\t\tif (file.mime == mime) {","\t212: \t\t\t\tpreview.append((node = $('<embed class=\"elfinder-quicklook-preview-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" src=\"'+fm.url(file.hash)+'\" quality=\"high\" type=\"application/x-shockwave-flash\" />')));","\t242: \t\t\tvar file = e.file,","\t243: \t\t\t\ttype = mimes[file.mime];","\t248: \t\t\t\tnode = $('<audio class=\"elfinder-quicklook-preview-audio\" controls preload=\"auto\" autobuffer><source src=\"'+ql.fm.url(file.hash)+'\" /></audio>')","\t279: \t\t\tvar file = e.file,","\t280: \t\t\t\ttype = mimes[file.mime];","\t286: \t\t\t\tnode = $('<video class=\"elfinder-quicklook-preview-video\" controls preload=\"auto\" autobuffer><source src=\"'+ql.fm.url(file.hash)+'\" /></video>').appendTo(preview);","\t316: \t\t\tvar file  = e.file,","\t317: \t\t\t\tmime  = file.mime,","\t320: \t\t\tif ($.inArray(file.mime, mimes) !== -1) {","\t323: \t\t\t\tnode = $('<embed src=\"'+ql.fm.url(file.hash)+'\" type=\"'+mime+'\" class=\"elfinder-quicklook-preview-'+(video ? 'video' : 'audio')+'\"/>')","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/reload.js:","\t3:  * Sync files and folders","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/rename.js:","\t4:  * Rename selected file.","\t15: \t\tvar sel = this.fm.selectedFiles();","\t25: \t\t\tfile     = fm.file(sel.shift()),","\t26: \t\t\tfilename = '.elfinder-cwd-filename',","\t30: \t\t\t\t\t\tname   = fm.escape(file.name);","\t37: \t\t\t\t\t\tcwd.find('#'+file.hash).find(filename).html(name);","\t39: \t\t\t\t\t\t\tcwd.find('#'+file.hash).click();","\t73: \t\t\t\t\t\tif (name == file.name) {","\t79: \t\t\t\t\t\tif (fm.fileByName(name, file.phash)) {","\t84: \t\t\t\t\t\tfm.lockfiles({files : [file.hash]});","\t86: \t\t\t\t\t\t\t\tdata   : {cmd : 'rename', target : file.hash, name : name},","\t97: \t\t\t\t\t\t\t\tfm.unlockfiles({files : [file.hash]})","\t102: \t\t\tnode = cwd.find('#'+file.hash).find(filename).empty().append(input.val(file.name)),","\t110: \t\tif (!file || cnt > 1 || !node.length) {","\t114: \t\tif (file.locked) {","\t115: \t\t\treturn dfrd.reject(['errLocked', file.name]);","\t119: \t\t\tinput.parent().length && file && $.inArray(file.hash, fm.selected()) === -1 && input.blur();","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/resize.js:","\t16: \t\tvar sel = this.fm.selectedFiles();","\t22: \t\t\tfiles = this.files(hashes),","\t25: \t\t\topen = function(file, id) {","\t163: \t\t\t\t\t\t\t\t.filter(':text').keydown(function(e) {","\t208: \t\t\t\t\t\t\t\t.filter(':first').focus();","\t401: \t\t\t\t\t\t\t\trhandle.filter(':ui-resizable').resizable('destroy');","\t418: \t\t\t\t\t\t\t\trhandlec.filter(':ui-resizable').resizable('destroy');","\t419: \t\t\t\t\t\t\t\trhandlec.filter(':ui-draggable').draggable('destroy');","\t512: \t\t\t\t\t\t\t\ttarget : file.hash,","\t534: \t\t\t\t\tsrc     = fm.url(file.hash)","\t607: \t\t\t\t\ttitle          : file.name,","\t617: \t\t\t\t\t$('.elfinder-dialog').css('filter', '');","\t647: \t\tif (!files.length || files[0].mime.indexOf('image/') === -1) {","\t651: \t\tid = 'resize-'+fm.namespace+'-'+files[0].hash;","\t659: \t\topen(files[0], id);","\t787: \t\t\telement.style.filter =  (element.style.filter || '').replace(/progid:DXImageTransform\\.Microsoft\\.Matrix\\([^)]*\\)/, \"\" ) +","\t793: \t\t\t\t\t\",FilterType='bilinear',sizingMethod='auto expand')\") ","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/rm.js:","\t4:  * Delete files","\t17: \t\treturn !this._disabled && sel.length && $.map(sel, function(h) { var f = fm.file(h); return f && f.phash && !f.locked ? h : null }).length == sel.length","\t28: \t\t\tfiles  = this.files(hashes),","\t29: \t\t\tcnt    = files.length,","\t37: \t\t$.each(files, function(i, file) {","\t38: \t\t\tif (!file.phash) {","\t39: \t\t\t\treturn !dfrd.reject(['errRm', file.name, 'errPerm']);","\t41: \t\t\tif (file.locked) {","\t42: \t\t\t\treturn !dfrd.reject(['errLocked', file.name]);","\t44: \t\t\tif (file.hash == cwd) {","\t45: \t\t\t\tgoroot = fm.root(file.hash);","\t50: \t\t\tfiles = this.hashes(hashes);","\t58: \t\t\t\t\t\tfm.lockfiles({files : files});","\t60: \t\t\t\t\t\t\tdata   : {cmd  : 'rm', targets : files}, ","\t72: \t\t\t\t\t\t\tfm.unlockfiles({files : files});","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/search.js:","\t4:  * Find files","\t9: \tthis.title          = 'Find files';","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/sort.js:","\t4:  * Change sort files rule","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/upload.js:","\t4:  * Upload files using iframe or XMLHttpRequest & FormData.","\t5:  * Dialog allow to send files using drag and drop","\t49: \t\tif (data && (data.input || data.files)) {","\t56: \t\tinput = $('<input type=\"file\" multiple=\"true\"/>')","\t71: \t\t\tdropbox = $('<div class=\"ui-corner-all elfinder-upload-dropbox\">'+fm.i18n('dropFiles')+'</div>')","\t96: \t\t\t\tupload({files : e.dataTransfer.files});","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.ar.js:","\t35: \t\t\t'errNotFile'           : 'العنصر المختار ليس ملف',","\t43: \t\t\t'errFileNotFound'      : 'الملف غير موجود',","\t47: \t\t\t'errMkfile'            : ' غير قادر على إنشاء ملف جديد\"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'لم يتم رفع أي ملف ',","\t55: \t\t\t'errFileMaxSize'       : 'حجم الملف أكبر من الحجم المسموح به',","\t70: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t82: \t\t\t'cmdgetfile'   : 'أختيار الملفات',","\t87: \t\t\t'cmdmkfile'    : 'ملف نصي جديد',","\t109: \t\t\t'ntffile'     : 'فتح ملف',","\t112: \t\t\t'ntfmkfile'   : 'ينشئ الملفات',","\t159: \t\t\t'selectfiles'     : 'تحديد ملفات',","\t160: \t\t\t'selectffile'     : 'تحديد الملف الاول',","\t161: \t\t\t'selectlfile'     : 'تحديد الملف الأخير',","\t170: \t\t\t'files'           : 'ملفات',","\t198: \t\t\t'dropFiles'       : 'لصق الملفات هنا',","\t201: \t\t\t'moveFiles'       : 'قص الملفات',","\t202: \t\t\t'copyFiles'       : 'نسخ الملفات',","\t205: \t\t\t'untitled file.txt' : 'untitled file.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.bg.js:","\t35: \t\t\t'errNotFile'           : 'Обектът не е фаил.',","\t43: \t\t\t'errFileNotFound'      : 'Фаилът не е открит.',","\t47: \t\t\t'errMkfile'            : 'Не мога да създам файл \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'Не са намерени файлове за качване.',","\t55: \t\t\t'errFileMaxSize'       : 'Файла превишава максимално допустимия размер.',","\t84: \t\t\t'cmdgetfile'   : 'Избери файлове',","\t89: \t\t\t'cmdmkfile'    : 'Нов текстови файл',","\t114: \t\t\t'ntffile'     : 'Отваряне на файл',","\t117: \t\t\t'ntfmkfile'   : 'Създавам файл',","\t175: \t\t\t'selectfiles'     : 'Избери фаил(ове)',","\t176: \t\t\t'selectffile'     : 'Избери първият файл',","\t177: \t\t\t'selectlfile'     : 'Избери последният файл',","\t186: \t\t\t'files'           : 'Файлове',","\t214: \t\t\t'dropFiles'       : 'Пуснете файловете тук',","\t217: \t\t\t'moveFiles'       : 'Премести файлове',","\t218: \t\t\t'copyFiles'       : 'Копирай файлове',","\t221: \t\t\t'untitled file.txt' : 'неозаглавен_файл.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.ca.js:","\t35: \t\t\t'errNotFile'           : 'L\\'objecte no és un fitxer.',","\t43: \t\t\t'errFileNotFound'      : 'No s\\'ha trobat el fitxer.',","\t47: \t\t\t'errMkfile'            : 'No s\\'ha pogut crear el fitxer \"$1\".',","\t53: \t\t\t'errUploadNoFiles'     : 'No s\\'han trobat fitxers per carregar.',","\t55: \t\t\t'errFileMaxSize'       : 'El fitxer excedeix la mida màxima permesa.',","\t84: \t\t\t'cmdgetfile'   : 'Selecciona els fitxers',","\t89: \t\t\t'cmdmkfile'    : 'Nou fitxer de text',","\t114: \t\t\t'ntffile'     : 'S\\'està obrint el fitxer',","\t117: \t\t\t'ntfmkfile'   : 'S\\'estan creant el fitxers',","\t175: \t\t\t'selectfiles'     : 'Selecciona el(s) fitxer(s)',","\t176: \t\t\t'selectffile'     : 'Selecciona el primer fitxer',","\t177: \t\t\t'selectlfile'     : 'Selecciona l\\'últim fitxer',","\t186: \t\t\t'files'           : 'Fitxers',","\t214: \t\t\t'dropFiles'       : 'Arrossegueu els fitxers aquí',","\t217: \t\t\t'moveFiles'       : 'Mou els fitxers',","\t218: \t\t\t'copyFiles'       : 'Copia els fitxers',","\t221: \t\t\t'untitled file.txt' : 'fitxer sense nom.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.cs.js:","\t37: \t\t\t'errNotFile'           : 'Objekt není soubor.',","\t45: \t\t\t'errFileNotFound'      : 'Soubor nenalezen.',","\t49: \t\t\t'errMkfile'            : 'Nepodařilo se vytvořit soubor \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : 'Nejsou vybrány žádné soubory k nahrání.',","\t57: \t\t\t'errFileMaxSize'       : 'Překročena maximální povolená velikost souboru.',","\t86: \t\t\t'cmdgetfile'   : 'Vybrat soubory',","\t91: \t\t\t'cmdmkfile'    : 'Nový textový soubor',","\t116: \t\t\t'ntffile'     : 'Otevírání souboru',","\t119: \t\t\t'ntfmkfile'   : 'Vytváření souborů',","\t202: \t\t\t'selectfiles'     : 'Vybrat soubor(y)',","\t203: \t\t\t'selectffile'     : 'Vybrat první soubor',","\t204: \t\t\t'selectlfile'     : 'Vybrat poslední soubor',","\t213: \t\t\t'files'           : 'Soubory',","\t241: \t\t\t'dropFiles'       : 'Přetáhněte soubory sem',","\t244: \t\t\t'moveFiles'       : 'Přesunout sobory',","\t245: \t\t\t'copyFiles'       : 'Zkupírovat soubory',","\t248: \t\t\t'untitled file.txt' : 'nepojmenovaný soubor.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.de.js:","\t38: \t\t\t'errNotFile'           : 'Objekt ist keine Datei.',","\t46: \t\t\t'errFileNotFound'      : 'Datei nicht gefunden.',","\t50: \t\t\t'errMkfile'            : 'Kann Datei \"$1\" nicht erstellen.',","\t55: \t\t\t'errUploadFile'        : 'Kann \"$1\" nicht hochladen.',","\t56: \t\t\t'errUploadNoFiles'     : 'Keine Dateien zum Hochladen gefunden.',","\t58: \t\t\t'errUploadFileSize'    : 'Die Datei überschreitet die Maximalgröße',","\t86: \t\t\t'errFtpDownloadFile'   : 'Download der Datei über FTP nicht möglich: \"$1\"',","\t87: \t\t\t'errFtpUploadFile'     : 'Upload der Datei zu FTP nicht möglich: \"$1\"',","\t102: \t\t\t'cmdgetfile'   : 'Datei auswählen',","\t107: \t\t\t'cmdmkfile'    : 'Neue Textdatei',","\t133: \t\t\t'ntffile'     : 'öffne Datei',","\t136: \t\t\t'ntfmkfile'   : 'Erstelle Dateien',","\t138: \t\t\t'ntfcopy'     : 'Kopiere Dateien files',","\t193: \t\t\t'selectfiles'     : 'Dateien auswählen',","\t194: \t\t\t'selectffile'     : 'Erste Datei auswhählen',","\t195: \t\t\t'selectlfile'     : 'Letzte Datei auswählen',","\t204: \t\t\t'files'           : 'Dateien',","\t232: \t\t\t'dropFiles'       : 'Dateien hier ablegen',","\t233: \t\t\t'dropFilesBrowser': 'Verschieben oder Einfügen von Dateien aus dem Browser',","\t236: \t\t\t'moveFiles'       : 'Dateien verschieben',","\t237: \t\t\t'copyFiles'       : 'Dateien kopieren',","\t324: \t\t\t'kindVideoDV'     : 'DV Film',","\t325: \t\t\t'kindVideoMPEG'   : 'MPEG Film',","\t326: \t\t\t'kindVideoMPEG4'  : 'MPEG-4 Film',","\t327: \t\t\t'kindVideoAVI'    : 'AVI Film',","\t328: \t\t\t'kindVideoMOV'    : 'Quick Time Film',","\t329: \t\t\t'kindVideoWM'     : 'Windows Media Film',","\t330: \t\t\t'kindVideoFlash'  : 'Flash Film',","\t331: \t\t\t'kindVideoMKV'    : 'Matroska Film',","\t332: \t\t\t'kindVideoOGG'    : 'Ogg Film'","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.el.js:","\t3:  * use this file to create new translation","\t44: \t\t\t'errNotFile'           : 'Το αντικείμενο δεν είναι αρχείο.',","\t52: \t\t\t'errFileNotFound'      : 'Το αρχείο δε βρέθηκε.',","\t56: \t\t\t'errMkfile'            : 'Η δημιουργία του αρχείου \"$1\" δεν ήταν δυνατή.',","\t62: \t\t\t'errUploadNoFiles'     : 'Δεν βρέθηκαν αρχεία για upload.',","\t64: \t\t\t'errFileMaxSize'       : 'Το αρχείο υπερβαίνει το επιτρεπόμενο μέγιστο μέγεθος.',","\t97: \t\t\t'cmdgetfile'   : 'Επιλέξτε αρχεία',","\t102: \t\t\t'cmdmkfile'    : 'Νέο αρχείο κειμένου',","\t127: \t\t\t'ntffile'     : 'Άνοιγμα αρχείου',","\t130: \t\t\t'ntfmkfile'   : 'Δημιουργία αρχείων',","\t211: \t\t\t'selectfiles'     : 'Επιλογή αρχείων',","\t212: \t\t\t'selectffile'     : 'Επιλογή πρώτου αρχείου',","\t213: \t\t\t'selectlfile'     : 'Επιλογή τελευταίου αρχείου',","\t222: \t\t\t'files'           : 'Αρχεία',","\t250: \t\t\t'dropFiles'       : 'Κάντε drop τα αρχεία εδώ',","\t253: \t\t\t'moveFiles'       : 'Μετακίνηση αρχείων',","\t254: \t\t\t'copyFiles'       : 'Αντιγραφή αρχείων',","\t257: \t\t\t'untitled file.txt' : 'untitled file.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.en.js:","\t37: \t\t\t'errNotFile'           : 'Object is not a file.',","\t42: \t\t\t'errExists'            : 'File named \"$1\" already exists.',","\t43: \t\t\t'errInvName'           : 'Invalid file name.',","\t45: \t\t\t'errFileNotFound'      : 'File not found.',","\t47: \t\t\t'errPopup'             : 'Browser prevented opening popup window. To open file enable it in browser options.',","\t49: \t\t\t'errMkfile'            : 'Unable to create file \"$1\".',","\t51: \t\t\t'errCopyFrom'          : 'Copying files from volume \"$1\" not allowed.',","\t52: \t\t\t'errCopyTo'            : 'Copying files to volume \"$1\" not allowed.',","\t54: \t\t\t'errUploadFile'        : 'Unable to upload \"$1\".', // old name - errUpload","\t55: \t\t\t'errUploadNoFiles'     : 'No files found for upload.', ","\t57: \t\t\t'errUploadFileSize'    : 'File exceeds maximum allowed size.', //  old name - errFileMaxSize","\t58: \t\t\t'errUploadMime'        : 'File type not allowed.', ","\t67: \t\t\t'errRmSrc'             : 'Unable remove source file(s).',","\t68: \t\t\t'errExtract'           : 'Unable to extract files from \"$1\".',","\t71: \t\t\t'errNoArchive'         : 'File is not archive or has unsupported archive type.',","\t74: \t\t\t'errArcSymlinks'       : 'For security reason denied to unpack archives contains symlinks or files with not allowed names.', // edited 24.06.2012","\t75: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t81: \t\t\t'errUsupportType'      : 'Unsupported file type.',","\t82: \t\t\t'errNotUTF8Content'    : 'File \"$1\" is not in UTF-8 and cannot be edited.',  // added 9.11.2011","\t89: \t\t\t'errFtpDownloadFile'   : 'Unable to download file from FTP: \"$1\"',","\t90: \t\t\t'errFtpUploadFile'     : 'Unable to upload file to FTP: \"$1\"',","\t92: \t\t\t'errArchiveExec'       : 'Error while archiving files: \"$1\"',","\t93: \t\t\t'errExtractExec'       : 'Error while extracting files: \"$1\"',","\t102: \t\t\t'cmdedit'      : 'Edit file',","\t103: \t\t\t'cmdextract'   : 'Extract files from archive',","\t105: \t\t\t'cmdgetfile'   : 'Select files',","\t110: \t\t\t'cmdmkfile'    : 'New text file',","\t117: \t\t\t'cmdsearch'    : 'Find files',","\t119: \t\t\t'cmdupload'    : 'Upload files',","\t136: \t\t\t'ntffile'     : 'Open file',","\t139: \t\t\t'ntfmkfile'   : 'Creating files',","\t140: \t\t\t'ntfrm'       : 'Delete files',","\t141: \t\t\t'ntfcopy'     : 'Copy files',","\t142: \t\t\t'ntfmove'     : 'Move files',","\t143: \t\t\t'ntfprepare'  : 'Prepare to copy files',","\t144: \t\t\t'ntfrename'   : 'Rename files',","\t145: \t\t\t'ntfupload'   : 'Uploading files',","\t146: \t\t\t'ntfdownload' : 'Downloading files',","\t147: \t\t\t'ntfsave'     : 'Save files',","\t149: \t\t\t'ntfextract'  : 'Extracting files from archive',","\t150: \t\t\t'ntfsearch'   : 'Searching files',","\t183: \t\t\t'confirmRm'       : 'Are you sure you want to remove files?<br/>This cannot be undone!',","\t184: \t\t\t'confirmRepl'     : 'Replace old file with new one?',","\t196: \t\t\t'selectall'       : 'Select all files',","\t197: \t\t\t'selectfiles'     : 'Select file(s)',","\t198: \t\t\t'selectffile'     : 'Select first file',","\t199: \t\t\t'selectlfile'     : 'Select last file',","\t208: \t\t\t'files'           : 'Files',","\t219: \t\t\t'webfm'           : 'Web file manager',","\t236: \t\t\t'dropFiles'       : 'Drop files here',","\t238: \t\t\t'selectForUpload' : 'Select files to upload',","\t239: \t\t\t'moveFiles'       : 'Move files',","\t240: \t\t\t'copyFiles'       : 'Copy files',","\t274: \t\t\t'kindTorrent'     : 'Bittorrent file',","\t281: \t\t\t'kindJAR'         : 'Java JAR file',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.es.js:","\t36: \t\t\t'errNotFile'           : 'El objeto no es un archivo.',","\t44: \t\t\t'errFileNotFound'      : 'Archivo no encontrado.',","\t48: \t\t\t'errMkfile'            : 'No se puede crear el archivo \"$1\".',","\t54: \t\t\t'errUploadNoFiles'     : 'No hay archivos para subir.',","\t56: \t\t\t'errFileMaxSize'       : 'El tamaño del archivo excede el máximo permitido.',","\t75: \t\t\t'errFtpDownloadFile'   : 'No se ha podido descargar el archivo desde FTP: \"$1\"',","\t76: \t\t\t'errFtpUploadFile'     : 'No se ha podido cargar el archivo a FTP: \"$1\"',","\t86: \t\t\t'errUploadFile'        : 'No se ha podido cargar \"$1\".',","\t98: \t\t\t'cmdgetfile'   : 'Seleccionar archivos',","\t103: \t\t\t'cmdmkfile'    : 'Nuevo archivo de texto',","\t125: \t\t\t'ntffile'     : 'Abrir archivo',","\t128: \t\t\t'ntfmkfile'   : 'Creando archivos',","\t176: \t\t\t'selectfiles'     : 'Seleccionar archivo(s)',","\t177: \t\t\t'selectffile'     : 'Seleccionar primer archivo',","\t178: \t\t\t'selectlfile'     : 'Seleccionar último archivo',","\t187: \t\t\t'files'           : 'Archivos',","\t215: \t\t\t'dropFiles'       : 'Arrastre archivos aquí',","\t218: \t\t\t'moveFiles'       : 'Mover archivos',","\t219: \t\t\t'copyFiles'       : 'Copiar archivos',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.fa.js:","\t36: \t\t\t'errNotFile'           : 'شی به صورت فایل نمی باشد .',","\t44: \t\t\t'errFileNotFound'      : 'فایل مورد نظر شما یافت نشد .',","\t48: \t\t\t'errMkfile'            : 'قادر به ابجاد نمودن فایلی با نبم \"$1\" نمی باشد .',","\t54: \t\t\t'errUploadNoFiles'     : 'هیچ فایلی برای بارگذاری یافت نشد .',","\t56: \t\t\t'errFileMaxSize'       : 'حجم فایل بیشتر از حد مجاز تعیین شده است .',","\t85: \t\t\t'cmdgetfile'   : 'انتخاب فایل ها',","\t90: \t\t\t'cmdmkfile'    : 'فایل متنی جدید',","\t115: \t\t\t'ntffile'     : 'باز نمدن فایل',","\t118: \t\t\t'ntfmkfile'   : 'ساختن فایل',","\t201: \t\t\t'selectfiles'     : 'انتخاب یکی یا همه فایل ها',","\t202: \t\t\t'selectffile'     : 'انتخاب اولین فایل',","\t203: \t\t\t'selectlfile'     : 'انتخاب آخرین فایل',","\t212: \t\t\t'files'           : 'فایل ها',","\t240: \t\t\t'dropFiles'       : 'فایل های خود را در این محل رها نمایید .',","\t243: \t\t\t'moveFiles'       : 'انتقال فایل ها',","\t244: \t\t\t'copyFiles'       : 'کپی فایل ها',","\t247: \t\t\t'untitled file.txt' : 'فایل متنی بدون نام',","\t275: \t\t\t'kindTorrent'     : 'Bittorrent file',","\t282: \t\t\t'kindJAR'         : 'Java JAR file',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.fr.js:","\t37: \t\t\t'errNotFile'           : 'Cet objet n\\'est pas un fichier.',","\t45: \t\t\t'errFileNotFound'      : 'Fichier non trouvé.',","\t49: \t\t\t'errMkfile'            : 'impossible de créer le fichier \"$1\".',","\t54: \t\t\t'errUploadFile'        : 'Impossible d\\'envoyer \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : 'Aucun fichier à envoyer.',","\t57: \t\t\t'errUploadFileSize'    : 'Le fichier dépasse la taille maximale allouée.',","\t83: \t\t\t'errFtpDownloadFile'   : 'Impossible de télécharger le file depuis l\\'accès FTP : \"$1\"',","\t84: \t\t\t'errFtpUploadFile'     : 'Impossible d\\'envoyer le fichier vers l\\'accès FTP : \"$1\"',","\t88: \t\t\t'errUploadFile'        : 'Envoi impossible de \"$1\"',","\t100: \t\t\t'cmdgetfile'   : 'Sélectionner les fichiers',","\t105: \t\t\t'cmdmkfile'    : 'Nouveau fichier texte',","\t131: \t\t\t'ntffile'     : 'Ouvrir le fichier',","\t134: \t\t\t'ntfmkfile'   : 'Création des fichiers',","\t189: \t\t\t'selectfiles'     : 'Sélectionner le(s) fichier(s)',","\t190: \t\t\t'selectffile'     : 'Sélectionner le premier fichier',","\t191: \t\t\t'selectlfile'     : 'Sélectionner le dernier fichier',","\t200: \t\t\t'files'           : 'Fichiers',","\t228: \t\t\t'dropFiles'       : 'Déposez les fichiers ici',","\t231: \t\t\t'moveFiles'       : 'Déplacer les fichiers',","\t232: \t\t\t'copyFiles'       : 'Copier les fichiers',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.hu.js:","\t35: \t\t\t'errNotFile'           : 'Object is not a file.',","\t40: \t\t\t'errExists'            : 'File named \"$1\" already exists.',","\t41: \t\t\t'errInvName'           : 'Invalid file name.',","\t43: \t\t\t'errFileNotFound'      : 'File not found.',","\t45: \t\t\t'errPopup'             : 'Browser prevented opening popup window. To open file enable it in browser options.',","\t47: \t\t\t'errMkfile'            : 'Unable to create file \"$1\".',","\t49: \t\t\t'errCopyFrom'          : 'Copying files from volume \"$1\" not allowed.',","\t50: \t\t\t'errCopyTo'            : 'Copying files to volume \"$1\" not allowed.',","\t53: \t\t\t'errUploadNoFiles'     : 'No files found for upload.',","\t55: \t\t\t'errFileMaxSize'       : 'File exceeds maximum allowed size.',","\t56: \t\t\t'errUploadMime'        : 'File type not allowed.',","\t63: \t\t\t'errExtract'           : 'Unable to extract files from \"$1\".',","\t66: \t\t\t'errNoArchive'         : 'File is not archive or has unsupported archive type.',","\t79: \t\t\t'cmdgetfile'   : 'Fájlok kijelölése',","\t84: \t\t\t'cmdmkfile'    : 'Új szöveges dokumentum',","\t106: \t\t\t'ntffile'     : 'Fájl megnyitás',","\t109: \t\t\t'ntfmkfile'   : 'Creating files',","\t113: \t\t\t'ntfprepare'  : 'Prepare to copy files',","\t143: \t\t\t'confirmRepl'     : 'Replace old file with new one?',","\t156: \t\t\t'selectfiles'     : 'Fájlok kijelölése',","\t157: \t\t\t'selectffile'     : 'Első fájl kijelölése',","\t158: \t\t\t'selectlfile'     : 'Utolsó fájl kijelölése',","\t167: \t\t\t'files'           : 'Fájlok',","\t178: \t\t\t'webfm'           : 'Web file manager',","\t195: \t\t\t'dropFiles'       : 'Fájlok dobása ide',","\t198: \t\t\t'moveFiles'       : 'Fájlok áthelyezése',","\t199: \t\t\t'copyFiles'       : 'Fájlok másolása',","\t268: \t\t\t'kindVideo'       : 'Film',","\t269: \t\t\t'kindVideoDV'     : 'DV film',","\t270: \t\t\t'kindVideoMPEG'   : 'MPEG film',","\t271: \t\t\t'kindVideoMPEG4'  : 'MPEG-4 film',","\t272: \t\t\t'kindVideoAVI'    : 'AVI film',","\t273: \t\t\t'kindVideoMOV'    : 'Quick Time film',","\t274: \t\t\t'kindVideoWM'     : 'Windows Media film',","\t275: \t\t\t'kindVideoFlash'  : 'Flash film',","\t276: \t\t\t'kindVideoMKV'    : 'Matroska film',","\t277: \t\t\t'kindVideoOGG'    : 'Ogg film'","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.it.js:","\t37: \t\t\t'errNotFile'           : 'L\\'oggetto non è un file.',","\t42: \t\t\t'errExists'            : 'Il file \"$1\" è già esistente.',","\t43: \t\t\t'errInvName'           : 'Nome file non valido.',","\t45: \t\t\t'errFileNotFound'      : 'File non trovato.',","\t47: \t\t\t'errPopup'             : 'Il tuo Browser non consente di aprire finestre di pop-up. Per aprire il file abilita questa opzione nelle impostazioni del tuo Browser.',","\t49: \t\t\t'errMkfile'            : 'Impossibile creare il file \"$1\".',","\t51: \t\t\t'errCopyFrom'          : 'Non è possibile copiare file da \"$1\".',","\t52: \t\t\t'errCopyTo'            : 'Non è possibile copiare file in \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : 'Non sono stati specificati file da caricare.',","\t56: \t\t\t'errMaxSize'           : 'La dimensione totale dei file supera il limite massimo consentito.',","\t57: \t\t\t'errFileMaxSize'       : 'Le dimensioni del file superano il massimo consentito.',","\t58: \t\t\t'errUploadMime'        : 'FileType non consentito.',","\t59: \t\t\t'errUploadTransfer'    : 'Trasferimento errato del file \"$1\".', ","\t65: \t\t\t'errExtract'           : 'Impossibile estrarre file da \"$1\".',","\t68: \t\t\t'errNoArchive'         : 'Il file non è un archivio o contiene file non supportati.',","\t74: \t\t\t'errUsupportType'      : 'FileType non supportato.',","\t83: \t\t\t'cmdedit'      : 'Modifica File',","\t86: \t\t\t'cmdgetfile'   : 'Seleziona File',","\t91: \t\t\t'cmdmkfile'    : 'Nuovo file di testo',","\t98: \t\t\t'cmdsearch'    : 'Ricerca file',","\t100: \t\t\t'cmdupload'    : 'Carica File',","\t116: \t\t\t'ntffile'     : 'Apri file',","\t119: \t\t\t'ntfmkfile'   : 'Creazione dei files in corso',","\t120: \t\t\t'ntfrm'       : 'Cancellazione files in corso',","\t121: \t\t\t'ntfcopy'     : 'Copia file in corso',","\t122: \t\t\t'ntfmove'     : 'Spostamento file in corso',","\t123: \t\t\t'ntfprepare'  : 'Inizializzando la copia dei file.',","\t124: \t\t\t'ntfrename'   : 'Sto rinominando i file',","\t125: \t\t\t'ntfupload'   : 'Caricamento file in corso',","\t126: \t\t\t'ntfdownload' : 'Downloading file in corso',","\t127: \t\t\t'ntfsave'     : 'Salvataggio file in corso',","\t129: \t\t\t'ntfextract'  : 'Estrazione file dall\\'archivio in corso',","\t130: \t\t\t'ntfsearch'   : 'Ricerca files in corso',","\t188: \t\t\t'confirmRm'       : 'Sei sicuro di voler rimuovere i file?<br />L\\'operazione non è reversibile!',","\t189: \t\t\t'confirmRepl'     : 'Sostituire i file ?',","\t201: \t\t\t'selectall'       : 'Seleziona tutti i file',","\t202: \t\t\t'selectfiles'     : 'Seleziona file',","\t203: \t\t\t'selectffile'     : 'Seleziona il primo file',","\t204: \t\t\t'selectlfile'     : 'Seleziona l\\'ultimo file',","\t213: \t\t\t'files'           : 'File',","\t224: \t\t\t'webfm'           : 'Web file manager',","\t241: \t\t\t'dropFiles'       : 'Trascina i file qui',","\t243: \t\t\t'selectForUpload' : 'Seleziona file da caricare',","\t244: \t\t\t'moveFiles'       : 'Sposta file',","\t245: \t\t\t'copyFiles'       : 'Copia file',","\t248: \t\t\t'untitled file.txt' : 'file senza titolo.txt',","\t276: \t\t\t'kindTorrent'     : 'File Bittorrent',","\t283: \t\t\t'kindJAR'         : 'File Java JAR',","\t290: \t\t\t'kindPHP'         : 'File PHP',","\t291: \t\t\t'kindCSS'         : 'File CSS (Cascading Style Sheet)',","\t293: \t\t\t'kindJS'          : 'File Javascript',","\t294: \t\t\t'kindRTF'         : 'File RTF (Rich Text Format)',","\t295: \t\t\t'kindC'           : 'File C',","\t296: \t\t\t'kindCHeader'     : 'File C (header)',","\t297: \t\t\t'kindCPP'         : 'File C++',","\t298: \t\t\t'kindCPPHeader'   : 'File C++ (header)',","\t300: \t\t\t'kindPython'      : 'File Python',","\t301: \t\t\t'kindJava'        : 'File Java',","\t302: \t\t\t'kindRuby'        : 'File Ruby',","\t303: \t\t\t'kindPerl'        : 'File Perl',","\t304: \t\t\t'kindSQL'         : 'File SQL',","\t305: \t\t\t'kindXML'         : 'File XML',","\t306: \t\t\t'kindAWK'         : 'File AWK',","\t307: \t\t\t'kindCSV'         : 'File CSV (Comma separated values)',","\t308: \t\t\t'kindDOCBOOK'     : 'File Docbook XML',","\t321: \t\t\t'kindAudio'       : 'File Audio',","\t328: \t\t\t'kindVideo'       : 'File Video',","\t329: \t\t\t'kindVideoDV'     : 'Filmato DV',","\t330: \t\t\t'kindVideoMPEG'   : 'Filmato MPEG',","\t331: \t\t\t'kindVideoMPEG4'  : 'Filmato MPEG-4',","\t332: \t\t\t'kindVideoAVI'    : 'Filmato AVI',","\t333: \t\t\t'kindVideoMOV'    : 'Filmato Quick Time',","\t334: \t\t\t'kindVideoWM'     : 'Filmato Windows Media',","\t335: \t\t\t'kindVideoFlash'  : 'Filmato Flash',","\t336: \t\t\t'kindVideoMKV'    : 'Filmato Matroska',","\t337: \t\t\t'kindVideoOGG'    : 'Filmato Ogg'","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.jp.js:","\t38: \t\t\t'errNotFile'           : 'オブジェクトがファイルではありません',","\t46: \t\t\t'errFileNotFound'      : 'ファイルが見つかりません',","\t50: \t\t\t'errMkfile'            : '\"$1\"ファイルを作成することができません',","\t55: \t\t\t'errUploadFile'        : '\"$1\"がアップロードできません', // old name - errUpload","\t56: \t\t\t'errUploadNoFiles'     : 'アップロードされたファイルがありません',","\t58: \t\t\t'errUploadFileSize'    : 'ファイルが許容サイズを超えています', //  old name - errFileMaxSize","\t68: \t\t\t'errRmSrc'             : 'Unable remove source file(s).',","\t90: \t\t\t'errFtpDownloadFile'   : 'FTP からファイルをダウンロードできません：\"$1\"',","\t91: \t\t\t'errFtpUploadFile'     : 'FTP へファイルをアップロードできません：\"$1\"',","\t106: \t\t\t'cmdgetfile'   : 'ファイル選択',","\t111: \t\t\t'cmdmkfile'    : '新規テキストファイル',","\t137: \t\t\t'ntffile'     : 'ファイルを開いています',","\t140: \t\t\t'ntfmkfile'   : 'ファイルを作成しています',","\t198: \t\t\t'selectfiles'     : 'ファイル選択',","\t199: \t\t\t'selectffile'     : '最初のファイルを選択',","\t200: \t\t\t'selectlfile'     : '最後のファイルを選択',","\t209: \t\t\t'files'           : 'ファイル',","\t237: \t\t\t'dropFiles'       : 'ここにファイルをドロップ',","\t240: \t\t\t'moveFiles'       : 'ファイルを移動',","\t241: \t\t\t'copyFiles'       : 'ファイルをコピー',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.ko.js:","\t37: \t\t\t'errNotFile'           : '파일이 아닙니다',","\t45: \t\t\t'errFileNotFound'      : '파일을 찾을 수 없습니다',","\t49: \t\t\t'errMkfile'            : ' \"$1\" 파일을 생성할 수 없습니다',","\t55: \t\t\t'errUploadNoFiles'     : '업로드할 파일이 없습니다',","\t57: \t\t\t'errFileMaxSize'       : '파일이 허용된 최대크기를 초과하였습니다',","\t86: \t\t\t'cmdgetfile'   : '선택',","\t91: \t\t\t'cmdmkfile'    : '새 텍스트파일',","\t116: \t\t\t'ntffile'     : '파일 열기',","\t119: \t\t\t'ntfmkfile'   : '파일 생성',","\t202: \t\t\t'selectfiles'     : '파일 선택',","\t203: \t\t\t'selectffile'     : '첫번째 파일 선택',","\t204: \t\t\t'selectlfile'     : '마지막 파일 선택',","\t213: \t\t\t'files'           : '파일',","\t241: \t\t\t'dropFiles'       : '여기로 이동하기',","\t244: \t\t\t'moveFiles'       : '파일 이동',","\t245: \t\t\t'copyFiles'       : '파일 복사',","\t248: \t\t\t'untitled file.txt' : '새 텍스트.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.LANG.js:","\t3:  * use this file to create new translation","\t44: \t\t\t'errNotFile'           : 'Object is not a file.',","\t49: \t\t\t'errExists'            : 'File named \"$1\" already exists.',","\t50: \t\t\t'errInvName'           : 'Invalid file name.',","\t52: \t\t\t'errFileNotFound'      : 'File not found.',","\t54: \t\t\t'errPopup'             : 'Browser prevented opening popup window. To open file enable it in browser options.',","\t56: \t\t\t'errMkfile'            : 'Unable to create file \"$1\".',","\t58: \t\t\t'errCopyFrom'          : 'Copying files from volume \"$1\" not allowed.',","\t59: \t\t\t'errCopyTo'            : 'Copying files to volume \"$1\" not allowed.',","\t62: \t\t\t'errUploadNoFiles'     : 'No files found for upload.',","\t64: \t\t\t'errFileMaxSize'       : 'File exceeds maximum allowed size.',","\t65: \t\t\t'errUploadMime'        : 'File type not allowed.',","\t72: \t\t\t'errExtract'           : 'Unable to extract files from \"$1\".',","\t75: \t\t\t'errNoArchive'         : 'File is not archive or has unsupported archive type.',","\t78: \t\t\t'errArcSymlinks'       : 'For security reason denied to unpack archives contains symlinks or files with not allowed names.', // edited 24.06.2012","\t79: \t\t\t'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t81: \t\t\t'errUsupportType'      : 'Unsupported file type.',","\t82: \t\t\t'errNotUTF8Content'    : 'File \"$1\" is not in UTF-8 and cannot be edited.',  // added 9.11.2011","\t94: \t\t\t'cmdedit'      : 'Edit file',","\t95: \t\t\t'cmdextract'   : 'Extract files from archive',","\t97: \t\t\t'cmdgetfile'   : 'Select files',","\t102: \t\t\t'cmdmkfile'    : 'New text file',","\t109: \t\t\t'cmdsearch'    : 'Find files',","\t111: \t\t\t'cmdupload'    : 'Upload files',","\t127: \t\t\t'ntffile'     : 'Open file',","\t130: \t\t\t'ntfmkfile'   : 'Creating files',","\t131: \t\t\t'ntfrm'       : 'Delete files',","\t132: \t\t\t'ntfcopy'     : 'Copy files',","\t133: \t\t\t'ntfmove'     : 'Move files',","\t134: \t\t\t'ntfprepare'  : 'Prepare to copy files',","\t135: \t\t\t'ntfrename'   : 'Rename files',","\t136: \t\t\t'ntfupload'   : 'Uploading files',","\t137: \t\t\t'ntfdownload' : 'Downloading files',","\t138: \t\t\t'ntfsave'     : 'Save files',","\t140: \t\t\t'ntfextract'  : 'Extracting files from archive',","\t141: \t\t\t'ntfsearch'   : 'Searching files',","\t197: \t\t\t'confirmRm'       : 'Are you sure you want to remove files?<br/>This cannot be undone!',","\t198: \t\t\t'confirmRepl'     : 'Replace old file with new one?',","\t210: \t\t\t'selectall'       : 'Select all files',","\t211: \t\t\t'selectfiles'     : 'Select file(s)',","\t212: \t\t\t'selectffile'     : 'Select first file',","\t213: \t\t\t'selectlfile'     : 'Select last file',","\t222: \t\t\t'files'           : 'Files',","\t233: \t\t\t'webfm'           : 'Web file manager',","\t250: \t\t\t'dropFiles'       : 'Drop files here',","\t252: \t\t\t'selectForUpload' : 'Select files to upload',","\t253: \t\t\t'moveFiles'       : 'Move files',","\t254: \t\t\t'copyFiles'       : 'Copy files',","\t257: \t\t\t'untitled file.txt' : 'untitled file.txt',","\t290: \t\t\t'kindTorrent'     : 'Bittorrent file',","\t297: \t\t\t'kindJAR'         : 'Java JAR file',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.nl.js:","\t37: \t\t\t'errNotFile'           : 'Object is geen bestand.',","\t45: \t\t\t'errFileNotFound'      : 'Bestand niet gevonden.',","\t49: \t\t\t'errMkfile'            : 'Kan bestand \"$1\" niet aanmaken.',","\t55: \t\t\t'errUploadNoFiles'     : 'Geen bestanden gevonden om te uploaden.',","\t57: \t\t\t'errFileMaxSize'       : 'Bestand overschrijdt de maximale grootte.',","\t82: \t\t\t'errFtpDownloadFile'   : 'Kan het bestand niet downloaden vanaf FTP: \"$1\"',","\t83: \t\t\t'errFtpUploadFile'     : 'Kan het bestand niet uploaden naar FTP: \"$1\"',","\t87: \t\t\t'errUploadFile'        : 'Kan \"$1\" niet uploaden',","\t99: \t\t\t'cmdgetfile'   : 'Kies bestanden',","\t104: \t\t\t'cmdmkfile'    : 'Nieuw tekstbestand',","\t131: \t\t\t'ntffile'     : 'Bezig met openen bestand',","\t134: \t\t\t'ntfmkfile'   : 'Bezig met Bestanden maken',","\t216: \t\t\t'selectfiles'     : 'Selecteer bestand(en)',","\t217: \t\t\t'selectffile'     : 'Selecteer eerste bestand',","\t218: \t\t\t'selectlfile'     : 'Selecteer laatste bestand',","\t227: \t\t\t'files'           : 'Bestanden',","\t255: \t\t\t'dropFiles'       : 'Sleep hier uw bestanden heen',","\t258: \t\t\t'moveFiles'       : 'Verplaats bestanden',","\t259: \t\t\t'copyFiles'       : 'Kopieer bestanden',","\t262: \t\t\t'untitled file.txt' : 'nieuw bestand.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.no.js:","\t35: \t\t\t'errNotFile'           : 'Objektet er ikke en fil.',","\t40: \t\t\t'errExists'            : 'Filen \"$1\" finnes allerede.',","\t41: \t\t\t'errInvName'           : 'Ugyldig filnavn.',","\t43: \t\t\t'errFileNotFound'      : 'Filen finnes ikke.',","\t45: \t\t\t'errPopup'             : 'Nettleseren din blokkerte et pop-up vindu. For å åpne filen må du aktivere pop-up i din nettlesers innstillinger.',","\t47: \t\t\t'errMkfile'            : 'Kunne ikke opprette filen \"$1\".',","\t49: \t\t\t'errCopyFrom'          : 'Kopiere filer fra \"$1\" er ikke tillatt.',","\t50: \t\t\t'errCopyTo'            : 'Kopiere filer til \"$1\" er ikke tillatt.',","\t53: \t\t\t'errUploadNoFiles'     : 'Ingen filer funnet til opplasting.',","\t55: \t\t\t'errFileMaxSize'       : 'Filen vergår maksimum tillatt størrelse.',","\t56: \t\t\t'errUploadMime'        : 'Filtypen ikke tillatt.',","\t63: \t\t\t'errExtract'           : 'Kunne ikke pakke ut filer fra \"$1\".',","\t66: \t\t\t'errNoArchive'         : 'Filen er ikke et arkiv eller et arkiv som ikke er støttet.',","\t76: \t\t\t'cmdedit'      : 'Rediger fil',","\t77: \t\t\t'cmdextract'   : 'Pakk ut filer fra arkiv',","\t79: \t\t\t'cmdgetfile'   : 'Velg filer',","\t84: \t\t\t'cmdmkfile'    : 'Ny tekst-fil',","\t91: \t\t\t'cmdsearch'    : 'Find filer',","\t93: \t\t\t'cmdupload'    : 'Last opp filer',","\t106: \t\t\t'ntffile'     : 'Åpne fil',","\t109: \t\t\t'ntfmkfile'   : 'Oppretter filer',","\t110: \t\t\t'ntfrm'       : 'Sletter filer',","\t111: \t\t\t'ntfcopy'     : 'Kopierer filer',","\t112: \t\t\t'ntfmove'     : 'Flytter filer',","\t113: \t\t\t'ntfprepare'  : 'Gjør klar til kopiering av filer',","\t114: \t\t\t'ntfrename'   : 'Gir nytt navn til filer',","\t115: \t\t\t'ntfupload'   : 'Laster opp filer',","\t116: \t\t\t'ntfdownload' : 'Laster ned filer',","\t117: \t\t\t'ntfsave'     : 'Lagrer filer',","\t119: \t\t\t'ntfextract'  : 'Pakker ut filer fra arkiv',","\t120: \t\t\t'ntfsearch'   : 'Søker i filer',","\t142: \t\t\t'confirmRm'       : 'Er du sikker på at du ønsker å slette filene?',","\t143: \t\t\t'confirmRepl'     : 'Erstatt fil?',","\t155: \t\t\t'selectall'       : 'Velg alle filene',","\t156: \t\t\t'selectfiles'     : 'Velg fil(er)',","\t157: \t\t\t'selectffile'     : 'Velg første fil',","\t158: \t\t\t'selectlfile'     : 'Velg siste fil',","\t167: \t\t\t'files'           : 'Filer',","\t174: \t\t\t'selected'        : 'valgte filer',","\t178: \t\t\t'webfm'           : 'Web-filbehandler',","\t195: \t\t\t'dropFiles'       : 'Slipp filer her',","\t197: \t\t\t'selectForUpload' : 'Velg filer til opplasting',","\t198: \t\t\t'moveFiles'       : 'Flytt filer',","\t199: \t\t\t'copyFiles'       : 'Kopier filer',","\t207: \t\t\t'kindApp'         : 'Programfil',","\t216: \t\t\t'kindTorrent'     : 'Bittorrent file',","\t223: \t\t\t'kindJAR'         : 'Java JAR file',","\t269: \t\t\t'kindVideoDV'     : 'DV film',","\t270: \t\t\t'kindVideoMPEG'   : 'MPEG film',","\t271: \t\t\t'kindVideoMPEG4'  : 'MPEG-4 film',","\t272: \t\t\t'kindVideoAVI'    : 'AVI film',","\t273: \t\t\t'kindVideoMOV'    : 'Quick Time film',","\t274: \t\t\t'kindVideoWM'     : 'Windows Media film',","\t275: \t\t\t'kindVideoFlash'  : 'Flash film',","\t276: \t\t\t'kindVideoMKV'    : 'Matroska film',","\t277: \t\t\t'kindVideoOGG'    : 'Ogg film'","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.pl.js:","\t38: \t\t\t'errNotFile'           : 'Obiekt nie jest plikiem.',","\t46: \t\t\t'errFileNotFound'      : 'Plik nie został znaleziony.',","\t50: \t\t\t'errMkfile'            : 'Nie można utworzyć pliku \"$1\".',","\t56: \t\t\t'errUploadNoFiles'     : 'Nie znaleziono plików do wysłania.',","\t58: \t\t\t'errFileMaxSize'       : 'Plik przekracza dopuszczalny rozmiar.',","\t87: \t\t\t'cmdgetfile'   : 'Wybierz pliki',","\t92: \t\t\t'cmdmkfile'    : 'Nowy plik tekstowy',","\t117: \t\t\t'ntffile'     : 'Otwórz plik',","\t120: \t\t\t'ntfmkfile'   : 'Tworzenie plików',","\t204: \t\t\t'selectfiles'     : 'Zaznacz plik(i)',","\t205: \t\t\t'selectffile'     : 'Zaznacz pierwszy plik',","\t206: \t\t\t'selectlfile'     : 'Zaznacz ostatni plik',","\t215: \t\t\t'files'           : 'Pliki',","\t243: \t\t\t'dropFiles'       : 'Upuść pliki tutaj',","\t246: \t\t\t'moveFiles'       : 'Przenieś pliki',","\t247: \t\t\t'copyFiles'       : 'Kopiuj pliki',","\t250: \t\t\t'untitled file.txt' : 'nowy plik.txt',","\t286: \t\t\t'kindJAR'         : 'Java JAR file',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.pt_BR.js:","\t37: \t\t\t'errNotFile'           : 'Objeto não é um arquivo.',","\t45: \t\t\t'errFileNotFound'      : 'Arquivo não encontrado.',","\t49: \t\t\t'errMkfile'            : 'Incapaz de criar o arquivo \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : 'Não foi encontrado nenhum arquivo para upload.',","\t57: \t\t\t'errFileMaxSize'       : 'Arquivo excede o tamanho máximo permitido.',","\t77: \t\t\t'errFtpDownloadFile'   : 'Não foi possível fazer o download do arquivo do FTP: \"$1\"',","\t78: \t\t\t'errFtpUploadFile'     : 'Não foi possível fazer o upload do arquivo para o FTP: \"$1\"',","\t88: \t\t\t'errUploadFile'        : 'Não foi possível fazer o upload \"$1\".',","\t100: \t\t\t'cmdgetfile'   : 'Selecionar arquivos',","\t105: \t\t\t'cmdmkfile'    : 'Novo arquivo de texto',","\t131: \t\t\t'ntffile'     : 'Abrir arquivo',","\t134: \t\t\t'ntfmkfile'   : 'Criar arquivos',","\t190: \t\t\t'selectfiles'     : 'Selecionar arquivo(s)',","\t191: \t\t\t'selectffile'     : 'Selecionar primeiro arquivo',","\t192: \t\t\t'selectlfile'     : 'Slecionar último arquivo',","\t201: \t\t\t'files'           : 'Arquivos',","\t229: \t\t\t'dropFiles'       : 'Solte os arquivos aqui',","\t232: \t\t\t'moveFiles'       : 'Mover arquivos',","\t233: \t\t\t'copyFiles'       : 'Copiar arquivos',","\t320: \t\t\t'kindVideoDV'     : 'DV filme',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.ru.js:","\t37: \t\t\t'errNotFile'           : 'Объект не является файлом.',","\t45: \t\t\t'errFileNotFound'      : 'Файл не найден.',","\t49: \t\t\t'errMkfile'            : 'Ошибка создания файла \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : 'Отсутствуют загруженые файлы.',","\t57: \t\t\t'errFileMaxSize'       : 'Размер файла превышает допустимый.',","\t82: \t\t\t'errFtpDownloadFile'   : 'Ошибка при скачивании файла с FTP: \"$1\"',","\t83: \t\t\t'errFtpUploadFile'     : 'Ошибка при загрузке файла на FTP: \"$1\"',","\t88: \t\t\t'errUploadFile'        : 'Невозможно загрузить файл \"$1\"',","\t101: \t\t\t'cmdgetfile'   : 'Выбрать',","\t106: \t\t\t'cmdmkfile'    : 'Новый файл',","\t131: \t\t\t'ntffile'     : 'Открытие файла',","\t134: \t\t\t'ntfmkfile'   : 'Создание файла',","\t215: \t\t\t'selectfiles'     : 'Выбрать файл(ы)',","\t216: \t\t\t'selectffile'     : 'Выбрать первый файл',","\t217: \t\t\t'selectlfile'     : 'Выбрать последний файл',","\t226: \t\t\t'files'           : 'Файлы',","\t254: \t\t\t'dropFiles'       : 'Бросить файлы',","\t257: \t\t\t'moveFiles'       : 'Перемещение файлов',","\t258: \t\t\t'copyFiles'       : 'Копирование файлов',","\t261: \t\t\t'untitled file.txt' : 'новый файл.txt',","\t355: \t\t\t,'volume_files' : 'Файлы '","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.sl.js:","\t37: \t\t\t'errNotFile'           : 'Objekt ni datoteka.',","\t45: \t\t\t'errFileNotFound'      : 'Datoteke nisem našel.',","\t49: \t\t\t'errMkfile'            : 'Ni možno dodati datoteke \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : 'Ni datotek za nalaganje (upload).',","\t57: \t\t\t'errFileMaxSize'       : 'Datoteka presega največjo dovoljeno velikost.',","\t86: \t\t\t'cmdgetfile'   : 'Izberi datoteke',","\t91: \t\t\t'cmdmkfile'    : 'Nova datoteka',","\t116: \t\t\t'ntffile'     : 'Odpri datoteko',","\t119: \t\t\t'ntfmkfile'   : 'Ustvarjam datoteke',","\t202: \t\t\t'selectfiles'     : 'Izberi datotek(o)e',","\t203: \t\t\t'selectffile'     : 'Izberi prvo datoteko',","\t204: \t\t\t'selectlfile'     : 'Izberi zadnjo datoteko',","\t213: \t\t\t'files'           : 'Datoteke',","\t241: \t\t\t'dropFiles'       : 'Datoteke spusti tukaj',","\t244: \t\t\t'moveFiles'       : 'Premakni datoteke',","\t245: \t\t\t'copyFiles'       : 'Kopiraj datoteke',","\t248: \t\t\t'untitled file.txt' : 'brez imena file.txt',","\t329: \t\t\t'kindVideoDV'     : 'DV film',","\t330: \t\t\t'kindVideoMPEG'   : 'MPEG film',","\t331: \t\t\t'kindVideoMPEG4'  : 'MPEG-4 film',","\t332: \t\t\t'kindVideoAVI'    : 'AVI film',","\t333: \t\t\t'kindVideoMOV'    : 'Quick Time film',","\t334: \t\t\t'kindVideoWM'     : 'Windows Media film',","\t335: \t\t\t'kindVideoFlash'  : 'Flash film',","\t336: \t\t\t'kindVideoMKV'    : 'Matroska film',","\t337: \t\t\t'kindVideoOGG'    : 'Ogg film'","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.sv.js:","\t37: \t\t\t'errNotFile'           : 'Objektet är inte en fil.',","\t42: \t\t\t'errExists'            : 'Fil med namn \"$1\" finns redan.',","\t43: \t\t\t'errInvName'           : 'Ogiltigt filnamn.',","\t45: \t\t\t'errFileNotFound'      : 'Filen hittades inte.',","\t47: \t\t\t'errPopup'             : 'Webbläsaren hindrade popup-fönstret att öppnas. Ändra i webbläsarens inställningar för att kunna öppna filen.',","\t49: \t\t\t'errMkfile'            : 'Kan inte skapa filen \"$1\".',","\t51: \t\t\t'errCopyFrom'          : 'Kopiera filer från volym \"$1\" tillåts inte.',","\t52: \t\t\t'errCopyTo'            : 'Kopiera filer till volym \"$1\" tillåts inte.',","\t55: \t\t\t'errUploadNoFiles'     : 'Inga filer hittades för uppladdning.',","\t57: \t\t\t'errFileMaxSize'       : 'Filen överskrider den högsta tillåtna storleken.',","\t58: \t\t\t'errUploadMime'        : 'Otillåten filtyp.',","\t65: \t\t\t'errExtract'           : 'Kan inte packa upp filen från \"$1\".',","\t68: \t\t\t'errNoArchive'         : 'Filen är inte av typen arkiv.',","\t71: \t\t\t'errArcSymlinks'       : 'Av säkerhetsskäl nekas arkivet att packas upp då det innehåller symboliska länkar eller filer med ej tillåtna namn.', // edited 24.06.2012","\t72: \t\t\t'errArcMaxSize'        : 'Arkivfiler överskrider största tillåtna storlek.',","\t74: \t\t\t'errUsupportType'      : 'Filtypen stöds inte.',","\t75: \t\t\t'errNotUTF8Content'    : 'Filen \"$1\" är inte i UTF-8 och kan inte redigeras.',  // added 9.11.2011","\t87: \t\t\t'cmdedit'      : 'Redigera fil',","\t88: \t\t\t'cmdextract'   : 'Extrahera filer från arkiv',","\t90: \t\t\t'cmdgetfile'   : 'Välj filer',","\t95: \t\t\t'cmdmkfile'    : 'Ny textfil',","\t102: \t\t\t'cmdsearch'    : 'Hitta filer',","\t104: \t\t\t'cmdupload'    : 'Ladda upp filer',","\t120: \t\t\t'ntffile'     : 'Öppnar fil',","\t123: \t\t\t'ntfmkfile'   : 'Skapar fil',","\t124: \t\t\t'ntfrm'       : 'Tar bort filer',","\t125: \t\t\t'ntfcopy'     : 'Kopierar filer',","\t126: \t\t\t'ntfmove'     : 'Flyttar filer',","\t127: \t\t\t'ntfprepare'  : 'Förbereder att flytta filer',","\t128: \t\t\t'ntfrename'   : 'Döper om filer',","\t129: \t\t\t'ntfupload'   : 'Laddar upp filer',","\t130: \t\t\t'ntfdownload' : 'Laddar ner filer',","\t131: \t\t\t'ntfsave'     : 'Sparar filer',","\t133: \t\t\t'ntfextract'  : 'Extraherar filer från arkiv',","\t134: \t\t\t'ntfsearch'   : 'Söker filer',","\t195: \t\t\t'confirmRm'       : 'Är du säker på att du vill ta bort filer? <br/> Detta kan inte ångras!',","\t196: \t\t\t'confirmRepl'     : 'Ersätt den gamla filen med en ny?',","\t208: \t\t\t'selectall'       : 'Välj alla filer',","\t209: \t\t\t'selectfiles'     : 'Välj fil(er)',","\t210: \t\t\t'selectffile'     : 'Välj första filen',","\t211: \t\t\t'selectlfile'     : 'Välj sista filen',","\t220: \t\t\t'files'           : 'Filer',","\t231: \t\t\t'webfm'           : 'Webbfilhanterare',","\t248: \t\t\t'dropFiles'       : 'Släpp filerna här',","\t250: \t\t\t'selectForUpload' : 'Välj filer att ladda upp',","\t251: \t\t\t'moveFiles'       : 'Flytta filer',","\t252: \t\t\t'copyFiles'       : 'Kopiera filer',","\t255: \t\t\t'untitled file.txt' : 'namnlös fil.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.tr.js:","\t37: \t\t\t'errNotFile'           : 'Obje Dosya değil.',","\t45: \t\t\t'errFileNotFound'      : 'Dosya bulunamadı.',","\t49: \t\t\t'errMkfile'            : '\"$1\" dosya oluşturulamadı.',","\t55: \t\t\t'errUploadNoFiles'     : 'Göndermek için dosya bulunamadı.',","\t57: \t\t\t'errFileMaxSize'       : 'Dosya izin verilen boyuttan büyük.',","\t86: \t\t\t'cmdgetfile'   : 'Dosyayı Seç',","\t91: \t\t\t'cmdmkfile'    : 'Yeni Boş Dosya',","\t116: \t\t\t'ntffile'     : 'Dosya Aç',","\t119: \t\t\t'ntfmkfile'   : 'Dosya Oluşturuluyor',","\t202: \t\t\t'selectfiles'     : 'Dosyaları Seç',","\t203: \t\t\t'selectffile'     : 'İlk Dosyayı Seç',","\t204: \t\t\t'selectlfile'     : 'Son Dosyayı Seç',","\t213: \t\t\t'files'           : 'Dosyalar',","\t241: \t\t\t'dropFiles'       : 'Dosyaları buraya sürükleyin',","\t244: \t\t\t'moveFiles'       : 'Dosyaları Taşı',","\t245: \t\t\t'copyFiles'       : 'Dosyaları Kopyala',","\t248: \t\t\t'untitled file.txt' : 'basliksiz_dosya.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.vi.js:","\t37:         'errNotFile'           : 'Object is not a file.',","\t42:         'errExists'            : 'File named \"$1\" already exists.',","\t43:         'errInvName'           : 'Invalid file name.',","\t45:         'errFileNotFound'      : 'File not found.',","\t47:         'errPopup'             : 'Browser prevented opening popup window. To open file enable it in browser options.',","\t49:         'errMkfile'            : 'Unable to create file \"$1\".',","\t51:         'errCopyFrom'          : 'Copying files from volume \"$1\" not allowed.',","\t52:         'errCopyTo'            : 'Copying files to volume \"$1\" not allowed.',","\t55:         'errUploadNoFiles'     : 'No files found for upload.',","\t57:         'errFileMaxSize'       : 'File exceeds maximum allowed size.',","\t58:         'errUploadMime'        : 'File type not allowed.',","\t65:         'errExtract'           : 'Unable to extract files from \"$1\".',","\t68:         'errNoArchive'         : 'File is not archive or has unsupported archive type.',","\t72:         'errArcMaxSize'        : 'Archive files exceeds maximum allowed size.',","\t74:         'errUsupportType'      : 'Unsupported file type.',","\t86:         'cmdgetfile'   : 'Chọn tập tin',","\t91:         'cmdmkfile'    : 'Tạo tập tin Text',","\t116:         'ntffile'     : 'Mở tập tin',","\t119:         'ntfmkfile'   : 'Tạo tập tin',","\t188:         'confirmRm'       : 'Are you sure you want to remove files?<br/>This cannot be undone!',","\t189:         'confirmRepl'     : 'Replace old file with new one?',","\t201:         'selectall'       : 'Select all files',","\t202:         'selectfiles'     : 'Select file(s)',","\t203:         'selectffile'     : 'Select first file',","\t204:         'selectlfile'     : 'Select last file',","\t213:         'files'           : 'Files',","\t224:         'webfm'           : 'Web file manager',","\t241:         'dropFiles'       : 'Drop files here',","\t243:         'selectForUpload' : 'Select files to upload',","\t244:         'moveFiles'       : 'Move files',","\t245:         'copyFiles'       : 'Copy files',","\t248:         'untitled file.txt' : 'untitled file.txt',","\t276:         'kindTorrent'     : 'Bittorrent file',","\t283:         'kindJAR'         : 'Java JAR file',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.zh_CN.js:","\t38: \t\t\t'errNotFile'           : '对象不是文件.',","\t46: \t\t\t'errFileNotFound'      : '未找到文件.',","\t50: \t\t\t'errMkfile'            : '不能创建文件 \"$1\".',","\t55: \t\t\t'errUploadFile'        : '无法上传 \"$1\".',","\t56: \t\t\t'errUploadNoFiles'     : '未找到要上传的文件.',","\t58: \t\t\t'errUploadFileSize'    : '文件超过了允许的最大大小.',","\t94: \t\t\t'cmdgetfile'   : '选择文件',","\t99: \t\t\t'cmdmkfile'    : '新建文本文件',","\t125: \t\t\t'ntffile'     : '打开文件',","\t128: \t\t\t'ntfmkfile'   : '创建文件',","\t213: \t\t\t'selectfiles'     : '选择文件',","\t214: \t\t\t'selectffile'     : '选择第一个文件',","\t215: \t\t\t'selectlfile'     : '选择最后一个文件',","\t224: \t\t\t'files'           : '文件',","\t252: \t\t\t'dropFiles'       : '把文件拖到这里',","\t255: \t\t\t'moveFiles'       : '移动文件',","\t256: \t\t\t'copyFiles'       : '复制文件',","\t259: \t\t\t'untitled file.txt' : '未命名文件.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/i18n/elfinder.zh_TW.js:","\t37: \t\t\t'errNotFile'           : '非檔案.',","\t45: \t\t\t'errFileNotFound'      : '未找到檔案.',","\t49: \t\t\t'errMkfile'            : '不能建立檔案 \"$1\".',","\t54: \t\t\t'errUploadFile'        : '無法上傳 \"$1\".',","\t55: \t\t\t'errUploadNoFiles'     : '未找到要上傳的檔案.',","\t57: \t\t\t'errUploadFileSize'    : '檔案超過了最大允許大小.',","\t93: \t\t\t'cmdgetfile'   : '選擇檔案',","\t98: \t\t\t'cmdmkfile'    : '建立文字檔案',","\t124: \t\t\t'ntffile'     : '打開檔案',","\t127: \t\t\t'ntfmkfile'   : '建立檔案',","\t212: \t\t\t'selectfiles'     : '選擇檔案',","\t213: \t\t\t'selectffile'     : '選擇第一個檔案',","\t214: \t\t\t'selectlfile'     : '選擇最後一個檔案',","\t223: \t\t\t'files'           : '檔案',","\t251: \t\t\t'dropFiles'       : '把檔案拖到此處',","\t254: \t\t\t'moveFiles'       : '移動檔案',","\t255: \t\t\t'copyFiles'       : '複製檔案',","\t258: \t\t\t'untitled file.txt' : '未命名檔案.txt',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/proxy/elFinderSupportVer1.js:","\t62: \t\t\t\topts.data.current = fm.file(opts.data.target).phash;","\t66: \t\t\t\topts.data.current = fm.file(opts.data.target).phash;","\t70: \t\t\t\topts.data.current = fm.file(opts.data.targets[0]).phash;","\t75: \t\t\t\topts.data.current = fm.file(opts.data.target).phash;","\t81: \t\t\t\t\t$.ajax($.extend(_opts, {data : {cmd : 'duplicate', target : hash, current : fm.file(hash).phash}}))","\t98: \t\t\tcase 'mkfile':","\t143: \t// \t'File not found'                                   : 'File not found.',","\t144: \t// \t'Invalid name'                                     : 'Invalid file name.',","\t145: \t// \t'File or folder with the same name already exists' : 'File named \"$1\" already exists in this location.',","\t146: \t// \t'Not allowed file type'                            : 'Not allowed file type.',","\t147: \t// \t'File exceeds the maximum allowed filesize'        : 'File exceeds maximum allowed size.',","\t150: \t// \t'Unable to extract files from archive'             : 'Unable to extract files from \"$1\".'","\t155: \t\t\tfiles = {}, ","\t156: \t\t\tfilter = function(file) { return file && file.hash && file.name && file.mime ? file : null; },","\t183: \t\t\tphash = this.fm.file(data.target.hash).phash;","\t184: \t\t\treturn {changed : [this.normalizeFile(data.target, phash)]};","\t190: \t\t\t$.each(this.normalizeTree(data.tree), function(i, file) {","\t191: \t\t\t\tfiles[file.hash] = file;","\t195: \t\t$.each(data.cdc||[], function(i, file) {","\t196: \t\t\tvar hash = file.hash;","\t198: \t\t\tif (files[hash]) {","\t199: \t\t\t\tfiles[hash].date   = file.date;","\t200: \t\t\t\tfiles[hash].locked = file.hash == phash ? true : file.rm === void(0) ? false : !file.rm;","\t202: \t\t\t\tfiles[hash] = self.normalizeFile(file, phash, data.tmb);","\t207: \t\t\t$.each(this.fm.files(), function(hash, file) {","\t208: \t\t\t\tif (!files[hash] && file.phash != phash && file.mime == 'directory') {","\t209: \t\t\t\t\tfiles[hash] = file;","\t216: \t\t\t\t\tcwd     : files[phash] || this.normalizeFile(data.cwd),","\t217: \t\t\t\t\tfiles   : $.map(files, function(f) { return f }),","\t231: \t\t}, this.fm.diff($.map(files, filter)));","\t249: \t\t\t\t\tresult.push(self.normalizeFile(dir, phash))","\t260: \t * Convert file info from old api format into new one","\t262: \t * @param  Object  file","\t266: \tthis.normalizeFile = function(file, phash, tmb) {","\t267: \t\tvar mime = file.mime || 'directory',","\t268: \t\t\tsize = mime == 'directory' && !file.linkTo ? 0 : file.size,","\t270: \t\t\t\turl    : file.url,","\t271: \t\t\t\thash   : file.hash,","\t273: \t\t\t\tname   : file.name,","\t275: \t\t\t\tdate   : file.date || 'unknown',","\t277: \t\t\t\tread   : file.read,","\t278: \t\t\t\twrite  : file.write,","\t279: \t\t\t\tlocked : !phash ? true : file.rm === void(0) ? false : !file.rm","\t282: \t\tif (file.mime == 'application/x-empty') {","\t285: \t\tif (file.linkTo) {","\t286: \t\t\tinfo.alias = file.linkTo;","\t289: \t\tif (file.linkTo) {","\t290: \t\t\tinfo.linkTo = file.linkTo;","\t293: \t\tif (file.tmb) {","\t294: \t\t\tinfo.tmb = file.tmb;","\t300: \t\tif (file.dirs && file.dirs.length) {","\t303: \t\tif (file.dim) {","\t304: \t\t\tinfo.dim = file.dim;","\t306: \t\tif (file.resize) {","\t307: \t\t\tinfo.resize = file.resize;","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/cwd.js:","\t46: \t\t\t * File css class","\t50: \t\t\tclFile       = fm.res(c, 'cwdfile'),","\t57: \t\t\tfileSelector = '.'+clFile,","\t102: \t\t\t * Css class for temporary nodes (for mkdir/mkfile) commands","\t106: \t\t\tclTmp = clFile+'-tmp',","\t125: \t\t\t * File templates","\t130: \t\t\t\ticon : '<div id=\"{hash}\" class=\"'+clFile+' {permsclass} {dirclass} ui-corner-all\" title=\"{tooltip}\"><div class=\"elfinder-cwd-file-wrapper ui-corner-all\"><div class=\"elfinder-cwd-icon {mime} ui-corner-all\" unselectable=\"on\" {style}/>{marker}</div><div class=\"elfinder-cwd-filename\" title=\"{name}\">{name}</div></div>',","\t131: \t\t\t\trow  : '<tr id=\"{hash}\" class=\"'+clFile+' {permsclass} {dirclass}\" title=\"{tooltip}\"><td><div class=\"elfinder-cwd-file-wrapper\"><span class=\"elfinder-cwd-icon {mime}\"/>{marker}<span class=\"elfinder-cwd-filename\">{name}</span></div></td><td>{perms}</td><td>{date}</td><td>{size}</td><td>{kind}</td></tr>'","\t175: \t\t\t * Return file html","\t177: \t\t\t * @param  Object  file info","\t189: \t\t\t * Flag. Required for msie to avoid unselect files on dragstart","\t196: \t\t\t * Move selection to prev/next file","\t215: \t\t\t\t\ts = sel.filter(prev ? ':first' : ':last');","\t222: \t\t\t\t\t\t// find real prevoius file","\t225: \t\t\t\t\t\t// find up/down side file in icons view","\t246: \t\t\t\t\t\t\t// there is row before last one - select last file","\t257: \t\t\t\t\t// there are no selected file - select first/last one","\t263: \t\t\t\t\t\t// append new files to selected","\t266: \t\t\t\t\t\t// unselect selected files","\t269: \t\t\t\t\t// select file(s)","\t272: \t\t\t\t\tscrollToView(n.filter(prev ? ':first' : ':last'));","\t278: \t\t\tselectedFiles = [],","\t280: \t\t\tselectFile = function(hash) {","\t288: \t\t\t\tselectedFiles = $.map(fm.files(), function(f) { return f.phash == phash ? f.hash : null });","\t293: \t\t\t * Unselect all files","\t298: \t\t\t\tselectedFiles = [];","\t304: \t\t\t * Return selected files hashes list","\t309: \t\t\t\treturn selectedFiles;","\t313: \t\t\t * Fire elfinder \"select\" event and pass selected files to it","\t318: \t\t\t\tfm.trigger('select', {selected : selectedFiles});","\t322: \t\t\t * Scroll file to set it visible","\t324: \t\t\t * @param DOMElement  file/dir node","\t341: \t\t\t * Files we get from server but not show yet","\t350: \t\t\t * @param String  file hash","\t373: \t\t\t * Lazy load - append to cwd not shown files","\t385: \t\t\t\t\tfiles;","\t392: \t\t\t\t\t&& (files = buffer.splice(0, fm.options.showFiles)).length) {","\t394: \t\t\t\t\thtml = $.map(files, function(f) {","\t421: \t\t\t\tif (selectedFiles.length) {","\t425: \t\t\t\t\t\t$.inArray(id, selectedFiles) !== -1 && $(this).trigger(evtSelect);","\t433: \t\t\t * Do not add class on childs file over","\t440: \t\t\t\t\t$.each(ui.helper.data('files'), function(i, h) {","\t441: \t\t\t\t\t\tif (fm.file(h).phash == hash) {","\t461: \t\t\t * Preload required thumbnails and on load add css to files.","\t462: \t\t\t * Return false if required file is not visible yet (in buffer) -","\t465: \t\t\t * @param  Object  file hash -> thumbnail map","\t496: \t\t\t * @param  Array|Boolean  files hashes list for new api | true for old api","\t499: \t\t\tloadThumbnails = function(files) {","\t515: \t\t\t\ttmbs = tmbs = files.splice(0, tmbNum);","\t523: \t\t\t\t\t\t\tloadThumbnails(files);","\t530: \t\t\t * Add new files to cwd/buffer","\t532: \t\t\t * @param  Array  new files","\t535: \t\t\tadd = function(files) {","\t537: \t\t\t\t\tl        = files.length, ","\t541: \t\t\t\t\tfindNode = function(file) {","\t542: \t\t\t\t\t\tvar pointer = cwd.find('[id]:first'), file2;","\t545: \t\t\t\t\t\t\tfile2 = fm.file(pointer.attr('id'));","\t546: \t\t\t\t\t\t\tif (!pointer.is('.elfinder-cwd-parent') && file2 && fm.compare(file, file2) < 0) {","\t552: \t\t\t\t\tfindIndex = function(file) {","\t556: \t\t\t\t\t\t\tif (fm.compare(file, buffer[i]) < 0) {","\t562: \t\t\t\t\tfile, hash, node, ndx;","\t566: \t\t\t\t\tfile = files[l];","\t567: \t\t\t\t\thash = file.hash;","\t573: \t\t\t\t\tif ((node = findNode(file)) && node.length) {","\t574: \t\t\t\t\t\tnode.before(itemhtml(file)); ","\t575: \t\t\t\t\t} else if ((ndx = findIndex(file)) >= 0) {","\t576: \t\t\t\t\t\tbuffer.splice(ndx, 0, file);","\t578: \t\t\t\t\t\tplace.append(itemhtml(file));","\t582: \t\t\t\t\t\tif (file.mime == 'directory') {","\t584: \t\t\t\t\t\t} else if (file.tmb) {","\t585: \t\t\t\t\t\t\tfile.tmb === 1 ? ltmb.push(hash) : (atmb[hash] = file.tmb);","\t596: \t\t\t * Remove files from cwd/buffer","\t598: \t\t\t * @param  Array  files hashes","\t601: \t\t\tremove = function(files) {","\t602: \t\t\t\tvar l = files.length, hash, n, ndx;","\t605: \t\t\t\t\thash = files[l];","\t629: \t\t\t * @param  Array  files","\t632: \t\t\tcontent = function(files, any) {","\t634: \t\t\t\t// console.log(files)","\t640: \t\t\t\t\tcwd.children('table,'+fileSelector).remove();","\t652: \t\t\t\tbuffer = $.map(files, function(f) { return any || f.phash == phash ? f : null; });","\t654: \t\t\t\tbuffer = fm.sortFiles(buffer);","\t661: \t\t\t\t\tvar parent = $.extend(true, {}, fm.file(phash), {name : '..', mime : 'directory'});","\t686: \t\t\t\t.delegate(fileSelector, 'click.'+fm.namespace, function(e) {","\t709: \t\t\t\t.delegate(fileSelector, 'dblclick.'+fm.namespace, function(e) {","\t710: \t\t\t\t\tfm.dblclick({file : this.id});","\t713: \t\t\t\t.delegate(fileSelector, 'mouseenter.'+fm.namespace, function(e) {","\t721: \t\t\t\t// add hover class to selected file","\t722: \t\t\t\t.delegate(fileSelector, evtSelect, function(e) {","\t728: \t\t\t\t\t\tif ($.inArray(id, selectedFiles) === -1) {","\t729: \t\t\t\t\t\t\tselectedFiles.push(id);","\t733: \t\t\t\t// remove hover class from unselected file","\t734: \t\t\t\t.delegate(fileSelector, evtUnselect, function(e) {","\t741: \t\t\t\t\t\tndx = $.inArray(id, selectedFiles);","\t743: \t\t\t\t\t\t\tselectedFiles.splice(ndx, 1);","\t748: \t\t\t\t// disable files wich removing or moving","\t749: \t\t\t\t.delegate(fileSelector, evtDisable, function() {","\t757: \t\t\t\t// if any files was not removed/moved - unlock its","\t758: \t\t\t\t.delegate(fileSelector, evtEnable, function() {","\t765: \t\t\t\t.delegate(fileSelector, 'scrolltoview', function() {","\t768: \t\t\t\t.delegate(fileSelector, 'hover', function(e) {","\t772: \t\t\t\t\tvar file = $(e.target).closest('.'+clFile);","\t774: \t\t\t\t\tif (file.length) {","\t777: \t\t\t\t\t\tif (!file.is('.'+clDisabled)) {","\t778: \t\t\t\t\t\t\tif (!file.is('.'+clSelected)) {","\t781: \t\t\t\t\t\t\t\tfile.trigger(evtSelect);","\t785: \t\t\t\t\t\t\t\t'type'    : 'files',","\t799: \t\t\t\t// make files selectable","\t801: \t\t\t\t\tfilter     : fileSelector,","\t808: \t\t\t\t// prepend fake file/dir","\t809: \t\t\t\t.bind('create.'+fm.namespace, function(e, file) {","\t812: \t\t\t\t\t\tfile = $(itemhtml(file)).addClass(clTmp);","\t817: \t\t\t\t\t\tp.after(file);","\t819: \t\t\t\t\t\tparent.prepend(file);","\t824: \t\t\t\t// unselect all selected files","\t826: \t\t\t\t.bind('selectfile', function(e, id) {","\t882: \t\t\t\te.dataTransfer && e.dataTransfer.files &&  e.dataTransfer.files.length && fm.exec('upload', {files : e.dataTransfer.files})//fm.upload({files : e.dataTransfer.files});","\t888: \t\t\t\tcontent(e.data.files);","\t891: \t\t\t\tlastSearch = e.data.files;","\t898: \t\t\t\t\tcontent(fm.files());","\t905: \t\t\t\tcontent(query ? lastSearch : fm.files(), !!query);","\t913: \t\t\t\t\tcontent(fm.files());","\t916: \t\t\t\t\t\tselectFile(h);","\t924: \t\t\t\t\tfiles = query","\t928: \t\t\t\tadd(files);","\t933: \t\t\t\t\tfiles;","\t936: \t\t\t\t\t$.each(e.data.changed || [], function(i, file) {","\t937: \t\t\t\t\t\tremove([file.hash]);","\t938: \t\t\t\t\t\tif (file.name.indexOf(query) !== -1) {","\t939: \t\t\t\t\t\t\tadd([file]);","\t940: \t\t\t\t\t\t\t$.inArray(file.hash, sel) !== -1 && selectFile(file.hash);","\t944: \t\t\t\t\t$.each($.map(e.data.changed || [], function(f) { return f.phash == phash ? f : null; }), function(i, file) {","\t945: \t\t\t\t\t\tremove([file.hash]);","\t946: \t\t\t\t\t\tadd([file]);","\t947: \t\t\t\t\t\t$.inArray(file.hash, sel) !== -1 && selectFile(file.hash);","\t965: \t\t\t// select dragged file if no selected, disable selectable","\t970: \t\t\t\tif (target.is(fileSelector)) {","\t988: \t\t\t.bind('lockfiles unlockfiles', function(e) {","\t989: \t\t\t\tvar event = e.type == 'lockfiles' ? evtDisable : evtEnable,","\t990: \t\t\t\t\tfiles = e.data.files || [], ","\t991: \t\t\t\t\tl     = files.length;","\t994: \t\t\t\t\tcwd.find('#'+files[l]).trigger(event);","\t998: \t\t\t// select new files after some actions","\t999: \t\t\t.bind('mkdir mkfile duplicate upload rename archive extract', function(e) {","\t1000: \t\t\t\tvar phash = fm.cwd().hash, files;","\t1004: \t\t\t\t$.each(e.data.added || [], function(i, file) { ","\t1005: \t\t\t\t\tfile && file.phash == phash && selectFile(file.hash);","\t1016: \t\t\t\tdescription : 'selectfiles',","\t1022: \t\t\t\tdescription : 'selectffile',","\t1031: \t\t\t\tdescription : 'selectlfile',","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/dialog.js:","\t26: \tthis.filter(':not(.ui-dialog-content)').each(function() {","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/overlay.js:","\t4: \tthis.filter(':not(.elfinder-overlay)').each(function() {","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/path.js:","\t24: \t\t\t\t\tdirs.push('<a href=\"#'+hash+'\">'+fm.escape(fm.file(hash).name)+'</a>');","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/places.js:","\t194: \t\t\t\t\taccept     : '.elfinder-cwd-file-wrapper,.elfinder-tree-dir,.elfinder-cwd-file',","\t199: \t\t\t\t\t\t$.each(ui.helper.data('files'), function(i, hash) {","\t200: \t\t\t\t\t\t\tvar dir = fm.file(hash);","\t214: \t\t// on fm load - show places and load files from backend","\t233: \t\t\t\t\t$.each(data.files, function(i, file) {","\t234: \t\t\t\t\t\tfile.mime == 'directory' && add(file);","\t254: \t\t\t\t$.each(e.data.changed, function(i, file) {","\t255: \t\t\t\t\tif ($.inArray(file.hash, dirs) !== -1) {","\t256: \t\t\t\t\t\tremove(file.hash);","\t257: \t\t\t\t\t\tfile.mime == 'directory' && add(file);","\t271: \t\t\t\t\t\t$.each(data.files || [], function(i, file) {","\t272: \t\t\t\t\t\t\tif ($.inArray(file.hash, dirs) === -1) {","\t273: \t\t\t\t\t\t\t\tremove(file.hash);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/sortbutton.js:","\t42: \t\t\t\t\t.filter('[rel=\"'+fm.sortType+'\"]')","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/stat.js:","\t4:  * Display number of files/selected files and its size in statusbar","\t15: \t\t\tsetstat    = function(files, cwd) {","\t19: \t\t\t\t$.each(files, function(i, file) {","\t20: \t\t\t\t\tif (!cwd || file.phash == cwd) {","\t22: \t\t\t\t\t\ts += parseInt(file.size)||0;","\t32: \t\t\tsetstat(fm.files(), fm.cwd().hash)","\t35: \t\t\tsetstat(e.data.files);","\t40: \t\t\t\tfiles = fm.selectedFiles();","\t42: \t\t\tif (files.length == 1) {","\t43: \t\t\t\ts = files[0].size;","\t44: \t\t\t\tsel.html(fm.escape(files[0].name)+(s > 0 ? ', '+fm.formatSize(s) : ''));","\t49: \t\t\t$.each(files, function(i, file) {","\t51: \t\t\t\ts += parseInt(file.size)||0;","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/tree.js:","\t196: \t\t\t * Return only dirs from files list","\t198: \t\t\t * @param  Array  files list","\t201: \t\t\tfilter = function(files) {","\t202: \t\t\t\treturn $.map(files||[], function(f) { return f.mime == 'directory' ? f : null });","\t228: \t\t\t\t\tinfo = fm.file(fm.navId2Hash(node.children('[id]').attr('id')));","\t230: \t\t\t\t\tif ((info = fm.file(fm.navId2Hash(node.children('[id]').attr('id')))) ","\t307: \t\t\t\t\t\treturn current.parentsUntil('.'+root).filter('.'+subtree).show().prev('.'+navdir).addClass(expanded);","\t310: \t\t\t\t\t\tdir = fm.file(cwd);","\t320: \t\t\t\t\t\t\tvar dirs = filter(data.tree);","\t357: \t\t\t\t\t\t.filter(function() { return $(this).next('.'+subtree).children().length > 0 })","\t388: \t\t\t\t\t\tfile = fm.file(hash);","\t393: \t\t\t\t\t\tfm.exec('open', file.thash || hash);","\t415: \t\t\t\t\t\t\t\tupdateTree(filter(data.tree)); ","\t446: \t\t\t\tdirs = filter(data.files);","\t458: \t\t\tvar dirs = filter(e.data.added);","\t467: \t\t\tvar dirs = filter(e.data.changed),","\t527: \t\t.bind('lockfiles unlockfiles', function(e) {","\t528: \t\t\tvar lock = e.type == 'lockfiles',","\t530: \t\t\t\tdirs = $.map(e.data.files||[], function(h) {  ","\t531: \t\t\t\t\tvar dir = fm.file(h);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/ui/uploadButton.js:","\t3:  * @class  elFinder toolbar's button tor upload file","\t12: \t\t\tinput = $('<input type=\"file\" multiple=\"true\"/>')","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/chars-test.php:","\t12: $path = '../../../files/tmp/';","\t15: \texit('unable to create file');","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/connector.minimal.php:","\t5: include_once dirname(__FILE__).DIRECTORY_SEPARATOR.'elFinderConnector.class.php';","\t6: include_once dirname(__FILE__).DIRECTORY_SEPARATOR.'elFinder.class.php';","\t7: include_once dirname(__FILE__).DIRECTORY_SEPARATOR.'elFinderVolumeDriver.class.php';","\t8: include_once dirname(__FILE__).DIRECTORY_SEPARATOR.'elFinderVolumeLocalFileSystem.class.php';","\t10: // include_once dirname(__FILE__).DIRECTORY_SEPARATOR.'elFinderVolumeMySQL.class.php';","\t12: // include_once dirname(__FILE__).DIRECTORY_SEPARATOR.'elFinderVolumeFTP.class.php';","\t16:  * Simple function to demonstrate how to control file access using \"accessControl\" callback.","\t17:  * This method will disable accessing files/folders starting from '.' (dot)","\t20:  * @param  string  $path  file path relative to volume root directory started with directory separator","\t24: \treturn strpos(basename($path), '.') === 0       // if file/folder begins with '.' (dot)","\t36: \t\t\t'driver'        => 'LocalFileSystem',   // driver for accessing file system (REQUIRED)","\t37: \t\t\t'path'          => '../files/',         // path to files (REQUIRED)","\t38: \t\t\t'URL'           => dirname($_SERVER['PHP_SELF']) . '/../files/', // URL to files (REQUIRED)","\t39: \t\t\t'accessControl' => 'access'             // disable and hide dot starting files (OPTIONAL)","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/elFinder.class.php:","\t4:  * elFinder - file manager for web.","\t56: \t\t'file'      => array('target' => true, 'download' => false),","\t59: \t\t'mkfile'    => array('target' => true, 'name' => true, 'mimes' => false),","\t64: \t\t'upload'    => array('target' => true, 'FILES' => true, 'mimes' => false, 'html' => false),","\t132: \tconst ERROR_FILE_NOT_FOUND    = 'errFileNotFound';     // 'File not found.'","\t135: \tconst ERROR_NOT_FILE          = 'errNotFile';","\t138: \tconst ERROR_EXISTS            = 'errExists';        // 'File named \"$1\" already exists.'","\t139: \tconst ERROR_INVALID_NAME      = 'errInvName';       // 'Invalid file name.'","\t141: \tconst ERROR_MKFILE            = 'errMkfile';","\t150: \tconst ERROR_RM_SRC            = 'errRmSrc';            // 'Unable remove source file(s)'","\t152: \tconst ERROR_UPLOAD_FILE       = 'errUploadFile';       // 'Unable to upload \"$1\".'","\t153: \tconst ERROR_UPLOAD_NO_FILES   = 'errUploadNoFiles';    // 'No files found for upload.'","\t155: \tconst ERROR_UPLOAD_FILE_SIZE  = 'errUploadFileSize';   // 'File exceeds maximum allowed size.'","\t156: \tconst ERROR_UPLOAD_FILE_MIME  = 'errUploadMime';       // 'File type not allowed.'","\t177: \tconst ERROR_FTP_DOWNLOAD_FILE \t= 'errFtpDownloadFile';","\t178: \tconst ERROR_FTP_UPLOAD_FILE \t= 'errFtpUploadFile';","\t225: \t\t\t\t\t// unique volume id (ends on \"_\") - used as prefix to files hash","\t373: \t\t\t\t$this->volumes[$id]->setMimesFilter($args['mimes']);","\t396: \t\t// replace removed files info with removed files hashes","\t399: \t\t\tforeach ($result['removed'] as $file) {","\t400: \t\t\t\t$removed[] = $file['hash'];","\t404: \t\t// remove hidden files and filter files by mimetypes","\t406: \t\t\t$result['added'] = $this->filter($result['added']);","\t408: \t\t// remove hidden files and filter files by mimetypes","\t410: \t\t\t$result['changed'] = $this->filter($result['changed']);","\t437: \t * Return file real path","\t439: \t * @param  string  $hash  file hash","\t540: \t *  - files        - opened dir content [and dirs tree if $args[tree]]","\t572: \t\t$files = array();","\t578: \t\t\t\t\t$files = array_merge($files, $tree);","\t583: \t\t// get current working directory files list and add to $files if not exists in it","\t588: \t\tforeach ($ls as $file) {","\t589: \t\t\tif (!in_array($file, $files)) {","\t590: \t\t\t\t$files[] = $file;","\t597: \t\t\t'files'   => $files","\t602: \t\t\t$result['uplMaxSize'] = ini_get('upload_max_filesize');","\t610: \t * Return dir files names list","\t684: \t * Required to output file in browser when volume URL is not set ","\t685: \t * Return array contains opened file pointer, root itself and required headers","\t691: \tprotected function file($args) {","\t698: \t\t\treturn array('error' => 'File not found', 'header' => $h404, 'raw' => true);","\t701: \t\tif (($file = $volume->file($target)) == false) {","\t702: \t\t\treturn array('error' => 'File not found', 'header' => $h404, 'raw' => true);","\t705: \t\tif (!$file['read']) {","\t710: \t\t\treturn array('error' => 'File not found', 'header' => $h404, 'raw' => true);","\t717: \t\t\t$disp  = preg_match('/^(image|text)/i', $file['mime']) || $file['mime'] == 'application/x-shockwave-flash' ","\t720: \t\t\t$mime = $file['mime'];","\t723: \t\t$filenameEncoded = rawurlencode($file['name']);","\t724: \t\tif (strpos($filenameEncoded, '%') === false) { // ASCII only","\t725: \t\t\t$filename = 'filename=\"'.$file['name'].'\"';","\t729: \t\t\t\t$filename = 'filename=\"'.$filenameEncoded.'\"';","\t731: \t\t\t\t$filename = 'filename=\"'.str_replace('\"', '', $file['name']).'\"';","\t733: \t\t\t\t$filename = 'filename*=UTF-8\\'\\''.$filenameEncoded;","\t740: \t\t\t'info'    => $file,","\t743: \t\t\t\t'Content-Disposition: '.$disp.'; '.$filename,","\t744: \t\t\t\t'Content-Location: '.$file['name'],","\t746: \t\t\t\t'Content-Length: '.$file['size'],","\t754: \t * Count total files size","\t765: \t\t\t|| ($file = $volume->file($target)) == false","\t766: \t\t\t|| !$file['read']) {","\t796: \t * Create empty file","\t802: \tprotected function mkfile($args) {","\t807: \t\t\treturn array('error' => $this->error(self::ERROR_MKFILE, $name, self::ERROR_TRGDIR_NOT_FOUND, '#'.$target));","\t810: \t\treturn ($file = $volume->mkfile($target, $args['name'])) == false","\t811: \t\t\t? array('error' => $this->error(self::ERROR_MKFILE, $name, $volume->error()))","\t812: \t\t\t: array('added' => array($file));","\t816: \t * Rename file","\t827: \t\t||  ($rm  = $volume->file($target)) == false) {","\t828: \t\t\treturn array('error' => $this->error(self::ERROR_RENAME, '#'.$target, self::ERROR_FILE_NOT_FOUND));","\t832: \t\treturn ($file = $volume->rename($target, $name)) == false","\t834: \t\t\t: array('added' => array($file), 'removed' => array($rm));","\t838: \t * Duplicate file - create copy with \"copy %d\" suffix","\t851: \t\t\t|| ($src = $volume->file($target)) == false) {","\t852: \t\t\t\t$result['warning'] = $this->error(self::ERROR_COPY, '#'.$target, self::ERROR_FILE_NOT_FOUND);","\t856: \t\t\tif (($file = $volume->duplicate($target, $suffix)) == false) {","\t861: \t\t\t$result['added'][] = $file;","\t868: \t * Remove dirs/files","\t880: \t\t\t\t$result['warning'] = $this->error(self::ERROR_RM, '#'.$target, self::ERROR_FILE_NOT_FOUND);","\t893: \t * Save uploaded files","\t902: \t\t$files  = isset($args['FILES']['upload']) && is_array($args['FILES']['upload']) ? $args['FILES']['upload'] : array();","\t905: \t\tif (empty($files)) {","\t906: \t\t\treturn array('error' => $this->error(self::ERROR_UPLOAD, self::ERROR_UPLOAD_NO_FILES), 'header' => $header);","\t913: \t\tforeach ($files['name'] as $i => $name) {","\t914: \t\t\tif (($error = $files['error'][$i]) > 0) {\t\t\t\t","\t915: \t\t\t\t$result['warning'] = $this->error(self::ERROR_UPLOAD_FILE, $name, $error == UPLOAD_ERR_INI_SIZE || $error == UPLOAD_ERR_FORM_SIZE ? self::ERROR_UPLOAD_FILE_SIZE : self::ERROR_UPLOAD_TRANSFER);","\t920: \t\t\t$tmpname = $files['tmp_name'][$i];","\t923: \t\t\t\t$result['warning'] = $this->error(self::ERROR_UPLOAD_FILE, $name, self::ERROR_UPLOAD_TRANSFER);","\t924: \t\t\t\t$this->uploadDebug = 'Upload error: unable open tmp file';","\t928: \t\t\tif (($file = $volume->upload($fp, $target, $name, $tmpname)) === false) {","\t929: \t\t\t\t$result['warning'] = $this->error(self::ERROR_UPLOAD_FILE, $name, $volume->error());","\t935: \t\t\t$result['added'][] = $file;","\t942: \t * Copy/move files into new destination","\t961: \t\t\t\t$result['warning'] = $this->error($error, '#'.$target, self::ERROR_FILE_NOT_FOUND);","\t965: \t\t\tif (($file = $dstVolume->paste($srcVolume, $target, $dst, $cut)) == false) {","\t970: \t\t\t$result['added'][] = $file;","\t976: \t * Return file content","\t986: \t\tif (!$volume || ($file = $volume->file($target)) == false) {","\t987: \t\t\treturn array('error' => $this->error(self::ERROR_OPEN, '#'.$target, self::ERROR_FILE_NOT_FOUND));","\t1004: \t * Save content into text file","\t1013: \t\t|| ($file = $volume->file($target)) == false) {","\t1014: \t\t\treturn array('error' => $this->error(self::ERROR_SAVE, '#'.$target, self::ERROR_FILE_NOT_FOUND));","\t1017: \t\tif (($file = $volume->putContents($target, $args['content'])) == false) {","\t1021: \t\treturn array('changed' => array($file));","\t1025: \t * Extract files from archive","\t1038: \t\t|| ($file = $volume->file($target)) == false) {","\t1039: \t\t\treturn array('error' => $this->error(self::ERROR_EXTRACT, '#'.$target, self::ERROR_FILE_NOT_FOUND));","\t1042: \t\treturn ($file = $volume->extract($target))","\t1043: \t\t\t? array('added' => array($file))","\t1063: \t\treturn ($file = $volume->archive($targets, $args['type']))","\t1064: \t\t\t? array('added' => array($file))","\t1069: \t * Search files","\t1084: \t\treturn array('files' => $result);","\t1088: \t * Return file info (used by client \"places\" ui)","\t1095: \t\t$files = array();","\t1099: \t\t\t&& ($info = $volume->file($hash)) != false) {","\t1100: \t\t\t\t$files[] = $info;","\t1104: \t\treturn array('files' => $files);","\t1143: \t\t|| ($file = $volume->file($target)) == false) {","\t1144: \t\t\treturn array('error' => $this->error(self::ERROR_RESIZE, '#'.$target, self::ERROR_FILE_NOT_FOUND));","\t1147: \t\treturn ($file = $volume->resize($target, $width, $height, $x, $y, $mode, $bg, $degree))","\t1148: \t\t\t? array('changed' => array($file))","\t1157: \t * Return root - file's owner","\t1159: \t * @param  string  file hash","\t1173: \t * Return files info array ","\t1175: \t * @param  array  $data  one file info or files info","\t1184: \t * Return fils hashes list","\t1186: \t * @param  array  $files  files info","\t1190: \tprotected function hashes($files) {","\t1192: \t\tforeach ($files as $file) {","\t1193: \t\t\t$ret[] = $file['hash'];","\t1199: \t * Remove from files list hidden files and files with required mime types","\t1201: \t * @param  array  $files  files info","\t1205: \tprotected function filter($files) {","\t1206: \t\tforeach ($files as $i => $file) {","\t1207: \t\t\tif (!empty($file['hidden']) || !$this->default->mimeAccepted($file['mime'])) {","\t1208: \t\t\t\tunset($files[$i]);","\t1211: \t\treturn array_merge($files, array());","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/elFinderConnector.class.php:","\t78: \t\t\t$arg = $name == 'FILES' ","\t79: \t\t\t\t? $_FILES ","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/elFinderVolumeDriver.class.php:","\t26: \t * Volume id - used as prefix for files hashes","\t104: \t * Library to crypt files name","\t161: \t\t// root url, not set to disable sending URL to client (replacement for old \"fileURL\" option)","\t165: \t\t// library to crypt/uncrypt files names (not implemented)","\t167: \t\t// how to detect files mimetypes. (auto/internal/finfo/mime_content_type)","\t169: \t\t// mime.types file path (for mimeDetect==internal)","\t170: \t\t'mimefile'        => '',","\t185: \t\t// on paste file -  if true - old file will be replaced with new one, if false new file get name - original_name-number.ext","\t189: \t\t// on upload -  if true - old file will be replaced with new one, if false new file get name - original_name-number.ext","\t197: \t\t// maximum upload file size. NOTE - this is size for every uploaded files","\t199: \t\t// files dates format","\t201: \t\t// files time format","\t211: \t\t// regexp or function name to validate new file name","\t213: \t\t// function/class method to control files permissions","\t222: \t\t// files attributes","\t283: \t * Maximum allowed upload file size.","\t298: \t * Flag - mimetypes from externail file was loaded","\t456: \t * Store files moved or overwrited files info","\t502: \t\t\tif (!file_exists($path)) {","\t588: \t\t// default file attribute","\t602: \t\t// set files attributes","\t672: \t\t\t$tmpFileInfo = @explode(';', @finfo_file(finfo_open(FILEINFO_MIME), __FILE__));","\t674: \t\t\t$tmpFileInfo = false;","\t677: \t\tif ($tmpFileInfo && preg_match($regexp, array_shift($tmpFileInfo))) {","\t679: \t\t\t$this->finfo = finfo_open(FILEINFO_MIME);","\t682: \t\t&& preg_match($regexp, array_shift(explode(';', mime_content_type(__FILE__))))) {","\t689: \t\t// load mimes from external file for mimeDetect == 'internal'","\t691: \t\t// file must be in file directory or in parent one ","\t695: \t\t\t$file = false;","\t696: \t\t\tif (!empty($this->options['mimefile']) && file_exists($this->options['mimefile'])) {","\t697: \t\t\t\t$file = $this->options['mimefile'];","\t698: \t\t\t} elseif (file_exists(dirname(__FILE__).DIRECTORY_SEPARATOR.'mime.types')) {","\t699: \t\t\t\t$file = dirname(__FILE__).DIRECTORY_SEPARATOR.'mime.types';","\t700: \t\t\t} elseif (file_exists(dirname(dirname(__FILE__)).DIRECTORY_SEPARATOR.'mime.types')) {","\t701: \t\t\t\t$file = dirname(dirname(__FILE__)).DIRECTORY_SEPARATOR.'mime.types';","\t704: \t\t\tif ($file && file_exists($file)) {","\t705: \t\t\t\t$mimecf = file($file);","\t840: \tpublic function setMimesFilter($mimes) {","\t944: \t * Return file path related to root","\t946: \t * @param  string   $hash  file hash","\t955: \t * Return file real path if file exists","\t957: \t * @param  string  $hash  file hash","\t967: \t * Return list of moved/overwrited files","\t977: \t * Clean removed files list","\t987: \t * Return file/dir hash or first founded child hash with required attr == $val","\t989: \t * @param  string   $hash  file hash","\t1000: \t * Return file info or false on error","\t1002: \t * @param  string   $hash      file hash","\t1003: \t * @param  bool     $realpath  add realpath field to file info","\t1007: \tpublic function file($hash) {","\t1010: \t\treturn ($file = $this->stat($path)) ? $file : $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1012: \t\tif (($file = $this->stat($path)) != false) {","\t1014: \t\t\t\t$file['realpath'] = $path;","\t1016: \t\t\treturn $file;","\t1018: \t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1025: \t * @param  bool     $hidden  return hidden file info","\t1030: \t\tif (($dir = $this->file($hash)) == false) {","\t1035: \t\t\t$dir = $this->file($dir['thash']);","\t1046: \t * @param  string   $hash   file hash","\t1061: \t * Return dir files names list","\t1063: \t * @param  string  $hash   file hash","\t1141: \t * Create thumbnail for required file and return its name of false on failed","\t1157: \t * Return file size / total directory size","\t1159: \t * @param  string   file hash","\t1168: \t * Open file for reading and return file pointer","\t1170: \t * @param  string   file hash","\t1175: \t\tif (($file = $this->file($hash)) == false","\t1176: \t\t|| $file['mime'] == 'directory') {","\t1184: \t * Close file pointer","\t1186: \t * @param  Resource  $fp   file pointer","\t1187: \t * @param  string    $hash file hash","\t1231: \t * Create empty file and return its info","\t1234: \t * @param  string   $name file name","\t1238: \tpublic function mkfile($dst, $name) {","\t1239: \t\tif ($this->commandDisabled('mkfile')) {","\t1262: \t\treturn ($path = $this->_mkfile($path, $name)) ? $this->stat($path) : false;","\t1266: \t * Rename file and return file info","\t1268: \t * @param  string  $hash  file hash","\t1269: \t * @param  string  $name  new file name","\t1282: \t\tif (!($file = $this->file($hash))) {","\t1283: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1286: \t\tif ($name == $file['name']) {","\t1287: \t\t\treturn $file;","\t1290: \t\tif (!empty($file['locked'])) {","\t1291: \t\t\treturn $this->setError(elFinder::ERROR_LOCKED, $file['name']);","\t1305: \t\t$this->rmTmb($file); // remove old name tmbs, we cannot do this after dir move","\t1316: \t * Create file copy with suffix \"copy number\" and return its info","\t1318: \t * @param  string   $hash    file hash","\t1319: \t * @param  string   $suffix  suffix to add to file name","\t1328: \t\tif (($file = $this->file($hash)) == false) {","\t1329: \t\t\treturn $this->setError(elFinder::ERROR_COPY, elFinder::ERROR_FILE_NOT_FOUND);","\t1346: \t * Save uploaded file. ","\t1347: \t * On success return array with new file stat and with removed file hash (if existed file was replaced)","\t1349: \t * @param  Resource $fp      file pointer","\t1351: \t * @param  string   $src     file name","\t1352: \t * @param  string   $tmpname file tmp name - required to detect mime type","\t1394: \t\t\treturn $this->setError(elFinder::ERROR_UPLOAD_FILE_MIME);","\t1397: \t\tif ($this->uploadMaxSize > 0 && filesize($tmpname) > $this->uploadMaxSize) {","\t1398: \t\t\treturn $this->setError(elFinder::ERROR_UPLOAD_FILE_SIZE);","\t1404: \t\t$file = $this->stat($test);","\t1407: \t\tif ($file) { // file exists","\t1409: \t\t\t\tif (!$file['write']) {","\t1411: \t\t\t\t} elseif ($file['mime'] == 'directory') {","\t1424: \t\t\t'size'   => filesize($tmpname));","\t1442: \t * Paste files","\t1445: \t * @param  string  $source  file hash","\t1458: \t\tif (($file = $volume->file($src, $rmSrc)) == false) {","\t1459: \t\t\treturn $this->setError($err, '#'.$src, elFinder::ERROR_FILE_NOT_FOUND);","\t1462: \t\t$name = $file['name'];","\t1469: \t\tif (!$dir['write'] || !$file['read']) {","\t1486: \t\t\t\t// do not replace file with dir or dir with file","\t1487: \t\t\t\tif (!$this->isSameType($file['mime'], $stat['mime'])) {","\t1490: \t\t\t\t// existed file is not writable","\t1494: \t\t\t\t// existed file locked or has locked child","\t1498: \t\t\t\t// target is entity file of alias","\t1499: \t\t\t\tif ($volume == $this && ($test == @$file['target'] || $test == $this->decode($src))) {","\t1502: \t\t\t\t// remove existed file","\t1533: \t\t\t\t$this->removed[] = $file;","\t1542: \t * Return file contents","\t1544: \t * @param  string  $hash  file hash","\t1549: \t\t$file = $this->file($hash);","\t1551: \t\tif (!$file) {","\t1552: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1555: \t\tif ($file['mime'] == 'directory') {","\t1556: \t\t\treturn $this->setError(elFinder::ERROR_NOT_FILE);","\t1559: \t\tif (!$file['read']) {","\t1567: \t * Put content in text file and return file info.","\t1569: \t * @param  string  $hash     file hash","\t1570: \t * @param  string  $content  new file content","\t1581: \t\tif (!($file = $this->file($hash))) {","\t1582: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1585: \t\tif (!$file['write']) {","\t1589: \t\treturn $this->_filePutContents($path, $content) ? $this->stat($path) : false;","\t1593: \t * Extract files from archive","\t1605: \t\tif (($file = $this->file($hash)) == false) {","\t1606: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1609: \t\t$archiver = isset($this->archivers['extract'][$file['mime']])","\t1610: \t\t\t? $this->archivers['extract'][$file['mime']]","\t1620: \t\tif (!$file['read'] || !$parent['write']) {","\t1628: \t * Add files to archive","\t1645: \t\t$files = array();","\t1648: \t\t\tif (($file = $this->file($hash)) == false) {","\t1649: \t\t\t\treturn $this->error(elFinder::ERROR_FILE_NOT_FOUND, '#'+$hash);","\t1651: \t\t\tif (!$file['read']) {","\t1663: \t\t\t$files[] = $this->_basename($path);","\t1666: \t\t$name = (count($files) == 1 ? $files[0] : 'Archive').'.'.$archiver['ext'];","\t1669: \t\treturn ($path = $this->_archive($dir, $files, $name, $archiver)) ? $this->stat($path) : false;","\t1675: \t * @param  string   $hash    image file","\t1692: \t\tif (($file = $this->file($hash)) == false) {","\t1693: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1696: \t\tif (!$file['write'] || !$file['read']) {","\t1702: \t\tif (!$this->canResize($path, $file)) {","\t1730: \t\t\t$this->rmTmb($file);","\t1739: \t * Remove file/dir","\t1741: \t * @param  string  $hash  file hash","\t1752: \t * Search files","\t1766: \t * @param  string  $hash  file hash","\t1771: \t\tif (($file = $this->file($hash)) == false) {","\t1775: \t\treturn $this->_dimensions($this->decode($hash), $file['mime']);","\t1810: \t * @param  string  file path","\t1840: \t * @param  string  file hash","\t1883: \t * Validate file name based on $this->options['acceptedName'] regexp","\t1885: \t * @param  string  $name  file name","\t1902: \t * Return new unique name based on file name and suffix","\t1904: \t * @param  string  $path    file path","\t1938: \t/*********************** file stat *********************/","\t1941: \t * Check file attribute","\t1943: \t * @param  string  $path  file path","\t1945: \t * @param  bool    $val   attribute value returned by file system","\t1985: \t * Return true if file with given name can be created in given folder.","\t1988: \t * @param string $name new file name","\t2017: \t * Return fileinfo ","\t2019: \t * @param  string  $path  file cache","\t2033: \t * Put file stat in cache and return it","\t2035: \t * @param  string  $path   file path","\t2036: \t * @param  array   $stat   file stat","\t2125: \t\t\t\t// for files - check for thumbnails","\t2171: \t * Return file mimetype","\t2173: \t * @param  string  $path  file path","\t2181: \t\t\tif ($type = @finfo_file($this->finfo, $path)) {","\t2200: \t\t\t// finfo return this mime for empty files","\t2214: \t * Detect file mimetype using \"internal\" method","\t2216: \t * @param  string  $path  file path","\t2228: \t * Return file/total directory size","\t2230: \t * @param  string  $path  file path","\t2261: \t * Return true if all mimes is directory or files","\t2273: \t * If file has required attr == $val - return file path,","\t2276: \t * @param  string   $path  file path","\t2303: \t * @param  string   $path  file path","\t2321: \t * Return required dir's files info.","\t2322: \t * If onlyMimes is set - return only dirs and files of required mimes","\t2329: \t\t$files = array();","\t2335: \t\t\t\t$files[] = $stat;","\t2339: \t\treturn $files;","\t2371: \t * Recursive files search","\t2414: \t * Copy file/recursive copy dir only in current volume.","\t2415: \t * Return new file path or false.","\t2419: \t * @param  string  $name  new file name (optionaly)","\t2464: \t * Move file","\t2465: \t * Return new file path or false.","\t2469: \t * @param  string  $name  new file name ","\t2489: \t * Copy file from another volume.","\t2490: \t * Return new file path or false.","\t2493: \t * @param  string  $src          source file hash","\t2495: \t * @param  string  $name         file name","\t2501: \t\tif (($source = $volume->file($src)) == false) {","\t2551: \t * Remove file/ recursive remove dir","\t2553: \t * @param  string  $path   file path","\t2554: \t * @param  bool    $force  try to remove even if file locked","\t2562: \t\t\treturn $this->setError(elFinder::ERROR_RM, $this->_path($path), elFinder::ERROR_FILE_NOT_FOUND);","\t2598: \t * Return thumbnail file name for required file","\t2600: \t * @param  array  $stat  file stat","\t2611: \t * @param  string  $path file path","\t2612: \t * @param  array   $stat file stat","\t2618: \t\t\t// file itself thumnbnail","\t2624: \t\t\tif (file_exists($this->tmbPath.DIRECTORY_SEPARATOR.$name)) {","\t2632: \t * Return true if thumnbnail for required file can be created","\t2635: \t * @param  array   $stat  file stat","\t2648: \t * Return true if required file can be resized.","\t2652: \t * @param  array   $stat  file stat","\t2663: \t * @param  string  $path  file path","\t2664: \t * @param  string  $mime  file mime type","\t2676: \t\t// copy image into tmbPath so some drivers does not store files on local fs","\t2737: \t * @param  string   $path               image file","\t2797: \t\t\t\t$img->resizeImage($size_w, $size_h, Imagick::FILTER_LANCZOS, true);","\t2833: \t * @param  string   $path               image file","\t2904: \t * @param  string   $path               image file","\t2971: \t * @param  string   $path               image file","\t3065: \t * @param  string  $stat  file stat","\t3079: \t\t\tfile_exists($tmb) && @unlink($tmb);","\t3087: \t * @param string $path image file","\t3109: \t * Output gd image to file","\t3112: \t * @param string $filename The path to save the file to.","\t3113: \t * @param string $destformat The Image type to use for $filename","\t3116: \tprotected function gdImage($image, $filename, $destformat, $mime ){","\t3119: \t\t\treturn imagejpeg($image, $filename, 100);","\t3123: \t\t\treturn imagegif($image, $filename, 7);","\t3126: \t\treturn imagepng($image, $filename, 7);","\t3146: \t\timagefill($image, 0, 0, $bgcolor1);","\t3154: \t * @param  int     $ts  file timestamp","\t3195: \t * @param  string  $path  file path","\t3202: \t * Return file name","\t3204: \t * @param  string  $path  file path","\t3211: \t * Join dir name and file name and return full path.","\t3215: \t * @param  string  $name  file name","\t3224: \t * @param  string  $path  file path","\t3231: \t * Return file path related to root dir","\t3233: \t * @param  string  $path  file path","\t3242: \t * @param  string  $path  rel file path","\t3252: \t * @param  string  $path  file path","\t3271: \t * - (int)    size    file size in b. required","\t3272: \t * - (int)    ts      file modification time in unix time. required","\t3281: \t * If file does not exists - returns empty array or false.","\t3283: \t * @param  string  $path    file path ","\t3290: \t/***************** file stat ********************/","\t3306: \t * @param  string  $path  file path","\t3307: \t * @param  string  $mime  file mime type","\t3313: \t/******************** file/dir content *********************/","\t3316: \t * Return files list in directory","\t3325: \t * Open file and return file pointer","\t3327: \t * @param  string  $path  file path","\t3328: \t * @param  bool    $write open file for writing","\t3335: \t * Close opened file","\t3337: \t * @param  resource  $fp    file pointer","\t3338: \t * @param  string    $path  file path","\t3344: \t/********************  file/dir manipulations *************************/","\t3357: \t * Create file and return it's path or false on failed","\t3360: \t * @param string  $name  new file name","\t3364: \tabstract protected function _mkfile($path, $name);","\t3369: \t * @param  string  $source     file to link to","\t3378: \t * Copy file into another file (only inside one volume)","\t3380: \t * @param  string  $source  source file path","\t3382: \t * @param  string  $name    file name","\t3389: \t * Move file into another parent dir.","\t3390: \t * Return new file path or false.","\t3392: \t * @param  string  $source  source file path","\t3394: \t * @param  string  $name    file name","\t3401: \t * Remove file","\t3403: \t * @param  string  $path  file path","\t3419: \t * Create new file and write into it from file pointer.","\t3420: \t * Return new file path or false on error.","\t3422: \t * @param  resource  $fp   file pointer","\t3424: \t * @param  string    $name file name","\t3425: \t * @param  array     $stat file stat (required by some virtual fs)","\t3432: \t * Get file contents","\t3434: \t * @param  string  $path  file path","\t3441: \t * Write a string to a file","\t3443: \t * @param  string  $path     file path","\t3444: \t * @param  string  $content  new file content","\t3448: \tabstract protected function _filePutContents($path, $content);","\t3451: \t * Extract files from archive","\t3453: \t * @param  string  $path file path","\t3465: \t * @param  array   $files  files names list","\t3472: \tabstract protected function _archive($dir, $files, $name, $arc);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/elFinderVolumeFTP.class.php:","\t37: \t * Directory for tmp files","\t86: \t\t\t'fileMode'      => 0644","\t160: \t\t\t$this->disabled[] = 'mkfile';","\t232: \t * Parse line from ftp_rawlist() output and return file stat (array)","\t336: \t\t\t\t\t// $files[] = $stat;","\t347: \t\t\t\t\t// $files[] = $stat;","\t355: \t * Return ftp transfer mode for file","\t357: \t * @param  string  $path  file path","\t370: \t * @param  string  $path  file path","\t379: \t * Return file name","\t381: \t * @param  string  $path  file path","\t390: \t * Join dir name and file name and retur full path","\t455: \t * Return file path related to root dir","\t457: \t * @param  string  $path  file path","\t468: \t * @param  string  $path  file path","\t479: \t * @param  string  $path  file path","\t499: \t/***************** file stat ********************/","\t503: \t * - (int)    size    file size in b. required","\t504: \t * - (int)    ts      file modification time in unix time. required","\t513: \t * If file does not exists - returns empty array or false.","\t515: \t * @param  string  $path    file path ","\t652: \t * @param  string  $path  file path","\t653: \t * @param  string  $mime  file mime type","\t661: \t/******************** file/dir content *********************/","\t664: \t * Return files list in directory.","\t672: \t\t$files = array();","\t676: \t\t\t\t$files[] = $path.DIRECTORY_SEPARATOR.$stat['name'];","\t680: \t\treturn $files;","\t684: \t * Open file and return file pointer","\t686: \t * @param  string  $path  file path","\t687: \t * @param  bool    $write open file for writing","\t705: \t * Close opened file","\t707: \t * @param  resource  $fp  file pointer","\t718: \t/********************  file/dir manipulations *************************/","\t739: \t * Create file and return it's path or false on failed","\t742: \t * @param string  $name  new file name","\t746: \tprotected function _mkfile($path, $name) {","\t770: \t * Copy file into another file","\t772: \t * @param  string  $source     source file path","\t774: \t * @param  string  $name       new file name","\t796: \t * Move file into another parent dir.","\t797: \t * Return new file path or false.","\t799: \t * @param  string  $source  source file path","\t801: \t * @param  string  $name    file name","\t811: \t * Remove file","\t813: \t * @param  string  $path  file path","\t833: \t * Create new file and write into it from file pointer.","\t834: \t * Return new file path or false on error.","\t836: \t * @param  resource  $fp   file pointer","\t838: \t * @param  string    $name file name","\t839: \t * @param  array     $stat file stat (required by some virtual fs)","\t851: \t * Get file contents","\t853: \t * @param  string  $path  file path","\t870: \t * Write a string to a file","\t872: \t * @param  string  $path     file path","\t873: \t * @param  string  $content  new file content","\t877: \tprotected function _filePutContents($path, $content) {","\t883: \t\t\tif (@file_put_contents($local, $content, LOCK_EX) !== false","\t889: \t\t\tfile_exists($local) && @unlink($local);","\t923: \t * @param  string  $path  file/dir path","\t941: \t\t\t\t\t} elseif (is_file($p)) {","\t942: \t\t\t\t\t\t$this->archiveSize += filesize($p);","\t947: \t\t\t$this->archiveSize += filesize($path);","\t954: \t * Extract files from archive","\t992: \t\t$filesToProcess = elFinderVolumeFTP::listFilesInDirectory($tmpDir, true);","\t993: \t\tif(!$filesToProcess) {","\t998: \t\tif (count($filesToProcess) > 1) {","\t1000: \t\t\t// for several files - create new directory","\t1015: \t\t\tforeach ($filesToProcess as $filename) {","\t1019: \t\t\t\t$targetPath = $newPath . DIRECTORY_SEPARATOR . $filename;","\t1020: \t\t\t\tif (is_dir($filename)) {","\t1021: \t\t\t\t\t$success = $this->_mkdir($newPath, $filename);","\t1023: \t\t\t\t\t$success = ftp_put($this->connect, $targetPath, $filename, FTP_BINARY);","\t1026: \t\t\tunset($filename);","\t1029: \t\t\t$filename = $filesToProcess[0];","\t1030: \t\t\t$newPath = $remoteDirectory . DIRECTORY_SEPARATOR . $filename;","\t1031: \t\t\t$success = ftp_put($this->connect, $newPath, $filename, FTP_BINARY);","\t1043: \t\t\t$this->setError(elFinder::ERROR_FTP_UPLOAD_FILE, $newPath);","\t1054: \t * @param  array   $files  files names list","\t1061: \tprotected function _archive($dir, $files, $name, $arc)","\t1072: \t\tif (!$this->ftp_download_files($dir, $files, $tmpDir)) {","\t1084: \t\t$file_names_string = \"\";","\t1085: \t\tforeach (scandir($tmpDir) as $filename) {","\t1086: \t\t\tif ('.' == $filename) {","\t1089: \t\t\tif ('..' == $filename) {","\t1092: \t\t\t$file_names_string = $file_names_string . '\"' . $filename . '\" ';","\t1094: \t\t$command = escapeshellcmd($arc['cmd'] . ' ' . $arc['argc'] . ' \"' . $name . '\" ' . $file_names_string);","\t1103: \t\t$remoteArchiveFile = $dir . DIRECTORY_SEPARATOR . $name;","\t1106: \t\tif (!ftp_put($this->connect, $remoteArchiveFile, $path, FTP_BINARY)) {","\t1107: \t\t\t$this->setError(elFinder::ERROR_FTP_UPLOAD_FILE, $remoteArchiveFile);","\t1120: \t\treturn $remoteArchiveFile;","\t1148: \t * Gets in a single FTP request an array of absolute remote FTP paths of files and","\t1150: \t * @param $remote_directory string remote FTP path to scan for file and folders recursively","\t1154: \t * <li>$item['type'] - either 'f' for file or 'd' for directory</li>","\t1183: \t\t\t\t\t$remote_file_path = $remote_directory . DIRECTORY_SEPARATOR . $info[8];","\t1185: \t\t\t\t\t$item['path'] = $remote_file_path;","\t1186: \t\t\t\t\t$item['type'] = 'f'; // normal file","\t1194: \t * Downloads specified files from remote directory","\t1195: \t * if there is a directory among files it is downloaded recursively (omitting symbolic links).","\t1197: \t * @param array $files list of files to download from remote directory.","\t1198: \t * @param $dest_local_directory string destination folder to store downloaded files.","\t1201: \tprivate function ftp_download_files($remote_directory, array $files, $dest_local_directory)","\t1205: \t\t\t$this->setError(elFinder::ERROR_FTP_DOWNLOAD_FILE, $remote_directory);","\t1210: \t\t\tforeach ($files as $file) {","\t1211: \t\t\t\tif ($remote_directory . DIRECTORY_SEPARATOR . $file == $item['path'] || strstr($item['path'], $remote_directory . DIRECTORY_SEPARATOR . $file . DIRECTORY_SEPARATOR)) {","\t1230: \t\t\t\t$this->setError(elFinder::ERROR_FTP_DOWNLOAD_FILE, $remote_directory);","\t1248: \t\t\tforeach (array_reverse(elFinderVolumeFTP::listFilesInDirectory($dirPath, false)) as $path) {","\t1273: \t * Returns array of strings containing all files and folders in the specified local directory.","\t1277: \t * @return array array of files and folders names relative to the $path","\t1282: \tprivate static function listFilesInDirectory($dir, $omitSymlinks, $prefix = '')","\t1289: \t\t$files = scandir($dir);","\t1290: \t\tif(!$files) {","\t1293: \t\tforeach($files as $file) {","\t1294: \t\t\tif(!in_array($file, $excludes)) {","\t1295: \t\t\t\t$path = $dir.DIRECTORY_SEPARATOR.$file;","\t1300: \t\t\t\t\t\t$result[] = $prefix.$file;","\t1303: \t\t\t\t\t$result[] = $prefix.$file.DIRECTORY_SEPARATOR;","\t1304: \t\t\t\t\t$subs = elFinderVolumeFTP::listFilesInDirectory($path, $omitSymlinks, $prefix.$file.DIRECTORY_SEPARATOR);","\t1310: \t\t\t\t\t$result[] = $prefix.$file;","\t1334: \t\tif (($file = $this->file($hash)) == false) {","\t1335: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t1338: \t\tif (!$file['write'] || !$file['read']) {","\t1353: \t\t\t$this->setError(elFinder::ERROR_FTP_DOWNLOAD_FILE, $remote_directory);","\t1357: \t\tif (!$this->canResize($path, $file)) {","\t1386: \t\t\t// upload to FTP and clear temp local file","\t1389: \t\t\t\t$this->setError(elFinder::ERROR_FTP_UPLOAD_FILE, $path);","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/elFinderVolumeLocalFileSystem.class.php:","\t4:  * elFinder driver for local filesystem.","\t9: class elFinderVolumeLocalFileSystem extends elFinderVolumeDriver {","\t21: \t * Required to count total archive files size","\t44: \t\t$this->options['fileMode'] = 0644;            // new files mode","\t46: \t\t$this->options['maxArcFilesSize'] = 0;        // max allowed archive files size (0 - no limit)","\t117: \t * @param  string  $path  file path","\t126: \t * Return file name","\t128: \t * @param  string  $path  file path","\t137: \t * Join dir name and file name and retur full path","\t199: \t * Return file path related to root dir","\t201: \t * @param  string  $path  file path","\t212: \t * @param  string  $path  file path","\t223: \t * @param  string  $path  file path","\t245: \t/***************** file stat ********************/","\t250: \t * - (int)    size    file size in b. required","\t251: \t * - (int)    ts      file modification time in unix time. required","\t260: \t * If file does not exists - returns empty array or false.","\t262: \t * @param  string  $path    file path ","\t269: \t\tif (!file_exists($path)) {","\t297: \t\t\t$size = @filesize($path);","\t303: \t\t$stat['ts']    = filemtime($path);","\t341: \t * @param  string  $path  file path","\t342: \t * @param  string  $mime  file mime type","\t352: \t/******************** file/dir content *********************/","\t355: \t * Return symlink target file","\t387: \t * Return files list in directory.","\t394: \t\t$files = array();","\t398: \t\t\t\t$files[] = $path.DIRECTORY_SEPARATOR.$name;","\t401: \t\treturn $files;","\t405: \t * Open file and return file pointer","\t407: \t * @param  string  $path  file path","\t408: \t * @param  bool    $write open file for writing","\t417: \t * Close opened file","\t419: \t * @param  resource  $fp  file pointer","\t427: \t/********************  file/dir manipulations *************************/","\t449: \t * Create file and return it's path or false on failed","\t452: \t * @param string  $name  new file name","\t456: \tprotected function _mkfile($path, $name) {","\t461: \t\t\t@chmod($path, $this->options['fileMode']);","\t470: \t * @param  string  $source     file to link to","\t481: \t * Copy file into another file","\t483: \t * @param  string  $source     source file path","\t485: \t * @param  string  $name       new file name","\t494: \t * Move file into another parent dir.","\t495: \t * Return new file path or false.","\t497: \t * @param  string  $source  source file path","\t499: \t * @param  string  $name    file name","\t509: \t * Remove file","\t511: \t * @param  string  $path  file path","\t531: \t * Create new file and write into it from file pointer.","\t532: \t * Return new file path or false on error.","\t534: \t * @param  resource  $fp   file pointer","\t536: \t * @param  string    $name file name","\t537: \t * @param  array     $stat file stat (required by some virtual fs)","\t552: \t\t@chmod($path, $this->options['fileMode']);","\t558: \t * Get file contents","\t560: \t * @param  string  $path  file path","\t565: \t\treturn file_get_contents($path);","\t569: \t * Write a string to a file","\t571: \t * @param  string  $path     file path","\t572: \t * @param  string  $content  new file content","\t576: \tprotected function _filePutContents($path, $content) {","\t577: \t\tif (@file_put_contents($path, $content, LOCK_EX) !== false) {","\t703: \t * @param  string  $path  file/dir path","\t721: \t\t\t\t\t} elseif (is_file($p)) {","\t722: \t\t\t\t\t\t$this->archiveSize += filesize($p);","\t728: \t\t\t$this->archiveSize += filesize($path);","\t735: \t * Extract files from archive","\t764: \t\t\t// get files list","\t772: \t\t\t// no files - extract error ?","\t788: \t\t\t// check max files size","\t789: \t\t\tif ($this->options['maxArcFilesSize'] > 0 && $this->options['maxArcFilesSize'] < $this->archiveSize) {","\t802: \t\t\t\t// for several files - create new directory","\t809: \t\t\t\tif (file_exists($test) || is_link($test)) {","\t824: \t\t\treturn file_exists($result) ? $result : false;","\t832: \t * @param  array   $files  files names list","\t839: \tprotected function _archive($dir, $files, $name, $arc) {","\t843: \t\t$files = array_map('escapeshellarg', $files);","\t845: \t\t$cmd = $arc['cmd'].' '.$arc['argc'].' '.escapeshellarg($name).' '.implode(' ', $files);","\t850: \t\treturn file_exists($path) ? $path : false;","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/elFinderVolumeMySQL.class.php:","\t27: \t * Tables to store files","\t34: \t * Directory for tmp files","\t70: \t\t\t'files_table'   => 'elfinder_file',","\t96: \t\t||  !$this->options['files_table']) {","\t110: \t\t\t\tif ($row[0] == $this->options['files_table']) {","\t111: \t\t\t\t\t$this->tbf = $this->options['files_table'];","\t138: \t\t\tif (!file_exists($tmp)) {","\t213: \t * Search files","\t260: \t * Return temporary file path for required file","\t262: \t * @param  string  $path   file path","\t273: \t * @param  string   $hash    image file","\t286: \t\tif (($file = $this->file($hash)) == false) {","\t287: \t\t\treturn $this->setError(elFinder::ERROR_FILE_NOT_FOUND);","\t290: \t\tif (!$file['write'] || !$file['read']) {","\t296: \t\tif (!$this->canResize($path, $file)) {","\t337: \t\t\t$sql = sprintf('UPDATE %s SET content=LOAD_FILE(\"%s\"), mtime=UNIX_TIMESTAMP() WHERE id=%d', $this->tbf, $this->loadFilePath($img), $path);","\t340: \t\t\t\t$content = file_get_contents($img);","\t348: \t\t\t$this->rmTmb($file);","\t410: \t * @param  int   $path  file path (id)","\t418: \t\t\tif ($file = $this->stat($path)) {","\t420: \t\t\t\t$path = isset($file['phash']) ? $this->decode($file['phash']) : false;","\t431: \t * Return correct file path for LOAD_FILE method","\t433: \t * @param  string $path  file path (id)","\t437: \tprotected function loadFilePath($path) {","\t446: \t * Recursive files search","\t464: \t * @param  string  $path  file path","\t473: \t * Return file name","\t475: \t * @param  string  $path  file path","\t484: \t * Join dir name and file name and return full path","\t513: \t * Return file path related to root dir","\t515: \t * @param  string  $path  file path","\t526: \t * @param  string  $path  file path","\t537: \t * @param  string  $path  file path","\t542: \t\tif (($file = $this->stat($path)) == false) {","\t552: \t\treturn $path.$file['name'];","\t569: \t/***************** file stat ********************/","\t573: \t * - (int)    size    file size in b. required","\t574: \t * - (int)    ts      file modification time in unix time. required","\t583: \t * If file does not exists - returns empty array or false.","\t585: \t * @param  string  $path    file path ","\t633: \t * @param  string  $path  file path","\t634: \t * @param  string  $mime  file mime type","\t642: \t/******************** file/dir content *********************/","\t645: \t * Return files list in directory.","\t658: \t * Open file and return file pointer","\t660: \t * @param  string  $path  file path","\t661: \t * @param  string  $mode  open file mode (ignored in this driver)","\t668: \t\t\t: @tmpfile();","\t686: \t * Close opened file","\t688: \t * @param  resource  $fp  file pointer","\t699: \t/********************  file/dir manipulations *************************/","\t714: \t * Create file and return it's path or false on failed","\t717: \t * @param string  $name  new file name","\t721: \tprotected function _mkfile($path, $name) {","\t738: \t * Copy file into another file","\t740: \t * @param  string  $source     source file path","\t742: \t * @param  string  $name       new file name","\t758: \t * Move file into another parent dir.","\t759: \t * Return new file path or false.","\t761: \t * @param  string  $source  source file path","\t763: \t * @param  string  $name    file name","\t774: \t * Remove file","\t776: \t * @param  string  $path  file path","\t810: \t * Create new file and write into it from file pointer.","\t811: \t * Return new file path or false on error.","\t813: \t * @param  resource  $fp   file pointer","\t815: \t * @param  string    $name file name","\t816: \t * @param  array     $stat file stat (required by some virtual fs)","\t832: \t\tif (($tmpfile = tempnam($this->tmpPath, $this->id))) {","\t833: \t\t\tif (($trgfp = fopen($tmpfile, 'wb')) == false) {","\t834: \t\t\t\tunlink($tmpfile);","\t842: \t\t\t\t\t? 'REPLACE INTO %s (id, parent_id, name, content, size, mtime, mime, width, height) VALUES ('.$id.', %d, \"%s\", LOAD_FILE(\"%s\"), %d, %d, \"%s\", %d, %d)'","\t843: \t\t\t\t\t: 'INSERT INTO %s (parent_id, name, content, size, mtime, mime, width, height) VALUES (%d, \"%s\", LOAD_FILE(\"%s\"), %d, %d, \"%s\", %d, %d)';","\t844: \t\t\t\t$sql = sprintf($sql, $this->tbf, $dir, $this->db->real_escape_string($name), $this->loadFilePath($tmpfile), $size, time(), $mime, $w, $h);","\t847: \t\t\t\tunlink($tmpfile);","\t877: \t * Get file contents","\t879: \t * @param  string  $path  file path","\t888: \t * Write a string to a file","\t890: \t * @param  string  $path     file path","\t891: \t * @param  string  $content  new file content","\t895: \tprotected function _filePutContents($path, $content) {","\t924: \t * @param  string  $path  file/dir path","\t933: \t * Extract files from archive","\t949: \t * @param  array   $files  files names list","\t956: \tprotected function _archive($dir, $files, $name, $arc) {","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/mime.types:","\t1: # This file controls what Internet media types are sent to the client for","\t2: # given file extension(s).  Sending the correct media type to the client","\t3: # is important so they know how to handle the content of the file.","\t109: application/x-class-file","\t235: application/x-profile","\t446: text/x-makefile","\t498: application/x-java-jnlp-file      jnlp","","/clouddrive/clouddrive/myapp/templates/static/elFinder/php/MySQLStorage.sql:","\t1: DROP TABLE IF EXISTS `elfinder_file`;","\t2: CREATE TABLE IF NOT EXISTS `elfinder_file` (","\t21: INSERT INTO `elfinder_file`","","/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/example.html:","\t4: <link type=\"text/css\" rel=\"stylesheet\" href=\"jquery.fileManager.css\" />","\t11: <script type=\"text/javascript\" src=\"jquery.fileManager.js\"></script>","\t15: <h1>jQuery.fileManager</h1>","\t19: <div id=\"filemanager\"></div>","\t23: \t$('#filemanager').fileManager({ajaxPath:'fileManager.php'});","\t28: <div id=\"filemanager_upload\"></div>","\t30: \t$('#filemanager_upload').fileManager({ajaxPath:'fileManager.php',upload:true});","\t35: <div id=\"filemanager_events\"></div>","\t37: \t$('#filemanager_events').fileManager({","\t38: \t\tajaxPath:'fileManager.php',","","/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/fileManager.php:","\t3: * File Manager","\t27: * allow managing of files outside of this path.","\t30: * ajax features of the File Manager.  Including callbacks for deleting","\t31: * or renaming files.","\t35: jqFileManager::ProcessAjax(  dirname(__FILE__).'/uploads'  );","\t38: class jqFileManager {","\t57: \t\treturn self::GetRelativePath(dirname(__FILE__)).DIRECTORY_SEPARATOR;","\t60: \t\treturn self::GetRelativePath(__FILE__);","\t63: \t\treturn self::GetPathFolder().'jquery.fileManager.js';","\t66: \t\treturn self::GetPathFolder().'jquery.fileManager.css';","\t84: \t\tif (!file_exists($path)) mkdir($path,octdec('0777'),true);","\t86: \t\tif (isset($_FILES['file'])) return self::ProcessUpload($path);","\t94: \t\t\tif (!file_exists($from)) {","\t95: \t\t\t\techo 'alert(\"File or Folder no longer exists\");';","\t114: \t\t\tif (file_exists($to)) {","\t131: \t\t$files = array_merge(array_filter($glob, 'is_dir'),array_filter($glob, 'is_file'));","\t132: \t\tforeach ($files as $file) {","\t133: \t\t\t$filename = basename($file);","\t134: \t\t\tif ($filename === '..' || $filename === '.') continue;","\t135: \t\t\tif (!is_dir($file) && array_key_exists('filter',$_POST) && !preg_match('/'.$_POST['filter'].'/i',$filename)) continue;","\t136: \t\t\t$icon = (is_callable($iconCallback)) ? call_user_func($iconCallback,$file) : '';","\t137: \t\t\tself::AddIcon($filename,$filename,is_dir($file)?1:0,$icon);","\t140: \t\t// uPath is full path less rootpath less filename","\t144: \t\techo json_encode(array('rootPath'=>self::GetRelativePath($rootPath),'path'=>$uPath,'files'=>self::$data));","\t161: \t\t$cleanupTargetDir = false; // Remove old files","\t162: \t\t$maxFileAge = 60 * 60; // Temp file age in seconds","\t171: \t\t$fileName = array_key_exists('name',$_REQUEST) ? $_REQUEST[\"name\"] : '';","\t173: \t\t// Clean the fileName for security reasons","\t174: \t\t$fileName = preg_replace('/[^\\w\\._]+/', '', $fileName);","\t175: \t\tif (is_dir($targetDir . DIRECTORY_SEPARATOR . $fileName)) {","\t180: \t\tif (!file_exists($targetDir)) {","\t185: \t\t// Remove old temp files","\t187: \t\t\twhile (($file = readdir($dir)) !== false) {","\t188: \t\t\t\t$filePath = $targetDir . DIRECTORY_SEPARATOR . $file;","\t190: \t\t\t\t// Remove temp files if they are older than the max age","\t191: \t\t\t\tif (preg_match('/\\\\.tmp$/', $file) && (filemtime($filePath) < time() - $maxFileAge))","\t192: \t\t\t\t\tunlink($filePath);","\t209: \t\t\tif (isset($_FILES['file']['tmp_name']) && is_uploaded_file($_FILES['file']['tmp_name'])) {","\t210: \t\t\t\t// Open temp file","\t211: \t\t\t\t$out = fopen($targetDir . DIRECTORY_SEPARATOR . $fileName, $chunk == 0 ? \"wb\" : \"ab\");","\t213: \t\t\t\t\t// Read binary input stream and append it to temp file","\t214: \t\t\t\t\t$in = fopen($_FILES['file']['tmp_name'], \"rb\");","\t224: \t\t\t\t\tunlink($_FILES['file']['tmp_name']);","\t229: \t\t\t\techo '{\"jsonrpc\" : \"2.0\", \"error\" : {\"code\": 103, \"message\": \"Failed to move uploaded file.\"}, \"id\" : \"id\"}';","\t232: \t\t\t// Open temp file","\t233: \t\t\t$out = fopen($targetDir . DIRECTORY_SEPARATOR . $fileName, $chunk == 0 ? \"wb\" : \"ab\");","\t235: \t\t\t\t// Read binary input stream and append it to temp file","","/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/jquery.fileManager.css:","\t2: \tbackground-image:url(images/file64.png); background-repeat:no-repeat; background-position:top left;","","/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/jquery.fileManager.js:","\t2: * File Manager","\t37: \t$.fn.fileManager = function(settings, pluploadOptions) {","\t67: \t\t\t\tif ($(data.files).length == 0) {","\t68: \t\t\t\t  $sel.append('<div style=\"font-size:1.3em;padding:0.5em\">No files in this folder.</div>');","\t70: \t\t\t\t$(data.files).each(function () {","\t78: \t\t\t\t\t$sel.append($('<div>Upload Files</div>').button().bind('click',{container:ul},UploadFiles));","\t88: \t\t\tfunction UploadFiles(event) {","\t92: \t\t\t\t\topts.init = $.extend({},opts.init,{FileUploaded:function (uploader,file,response) { if (uploader.total.queued == 0) RefreshView($sel); }});","\t109: \t\tfunction FileDropped(event,ui) {","\t141: \t\t\ttarget.fileManager($.extend({},mbOptions,{path:path}),pluploadOptions);","\t144: \t\tvar ICONTYPE_FILE = 0;","\t165: \t\t\t\t\ticon.droppable({tolerance:'intersect',accept:'.'+mbOptions.baseClass,drop:FileDropped,hoverClass:mbOptions.hoverClass,activeClass:mbOptions.highlightClass});","\t167: \t\t\t\t\ticon.draggable({stack:'files',revert:true,zIndex:1000,opacity:0.5,scroll:false});","\t170: \t\t\tif (item.type == ICONTYPE_FILE && item.path.search(/.jpeg|.jpg|.png|.gif|.tif|.tiff/i) > -1) {","","/clouddrive/clouddrive/myapp/templates/static/styles/bootstrap.css:","\t1177: input[type=\"file\"],","\t1188: input[type=\"file\"] {","\t1210: input[type=\"file\"]:focus,","\t2344: .icon-film {","\t2396: .icon-file {","\t2863: .icon-filter {","\t2970:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff0088cc', endColorstr='#ff0077b3', GradientType=0);","\t2986:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff0088cc', endColorstr='#ff0077b3', GradientType=0);","\t3001:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3178:   filter: alpha(opacity=20);","\t3187:   filter: alpha(opacity=40);","\t3227:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#ffe6e6e6', GradientType=0);","\t3228:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3286:   filter: alpha(opacity=65);","\t3373:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff0088cc', endColorstr='#ff0044cc', GradientType=0);","\t3374:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3406:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffbb450', endColorstr='#fff89406', GradientType=0);","\t3407:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3439:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffee5f5b', endColorstr='#ffbd362f', GradientType=0);","\t3440:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3472:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff62c462', endColorstr='#ff51a351', GradientType=0);","\t3473:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3505:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de', endColorstr='#ff2f96b4', GradientType=0);","\t3506:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t3538:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff444444', endColorstr='#ff222222', GradientType=0);","\t3539:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t4222:   filter: alpha(opacity=100);","\t4387:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#fff2f2f2', GradientType=0);","\t4661:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff2f2f2', endColorstr='#ffe5e5e5', GradientType=0);","\t4662:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t4802:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff222222', endColorstr='#ff111111', GradientType=0);","\t4929:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff151515', endColorstr='#ff040404', GradientType=0);","\t4930:   filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);","\t5196:   filter: alpha(opacity=80);","\t5305:   filter: alpha(opacity=0);","\t5311:   filter: alpha(opacity=80);","\t5793:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fff5f5f5', endColorstr='#fff9f9f9', GradientType=0);","\t5814:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff149bdf', endColorstr='#ff0480be', GradientType=0);","\t5863:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffee5f5b', endColorstr='#ffc43c35', GradientType=0);","\t5885:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff62c462', endColorstr='#ff57a957', GradientType=0);","\t5907:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ff5bc0de', endColorstr='#ff339bb9', GradientType=0);","\t5929:   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#fffbb450', endColorstr='#fff89406', GradientType=0);","\t6055:   filter: alpha(opacity=50);","\t6068:   filter: alpha(opacity=90);","","Found 5076 matches in 148 files ","",""],"id":3},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001filemanager\u0001 in\u0001/clouddrive\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/views.py:",""]},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t131: \treturn render(request,'filemanager.html', {})","",""]},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/elfinder.full.js:",""]},{"start":{"row":6,"column":0},"end":{"row":12,"column":0},"action":"insert","lines":["\t513: \t * Return true if filemanager is active","\t522: \t * Return true if filemanager is visible","\t2828: \t * Additional css class for filemanager node.","\t6875:  * Put files in filemanager clipboard.","\t6917:  * Put files in filemanager clipboard.","",""]},{"start":{"row":12,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/elFinder/js/elFinder.js:",""]},{"start":{"row":13,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["\t615: \t * Return true if filemanager is active","\t624: \t * Return true if filemanager is visible","",""]},{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/elFinder/js/elFinder.options.js:",""]},{"start":{"row":17,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["\t99: \t * Additional css class for filemanager node.","",""]},{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/copy.js:",""]},{"start":{"row":20,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["\t4:  * Put files in filemanager clipboard.","",""]},{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/cut.js:",""]},{"start":{"row":23,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["\t4:  * Put files in filemanager clipboard.","",""]},{"start":{"row":25,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/example.html:",""]},{"start":{"row":26,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["\t4: <link type=\"text/css\" rel=\"stylesheet\" href=\"jquery.fileManager.css\" />","\t11: <script type=\"text/javascript\" src=\"jquery.fileManager.js\"></script>","\t15: <h1>jQuery.fileManager</h1>","\t19: <div id=\"filemanager\"></div>","\t23: \t$('#filemanager').fileManager({ajaxPath:'fileManager.php'});","\t28: <div id=\"filemanager_upload\"></div>","\t30: \t$('#filemanager_upload').fileManager({ajaxPath:'fileManager.php',upload:true});","\t35: <div id=\"filemanager_events\"></div>","\t37: \t$('#filemanager_events').fileManager({","\t38: \t\tajaxPath:'fileManager.php',","",""]},{"start":{"row":37,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/fileManager.php:",""]},{"start":{"row":38,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["\t35: jqFileManager::ProcessAjax(  dirname(__FILE__).'/uploads'  );","\t38: class jqFileManager {","\t63: \t\treturn self::GetPathFolder().'jquery.fileManager.js';","\t66: \t\treturn self::GetPathFolder().'jquery.fileManager.css';","",""]},{"start":{"row":43,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/jquery.fileManager.js:",""]},{"start":{"row":44,"column":0},"end":{"row":47,"column":0},"action":"insert","lines":["\t37: \t$.fn.fileManager = function(settings, pluploadOptions) {","\t141: \t\t\ttarget.fileManager($.extend({},mbOptions,{path:path}),pluploadOptions);","",""]},{"start":{"row":47,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["Found 32 matches in 9 files ",""]},{"start":{"row":48,"column":0},"end":{"row":49,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":43},"end":{"row":0,"column":73},"action":"insert","lines":[" (Found 32 matches in 9 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":49,"column":0},"action":"remove","lines":["Searching for \u0001filemanager\u0001 in\u0001/clouddrive\u0001 (Found 32 matches in 9 files)","","/clouddrive/clouddrive/myapp/views.py:","\t131: \treturn render(request,'filemanager.html', {})","","/clouddrive/clouddrive/myapp/templates/static/django-elfinder-master/elfinder/static/js/elfinder.full.js:","\t513: \t * Return true if filemanager is active","\t522: \t * Return true if filemanager is visible","\t2828: \t * Additional css class for filemanager node.","\t6875:  * Put files in filemanager clipboard.","\t6917:  * Put files in filemanager clipboard.","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/elFinder.js:","\t615: \t * Return true if filemanager is active","\t624: \t * Return true if filemanager is visible","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/elFinder.options.js:","\t99: \t * Additional css class for filemanager node.","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/copy.js:","\t4:  * Put files in filemanager clipboard.","","/clouddrive/clouddrive/myapp/templates/static/elFinder/js/commands/cut.js:","\t4:  * Put files in filemanager clipboard.","","/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/example.html:","\t4: <link type=\"text/css\" rel=\"stylesheet\" href=\"jquery.fileManager.css\" />","\t11: <script type=\"text/javascript\" src=\"jquery.fileManager.js\"></script>","\t15: <h1>jQuery.fileManager</h1>","\t19: <div id=\"filemanager\"></div>","\t23: \t$('#filemanager').fileManager({ajaxPath:'fileManager.php'});","\t28: <div id=\"filemanager_upload\"></div>","\t30: \t$('#filemanager_upload').fileManager({ajaxPath:'fileManager.php',upload:true});","\t35: <div id=\"filemanager_events\"></div>","\t37: \t$('#filemanager_events').fileManager({","\t38: \t\tajaxPath:'fileManager.php',","","/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/fileManager.php:","\t35: jqFileManager::ProcessAjax(  dirname(__FILE__).'/uploads'  );","\t38: class jqFileManager {","\t63: \t\treturn self::GetPathFolder().'jquery.fileManager.js';","\t66: \t\treturn self::GetPathFolder().'jquery.fileManager.css';","","/clouddrive/clouddrive/myapp/templates/static/jquery.fileManager-master/jquery.fileManager.js:","\t37: \t$.fn.fileManager = function(settings, pluploadOptions) {","\t141: \t\t\ttarget.fileManager($.extend({},mbOptions,{path:path}),pluploadOptions);","","Found 32 matches in 9 files ","",""],"id":4},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001profprocess/anager\u0001 in\u0001/clouddrive\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""]}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":0,"column":50},"end":{"row":0,"column":79},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["Searching for \u0001profprocess/anager\u0001 in\u0001/clouddrive\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""],"id":6},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001process/\u0001 in\u0001/clouddrive\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/clouddrive/urls.py:",""]},{"start":{"row":3,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["\t38: #     url(r'^process/$', 'myapp.views.process'),","\t57: #     path(r'^process/$', views.process, name=\"process\"),","",""]},{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/clouddrive/urls.py:",""]},{"start":{"row":7,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["\t38: #     url(r'^process/$', 'myapp.views.process'),","\t57: #     path(r'^process/$', views.process, name=\"process\"),","",""]},{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/urls.py:",""]},{"start":{"row":11,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["\t13:     path('process/', views.process, name=\"process\"),","",""]},{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["Found 5 matches in 3 files ",""]}],[{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":7},{"start":{"row":0,"column":40},"end":{"row":0,"column":69},"action":"insert","lines":[" (Found 5 matches in 3 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":15,"column":0},"action":"remove","lines":["Searching for \u0001process/\u0001 in\u0001/clouddrive\u0001 (Found 5 matches in 3 files)","","/clouddrive/urls.py:","\t38: #     url(r'^process/$', 'myapp.views.process'),","\t57: #     path(r'^process/$', views.process, name=\"process\"),","","/clouddrive/clouddrive/clouddrive/urls.py:","\t38: #     url(r'^process/$', 'myapp.views.process'),","\t57: #     path(r'^process/$', views.process, name=\"process\"),","","/clouddrive/clouddrive/myapp/urls.py:","\t13:     path('process/', views.process, name=\"process\"),","","Found 5 matches in 3 files ","",""],"id":8},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001aws_access_key\u0001 in\u0001/clouddrive\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/s3upload.py:",""]},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t30:      #conn = boto3.resource('s3',aws_access_key_id='<enter>',","",""]},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["Found 1 match in 1 file ",""]}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":9},{"start":{"row":0,"column":46},"end":{"row":0,"column":72},"action":"insert","lines":[" (Found 1 match in 1 file)"]}],[{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["Searching for \u0001aws_access_key\u0001 in\u0001/clouddrive\u0001 (Found 1 match in 1 file)","","/clouddrive/clouddrive/myapp/s3upload.py:","\t30:      #conn = boto3.resource('s3',aws_access_key_id='<enter>',","","Found 1 match in 1 file ","",""],"id":10},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001access_key\u0001 in\u0001/clouddrive\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/s3upload.py:",""]},{"start":{"row":3,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["\t30:      #conn = boto3.resource('s3',aws_access_key_id='<enter>',","\t31:      #aws_secret_access_key='<enter>')","",""]},{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["Found 2 matches in 1 file ",""]}],[{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":11},{"start":{"row":0,"column":42},"end":{"row":0,"column":70},"action":"insert","lines":[" (Found 2 matches in 1 file)"]}],[{"start":{"row":0,"column":0},"end":{"row":8,"column":0},"action":"remove","lines":["Searching for \u0001access_key\u0001 in\u0001/clouddrive\u0001 (Found 2 matches in 1 file)","","/clouddrive/clouddrive/myapp/s3upload.py:","\t30:      #conn = boto3.resource('s3',aws_access_key_id='<enter>',","\t31:      #aws_secret_access_key='<enter>')","","Found 2 matches in 1 file ","",""],"id":12},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001upload_to_s3_bucket_root\u0001 in\u0001/clouddrive\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/s3upload.py:",""]},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t44: def upload_to_s3_bucket_root(bucketname, filename):","",""]},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["Found 1 match in 1 file ",""]},{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":56},"end":{"row":0,"column":82},"action":"insert","lines":[" (Found 1 match in 1 file)"]}],[{"start":{"row":0,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["Searching for \u0001upload_to_s3_bucket_root\u0001 in\u0001/clouddrive\u0001 (Found 1 match in 1 file)","","/clouddrive/clouddrive/myapp/s3upload.py:","\t44: def upload_to_s3_bucket_root(bucketname, filename):","","Found 1 match in 1 file ","",""],"id":13},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001upload_to_s3_bucket_root\u0001 in\u0001/clouddrive\u0001","",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/clouddrive/clouddrive/myapp/s3upload.py:",""]},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t44: def upload_to_s3_bucket_root(bucketname, filename):","",""]},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["Found 1 match in 1 file ",""]}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":14},{"start":{"row":0,"column":56},"end":{"row":0,"column":82},"action":"insert","lines":[" (Found 1 match in 1 file)"]}]]},"ace":{"folds":[],"customSyntax":"c9search","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":7,"column":0},"end":{"row":7,"column":0},"isBackwards":false},"options":{"tabSize":4,"useSoftTabs":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1667181677684}